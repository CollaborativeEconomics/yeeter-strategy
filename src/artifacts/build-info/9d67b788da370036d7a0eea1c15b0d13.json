{
	"id": "9d67b788da370036d7a0eea1c15b0d13",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/YeeterStrategy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n// External Libraries\n// import {ReentrancyGuard} from \"openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\";\n\n// Intefaces\nimport {IAllo} from \"allo/contracts/core/interfaces/IAllo.sol\";\nimport {IRegistry} from \"allo/contracts/core/interfaces/IRegistry.sol\";\n\n// Core Contracts\nimport {BaseStrategy} from \"allo/contracts/strategies/BaseStrategy.sol\";\n\n\ncontract YeeterStrategy is BaseStrategy {\n    error INPUT_LENGTH_MISMATCH();\n    error NOOP();\n\n    constructor(address _allo) BaseStrategy(_allo, \"Yeeter Strategy\") {}\n\n    function initialize(uint256 _poolId, bytes memory _data) external virtual override {\n        __BaseStrategy_init(_poolId);\n        emit Initialized(_poolId, _data);\n    }\n\n    /// @notice Withdraw funds stuck on contract\n    /// @param _token Token address\n    /// @param _recipient Address to send the funds to\n    /// @param _amount Amount to withdraw\n    function withdraw(address _token, address _recipient, uint256 _amount) external onlyPoolManager(msg.sender) {\n        _transferAmount(_token, _recipient, _amount);\n    }\n\n    receive() external payable {}\n\n    /// @notice Allocate Yeeter funds to recipients\n    /// @param _data Array of recipientAddress , Array of amounts and the token address to allocate the funds to\n    function _allocate(bytes memory _data, address _sender) internal virtual override onlyPoolManager(_sender) {\n        // Decode the data\n        (address[] memory _recipientIds, uint256[] memory _amounts, address _token) =\n            abi.decode(_data, (address[], uint256[], address));\n\n        uint256 payoutLength = _recipientIds.length;\n\n        // Assert at least one recipient\n        if (payoutLength == 0) {\n            revert INPUT_LENGTH_MISMATCH();\n        }\n\n        // Assert recipient and amounts length are equal\n        if (payoutLength != _amounts.length) {\n            revert INPUT_LENGTH_MISMATCH();\n        }\n\n        // Transfer the funds to the recipient\n        for (uint256 i; i < payoutLength;) {\n            uint256 _amount = _amounts[i];\n            address _recipientId = _recipientIds[i];\n\n            _transferAmount(_token, _recipientId, _amount);\n            emit Allocated(_recipientId, _amount, _token, _sender);\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // Not used in this Strategy\n    function allocate(address[] memory _recipientIds, uint256[] memory _amounts, address _token) external onlyPoolManager(msg.sender) {\n      bytes memory data = abi.encode(_recipientIds, _amounts, _token);\n      _allocate(data, msg.sender);\n    }\n\n    function _distribute(address[] memory, bytes memory, address) internal virtual override {\n        revert NOOP();\n    }\n\n    function _getRecipientStatus(address) internal view virtual override returns (Status) {\n        revert NOOP();\n    }\n\n    function _isValidAllocator(address) internal view virtual override returns (bool) {\n        revert NOOP();\n    }\n\n    function _registerRecipient(bytes memory, address) internal virtual override returns (address) {\n        revert NOOP();\n    }\n\n    function _getPayout(address, bytes memory) internal view virtual override returns (PayoutSummary memory) {\n        revert NOOP();\n    }\n}"
			},
			"lib/allo-v2/contracts/strategies/BaseStrategy.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// Interfaces\nimport \"../core/interfaces/IStrategy.sol\";\n\n// Libraries\nimport {Transfer} from \"../core/libraries/Transfer.sol\";\nimport {Errors} from \"../core/libraries/Errors.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title BaseStrategy Contract\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice This contract is the base contract for all strategies\n/// @dev This contract is implemented by all strategies.\nabstract contract BaseStrategy is IStrategy, Transfer, Errors {\n    /// ==========================\n    /// === Storage Variables ====\n    /// ==========================\n\n    IAllo internal immutable allo;\n    bytes32 internal immutable strategyId;\n    bool internal poolActive;\n    uint256 internal poolId;\n    uint256 internal poolAmount;\n\n    /// ====================================\n    /// ========== Constructor =============\n    /// ====================================\n\n    /// @notice Constructor to set the Allo contract and \"strategyId'.\n    /// @param _allo Address of the Allo contract.\n    /// @param _name Name of the strategy\n    constructor(address _allo, string memory _name) {\n        allo = IAllo(_allo);\n        strategyId = keccak256(abi.encode(_name));\n    }\n\n    /// ====================================\n    /// =========== Modifiers ==============\n    /// ====================================\n\n    /// @notice Modifier to check if the 'msg.sender' is the Allo contract.\n    /// @dev Reverts if the 'msg.sender' is not the Allo contract.\n    modifier onlyAllo() {\n        _checkOnlyAllo();\n        _;\n    }\n\n    /// @notice Modifier to check if the '_sender' is a pool manager.\n    /// @dev Reverts if the '_sender' is not a pool manager.\n    /// @param _sender The address to check if they are a pool manager\n    modifier onlyPoolManager(address _sender) {\n        _checkOnlyPoolManager(_sender);\n        _;\n    }\n\n    /// @notice Modifier to check if the pool is active.\n    /// @dev Reverts if the pool is not active.\n    modifier onlyActivePool() {\n        _checkOnlyActivePool();\n        _;\n    }\n\n    /// @notice Modifier to check if the pool is inactive.\n    /// @dev Reverts if the pool is active.\n    modifier onlyInactivePool() {\n        _checkInactivePool();\n        _;\n    }\n\n    /// @notice Modifier to check if the pool is initialized.\n    /// @dev Reverts if the pool is not initialized.\n    modifier onlyInitialized() {\n        _checkOnlyInitialized();\n        _;\n    }\n\n    /// ================================\n    /// =========== Views ==============\n    /// ================================\n\n    /// @notice Getter for the 'Allo' contract.\n    /// @return The Allo contract\n    function getAllo() external view override returns (IAllo) {\n        return allo;\n    }\n\n    /// @notice Getter for the 'poolId'.\n    /// @return The ID of the pool\n    function getPoolId() external view override returns (uint256) {\n        return poolId;\n    }\n\n    /// @notice Getter for the 'strategyId'.\n    /// @return The ID of the strategy\n    function getStrategyId() external view override returns (bytes32) {\n        return strategyId;\n    }\n\n    /// @notice Getter for the 'poolAmount'.\n    /// @return The balance of the pool\n    function getPoolAmount() external view virtual override returns (uint256) {\n        return poolAmount;\n    }\n\n    /// @notice Getter for whether or not the pool is active.\n    /// @return 'true' if the pool is active, otherwise 'false'\n    function isPoolActive() external view override returns (bool) {\n        return _isPoolActive();\n    }\n\n    /// @notice Getter for the status of a recipient.\n    /// @param _recipientId The ID of the recipient\n    /// @return The status of the recipient\n    function getRecipientStatus(address _recipientId) external view virtual returns (Status) {\n        return _getRecipientStatus(_recipientId);\n    }\n\n    /// ====================================\n    /// =========== Functions ==============\n    /// ====================================\n\n    /// @notice Initializes the 'Basetrategy'.\n    /// @dev Will revert if the poolId is invalid or already initialized\n    /// @param _poolId ID of the pool\n    function __BaseStrategy_init(uint256 _poolId) internal virtual onlyAllo {\n        // check if pool ID is not initialized already, if it is, revert\n        if (poolId != 0) revert ALREADY_INITIALIZED();\n\n        // check if pool ID is valid and not zero (0), if it is, revert\n        if (_poolId == 0) revert INVALID();\n        poolId = _poolId;\n    }\n\n    /// @notice Increases the pool amount.\n    /// @dev Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\n    /// @param _amount The amount to increase the pool by\n    function increasePoolAmount(uint256 _amount) external override onlyAllo {\n        _beforeIncreasePoolAmount(_amount);\n        poolAmount += _amount;\n        _afterIncreasePoolAmount(_amount);\n    }\n\n    /// @notice Registers a recipient.\n    /// @dev Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the\n    ///      strategy implementation. Only 'Allo' contract can call this when it is initialized.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    /// @return recipientId The recipientId\n    function registerRecipient(bytes memory _data, address _sender)\n        external\n        payable\n        onlyAllo\n        onlyInitialized\n        returns (address recipientId)\n    {\n        _beforeRegisterRecipient(_data, _sender);\n        recipientId = _registerRecipient(_data, _sender);\n        _afterRegisterRecipient(_data, _sender);\n    }\n\n    /// @notice Allocates to a recipient.\n    /// @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n    ///      call this when it is initialized.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {\n        _beforeAllocate(_data, _sender);\n        _allocate(_data, _sender);\n        _afterAllocate(_data, _sender);\n    }\n\n    /// @notice Distributes funds (tokens) to recipients.\n    /// @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n    ///      call this when it is initialized.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The data to use to distribute to the recipients\n    /// @param _sender The address of the sender\n    function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)\n        external\n        onlyAllo\n        onlyInitialized\n    {\n        _beforeDistribute(_recipientIds, _data, _sender);\n        _distribute(_recipientIds, _data, _sender);\n        _afterDistribute(_recipientIds, _data, _sender);\n    }\n\n    /// @notice Gets the payout summary for recipients.\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The data to use to get the payout summary for the recipients\n    /// @return The payout summary for the recipients\n    function getPayouts(address[] memory _recipientIds, bytes[] memory _data)\n        external\n        view\n        virtual\n        override\n        returns (PayoutSummary[] memory)\n    {\n        uint256 recipientLength = _recipientIds.length;\n        // check if the length of the recipient IDs and data arrays are equal, if they are not, revert\n        if (recipientLength != _data.length) revert ARRAY_MISMATCH();\n\n        PayoutSummary[] memory payouts = new PayoutSummary[](recipientLength);\n        for (uint256 i; i < recipientLength;) {\n            payouts[i] = _getPayout(_recipientIds[i], _data[i]);\n            unchecked {\n                i++;\n            }\n        }\n        return payouts;\n    }\n\n    /// @notice Checks if the '_allocator' is a valid allocator.\n    /// @dev How the allocator is determined is up to the strategy implementation.\n    /// @param _allocator The address to check if it is a valid allocator for the strategy.\n    /// @return 'true' if the address is a valid allocator, 'false' otherwise\n    function isValidAllocator(address _allocator) external view virtual override returns (bool) {\n        return _isValidAllocator(_allocator);\n    }\n\n    /// ====================================\n    /// ============ Internal ==============\n    /// ====================================\n\n    /// @notice Checks if the 'msg.sender' is the Allo contract.\n    /// @dev Reverts if the 'msg.sender' is not the Allo contract.\n    function _checkOnlyAllo() internal view {\n        if (msg.sender != address(allo)) revert UNAUTHORIZED();\n    }\n\n    /// @notice Checks if the '_sender' is a pool manager.\n    /// @dev Reverts if the '_sender' is not a pool manager.\n    /// @param _sender The address to check if they are a pool manager\n    function _checkOnlyPoolManager(address _sender) internal view {\n        if (!allo.isPoolManager(poolId, _sender)) revert UNAUTHORIZED();\n    }\n\n    /// @notice Checks if the pool is active.\n    /// @dev Reverts if the pool is not active.\n    function _checkOnlyActivePool() internal view {\n        if (!poolActive) revert POOL_INACTIVE();\n    }\n\n    /// @notice Checks if the pool is inactive.\n    /// @dev Reverts if the pool is active.\n    function _checkInactivePool() internal view {\n        if (poolActive) revert POOL_ACTIVE();\n    }\n\n    /// @notice Checks if the pool is initialized.\n    /// @dev Reverts if the pool is not initialized.\n    function _checkOnlyInitialized() internal view {\n        if (poolId == 0) revert NOT_INITIALIZED();\n    }\n\n    /// @notice Set the pool to active or inactive status.\n    /// @dev This will emit a 'PoolActive()' event. Used by the strategy implementation.\n    /// @param _active The status to set, 'true' means active, 'false' means inactive\n    function _setPoolActive(bool _active) internal {\n        poolActive = _active;\n        emit PoolActive(_active);\n    }\n\n    /// @notice Checks if the pool is active.\n    /// @dev Used by the strategy implementation.\n    /// @return 'true' if the pool is active, otherwise 'false'\n    function _isPoolActive() internal view virtual returns (bool) {\n        return poolActive;\n    }\n\n    /// @notice Checks if the allocator is valid\n    /// @param _allocator The allocator address\n    /// @return 'true' if the allocator is valid, otherwise 'false'\n    function _isValidAllocator(address _allocator) internal view virtual returns (bool);\n\n    /// @notice This will register a recipient, set their status (and any other strategy specific values), and\n    ///         return the ID of the recipient.\n    /// @dev Able to change status all the way up to Accepted, or to Pending and if there are more steps, additional\n    ///      functions should be added to allow the owner to check this. The owner could also check attestations directly\n    ///      and then Accept for instance.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    /// @return The ID of the recipient\n    function _registerRecipient(bytes memory _data, address _sender) internal virtual returns (address);\n\n    /// @notice This will allocate to a recipient.\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function _allocate(bytes memory _data, address _sender) internal virtual;\n\n    /// @notice This will distribute funds (tokens) to recipients.\n    /// @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n    /// this contract will need to track the amount paid already, so that it doesn't double pay.\n    /// @param _recipientIds The ids of the recipients to distribute to\n    /// @param _data Data required will depend on the strategy implementation\n    /// @param _sender The address of the sender\n    function _distribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual;\n\n    /// @notice This will get the payout summary for a recipient.\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\n    /// @param _recipientId The ID of the recipient\n    /// @param _data The data to use to get the payout summary for the recipient\n    /// @return The payout summary for the recipient\n    function _getPayout(address _recipientId, bytes memory _data)\n        internal\n        view\n        virtual\n        returns (PayoutSummary memory);\n\n    /// @notice This will get the status of a recipient.\n    /// @param _recipientId The ID of the recipient\n    /// @return The status of the recipient\n    function _getRecipientStatus(address _recipientId) internal view virtual returns (Status);\n\n    /// ===================================\n    /// ============== Hooks ==============\n    /// ===================================\n\n    /// @notice Hook called before increasing the pool amount.\n    /// @param _amount The amount to increase the pool by\n    function _beforeIncreasePoolAmount(uint256 _amount) internal virtual {}\n\n    /// @notice Hook called after increasing the pool amount.\n    /// @param _amount The amount to increase the pool by\n    function _afterIncreasePoolAmount(uint256 _amount) internal virtual {}\n\n    /// @notice Hook called before registering a recipient.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    function _beforeRegisterRecipient(bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called after registering a recipient.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    function _afterRegisterRecipient(bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called before allocating to a recipient.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function _beforeAllocate(bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called after allocating to a recipient.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function _afterAllocate(bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called before distributing funds (tokens) to recipients.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The data to use to distribute to the recipients\n    /// @param _sender The address of the sender\n    function _beforeDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {}\n\n    /// @notice Hook called after distributing funds (tokens) to recipients.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The data to use to distribute to the recipients\n    /// @param _sender The address of the sender\n    function _afterDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {}\n}\n"
			},
			"lib/allo-v2/contracts/core/interfaces/IRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n// Internal Libraries\nimport {Metadata} from \"../libraries/Metadata.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title IRegistry Interface\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice Interface for the Registry contract and exposes all functions needed to use the Registry\n///         within the Allo protocol.\n/// @dev The Registry Interface is used to interact with the Allo protocol and create profiles\n///      that can be used to interact with the Allo protocol. The Registry is the main contract\n///      that all other contracts interact with to get the 'Profile' information needed to\n///      interact with the Allo protocol. The Registry is also used to create new profiles\n///      and update existing profiles. The Registry is also used to add and remove members\n///      from a profile. The Registry will not always be used in a strategy and will depend on\n///      the strategy being used.\ninterface IRegistry {\n    /// ======================\n    /// ======= Structs ======\n    /// ======================\n\n    /// @dev The Profile struct that all profiles are based from\n    struct Profile {\n        bytes32 id;\n        uint256 nonce;\n        string name;\n        Metadata metadata;\n        address owner;\n        address anchor;\n    }\n\n    /// ======================\n    /// ======= Events =======\n    /// ======================\n\n    /// @dev Emitted when a profile is created. This will return your anchor address.\n    event ProfileCreated(\n        bytes32 indexed profileId, uint256 nonce, string name, Metadata metadata, address owner, address anchor\n    );\n\n    /// @dev Emitted when a profile name is updated. This will update the anchor when the name is updated and return it.\n    event ProfileNameUpdated(bytes32 indexed profileId, string name, address anchor);\n\n    /// @dev Emitted when a profile's metadata is updated.\n    event ProfileMetadataUpdated(bytes32 indexed profileId, Metadata metadata);\n\n    /// @dev Emitted when a profile owner is updated.\n    event ProfileOwnerUpdated(bytes32 indexed profileId, address owner);\n\n    /// @dev Emitted when a profile pending owner is updated.\n    event ProfilePendingOwnerUpdated(bytes32 indexed profileId, address pendingOwner);\n\n    /// =========================\n    /// ==== View Functions =====\n    /// =========================\n\n    /// @dev Returns the 'Profile' for a '_profileId' passed\n    /// @param _profileId The 'profileId' to return the 'Profile' for\n    /// @return profile The 'Profile' for the '_profileId' passed\n    function getProfileById(bytes32 _profileId) external view returns (Profile memory profile);\n\n    /// @dev Returns the 'Profile' for an '_anchor' passed\n    /// @param _anchor The 'anchor' to return the 'Profile' for\n    /// @return profile The 'Profile' for the '_anchor' passed\n    function getProfileByAnchor(address _anchor) external view returns (Profile memory profile);\n\n    /// @dev Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in\n    /// @param _profileId The 'profileId' to check if the '_account' is a member or owner of\n    /// @param _account The 'account' to check if they are a member or owner of the '_profileId' passed in\n    /// @return isOwnerOrMemberOfProfile A boolean if the '_account' is a member or owner of the '_profileId' passed in\n    function isOwnerOrMemberOfProfile(bytes32 _profileId, address _account)\n        external\n        view\n        returns (bool isOwnerOrMemberOfProfile);\n\n    /// @dev Returns a boolean if the '_account' is an owner of the '_profileId' passed in\n    /// @param _profileId The 'profileId' to check if the '_account' is an owner of\n    /// @param _owner The 'owner' to check if they are an owner of the '_profileId' passed in\n    /// @return isOwnerOfProfile A boolean if the '_account' is an owner of the '_profileId' passed in\n    function isOwnerOfProfile(bytes32 _profileId, address _owner) external view returns (bool isOwnerOfProfile);\n\n    /// @dev Returns a boolean if the '_account' is a member of the '_profileId' passed in\n    /// @param _profileId The 'profileId' to check if the '_account' is a member of\n    /// @param _member The 'member' to check if they are a member of the '_profileId' passed in\n    /// @return isMemberOfProfile A boolean if the '_account' is a member of the '_profileId' passed in\n    function isMemberOfProfile(bytes32 _profileId, address _member) external view returns (bool isMemberOfProfile);\n\n    /// ====================================\n    /// ==== External/Public Functions =====\n    /// ====================================\n\n    /// @dev Creates a new 'Profile' and returns the 'profileId' of the new profile\n    ///\n    /// Note: The 'name' and 'nonce' are used to generate the 'anchor' address\n    ///\n    /// Requirements: None, anyone can create a new profile\n    ///\n    /// @param _nonce The nonce to use to generate the 'anchor' address\n    /// @param _name The name to use to generate the 'anchor' address\n    /// @param _metadata The 'Metadata' to use to generate the 'anchor' address\n    /// @param _owner The 'owner' to use to generate the 'anchor' address\n    /// @param _members The 'members' to use to generate the 'anchor' address\n    /// @return profileId The 'profileId' of the new profile\n    function createProfile(\n        uint256 _nonce,\n        string memory _name,\n        Metadata memory _metadata,\n        address _owner,\n        address[] memory _members\n    ) external returns (bytes32 profileId);\n\n    /// @dev Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address\n    ///\n    /// Requirements: Only the 'Profile' owner can update the name\n    ///\n    /// Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'\n    ///       so please use caution. You can always recreate your 'anchor' address by updating the name back\n    ///       to the original name used to create the profile.\n    ///\n    /// @param _profileId The 'profileId' to update the name for\n    /// @param _name The new 'name' value\n    /// @return anchor The new 'anchor' address\n    function updateProfileName(bytes32 _profileId, string memory _name) external returns (address anchor);\n\n    /// @dev Updates the 'Metadata' of the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can update the metadata\n    ///\n    /// @param _profileId The 'profileId' to update the metadata for\n    /// @param _metadata The new 'Metadata' value\n    function updateProfileMetadata(bytes32 _profileId, Metadata memory _metadata) external;\n\n    /// @dev Updates the pending 'owner' of the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can update the pending owner\n    ///\n    /// @param _profileId The 'profileId' to update the pending owner for\n    /// @param _pendingOwner The new pending 'owner' value\n    function updateProfilePendingOwner(bytes32 _profileId, address _pendingOwner) external;\n\n    /// @dev Accepts the pending 'owner' of the '_profileId' passed in\n    ///\n    /// Requirements: Only the pending owner can accept the ownership\n    ///\n    /// @param _profileId The 'profileId' to accept the ownership for\n    function acceptProfileOwnership(bytes32 _profileId) external;\n\n    /// @dev Adds members to the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can add members\n    ///\n    /// @param _profileId The 'profileId' to add members to\n    /// @param _members The members to add to the '_profileId' passed in\n    function addMembers(bytes32 _profileId, address[] memory _members) external;\n\n    /// @dev Removes members from the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can remove members\n    ///\n    /// @param _profileId The 'profileId' to remove members from\n    /// @param _members The members to remove from the '_profileId' passed in\n    function removeMembers(bytes32 _profileId, address[] memory _members) external;\n\n    /// @dev Recovers funds from the contract\n    ///\n    /// Requirements: Must be the Allo owner\n    ///\n    /// @param _token The token you want to use to recover funds\n    /// @param _recipient The recipient of the recovered funds\n    function recoverFunds(address _token, address _recipient) external;\n}\n"
			},
			"lib/allo-v2/contracts/core/interfaces/IAllo.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// Interfaces\nimport {IRegistry} from \"./IRegistry.sol\";\nimport {IStrategy} from \"./IStrategy.sol\";\n// Internal Libraries\nimport {Metadata} from \"../libraries/Metadata.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Allo Interface\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.\ninterface IAllo {\n    /// ======================\n    /// ======= Structs ======\n    /// ======================\n\n    /// @notice the Pool struct that all strategy pools are based from\n    struct Pool {\n        bytes32 profileId;\n        IStrategy strategy;\n        address token;\n        Metadata metadata;\n        bytes32 managerRole;\n        bytes32 adminRole;\n    }\n\n    /// ======================\n    /// ======= Events =======\n    /// ======================\n\n    /// @notice Event emitted when a new pool is created\n    /// @param poolId ID of the pool created\n    /// @param profileId ID of the profile the pool is associated with\n    /// @param strategy Address of the strategy contract\n    /// @param token Address of the token pool was funded with when created\n    /// @param amount Amount pool was funded with when created\n    /// @param metadata Pool metadata\n    event PoolCreated(\n        uint256 indexed poolId,\n        bytes32 indexed profileId,\n        IStrategy strategy,\n        address token,\n        uint256 amount,\n        Metadata metadata\n    );\n\n    /// @notice Emitted when a pools metadata is updated\n    /// @param poolId ID of the pool updated\n    /// @param metadata Pool metadata that was updated\n    event PoolMetadataUpdated(uint256 indexed poolId, Metadata metadata);\n\n    /// @notice Emitted when a pool is funded\n    /// @param poolId ID of the pool funded\n    /// @param amount Amount funded to the pool\n    /// @param fee Amount of the fee paid to the treasury\n    event PoolFunded(uint256 indexed poolId, uint256 amount, uint256 fee);\n\n    /// @notice Emitted when the base fee is paid\n    /// @param poolId ID of the pool the base fee was paid for\n    /// @param amount Amount of the base fee paid\n    event BaseFeePaid(uint256 indexed poolId, uint256 amount);\n\n    /// @notice Emitted when the treasury address is updated\n    /// @param treasury Address of the new treasury\n    event TreasuryUpdated(address treasury);\n\n    /// @notice Emitted when the percent fee is updated\n    /// @param percentFee New percentage for the fee\n    event PercentFeeUpdated(uint256 percentFee);\n\n    /// @notice Emitted when the base fee is updated\n    /// @param baseFee New base fee amount\n    event BaseFeeUpdated(uint256 baseFee);\n\n    /// @notice Emitted when the registry address is updated\n    /// @param registry Address of the new registry\n    event RegistryUpdated(address registry);\n\n    /// @notice Emitted when a strategy is approved and added to the cloneable strategies\n    /// @param strategy Address of the strategy approved\n    event StrategyApproved(address strategy);\n\n    /// @notice Emitted when a strategy is removed from the cloneable strategies\n    /// @param strategy Address of the strategy removed\n    event StrategyRemoved(address strategy);\n\n    /// ====================================\n    /// ==== External/Public Functions =====\n    /// ====================================\n\n    /// @notice Initialize the Allo contract\n    /// @param _owner Address of the owner\n    /// @param _registry Address of the registry contract\n    /// @param _treasury Address of the treasury\n    /// @param _percentFee Percentage for the fee\n    /// @param _baseFee Base fee amount\n    function initialize(\n        address _owner,\n        address _registry,\n        address payable _treasury,\n        uint256 _percentFee,\n        uint256 _baseFee\n    ) external;\n\n    /// @notice Creates a new pool (with a custom strategy)\n    /// @dev 'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data\n    ///      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy\n    ///      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must\n    ///      be a member or owner of the profile id passed as '_profileId'.\n    /// @param _profileId The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n    /// @param _strategy The address of the deployed custom strategy\n    /// @param _initStrategyData The data to initialize the strategy\n    /// @param _token The address of the token you want to use in your pool\n    /// @param _amount The amount of the token you want to deposit into the pool on initialization\n    /// @param _metadata The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\n    /// @param _managers The managers of the pool, and can be added/removed later by the pool admin\n    /// @return poolId The ID of the pool\n    function createPoolWithCustomStrategy(\n        bytes32 _profileId,\n        address _strategy,\n        bytes memory _initStrategyData,\n        address _token,\n        uint256 _amount,\n        Metadata memory _metadata,\n        address[] memory _managers\n    ) external payable returns (uint256 poolId);\n\n    /// @notice Creates a new pool (by cloning a cloneable strategies).\n    /// @dev 'msg.sender' must be owner or member of the profile id passed as '_profileId'.\n    /// @param _profileId The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n    /// @param _strategy The address of the strategy contract the pool will use.\n    /// @param _initStrategyData The data to initialize the strategy\n    /// @param _token The address of the token\n    /// @param _amount The amount of the token\n    /// @param _metadata The metadata of the pool\n    /// @param _managers The managers of the pool\n    /// @custom:initstrategydata The encoded data will be specific to a given strategy requirements,\n    ///    reference the strategy implementation of 'initialize()'\n    function createPool(\n        bytes32 _profileId,\n        address _strategy,\n        bytes memory _initStrategyData,\n        address _token,\n        uint256 _amount,\n        Metadata memory _metadata,\n        address[] memory _managers\n    ) external payable returns (uint256 poolId);\n\n    /// @notice Updates a pools metadata.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _poolId The ID of the pool to update\n    /// @param _metadata The new metadata to set\n    function updatePoolMetadata(uint256 _poolId, Metadata memory _metadata) external;\n\n    /// @notice Update the registry address.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _registry The new registry address\n    function updateRegistry(address _registry) external;\n\n    /// @notice Updates the treasury address.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _treasury The new treasury address\n    function updateTreasury(address payable _treasury) external;\n\n    /// @notice Updates the percentage for the fee.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _percentFee The new percentage for the fee\n    function updatePercentFee(uint256 _percentFee) external;\n\n    /// @notice Updates the base fee.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _baseFee The new base fee\n    function updateBaseFee(uint256 _baseFee) external;\n\n    /// @notice Adds a strategy to the cloneable strategies.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _strategy The address of the strategy to add\n    function addToCloneableStrategies(address _strategy) external;\n\n    /// @notice Removes a strategy from the cloneable strategies.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _strategy The address of the strategy to remove\n    function removeFromCloneableStrategies(address _strategy) external;\n\n    /// @notice Adds a pool manager to the pool.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _poolId The ID of the pool to add the manager to\n    /// @param _manager The address of the manager to add\n    function addPoolManager(uint256 _poolId, address _manager) external;\n\n    /// @notice Removes a pool manager from the pool.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _poolId The ID of the pool to remove the manager from\n    /// @param _manager The address of the manager to remove\n    function removePoolManager(uint256 _poolId, address _manager) external;\n\n    /// @notice Recovers funds from a pool.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _token The token to recover\n    /// @param _recipient The address to send the recovered funds to\n    function recoverFunds(address _token, address _recipient) external;\n\n    /// @notice Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\n    /// @param _poolId The ID of the pool to register the recipient for\n    function registerRecipient(uint256 _poolId, bytes memory _data) external payable returns (address);\n\n    /// @notice Registers a batch of recipients.\n    /// @param _poolIds The pool ID's to register the recipients for\n    /// @param _data The data to pass to the strategy and may be handled differently by each strategy\n    function batchRegisterRecipient(uint256[] memory _poolIds, bytes[] memory _data)\n        external\n        returns (address[] memory);\n\n    /// @notice Funds a pool.\n    /// @dev 'msg.value' must be greater than 0 if the token is the native token\n    ///       or '_amount' must be greater than 0 if the token is not the native token.\n    /// @param _poolId The ID of the pool to fund\n    /// @param _amount The amount to fund the pool with\n    function fundPool(uint256 _poolId, uint256 _amount) external payable;\n\n    /// @notice Allocates funds to a recipient.\n    /// @dev Each strategy will handle the allocation of funds differently.\n    /// @param _poolId The ID of the pool to allocate funds from\n    /// @param _data The data to pass to the strategy and may be handled differently by each strategy.\n    function allocate(uint256 _poolId, bytes memory _data) external payable;\n\n    /// @notice Allocates funds to multiple recipients.\n    /// @dev Each strategy will handle the allocation of funds differently\n    function batchAllocate(uint256[] calldata _poolIds, bytes[] memory _datas) external;\n\n    /// @notice Distributes funds to recipients and emits {Distributed} event if successful\n    /// @dev Each strategy will handle the distribution of funds differently\n    /// @param _poolId The ID of the pool to distribute from\n    /// @param _recipientIds The recipient ids to distribute to\n    /// @param _data The data to pass to the strategy and may be handled differently by each strategy\n    function distribute(uint256 _poolId, address[] memory _recipientIds, bytes memory _data) external;\n\n    /// =========================\n    /// ==== View Functions =====\n    /// =========================\n\n    /// @notice Checks if an address is a pool admin.\n    /// @param _poolId The ID of the pool to check\n    /// @param _address The address to check\n    /// @return 'true' if the '_address' is a pool admin, otherwise 'false'\n    function isPoolAdmin(uint256 _poolId, address _address) external view returns (bool);\n\n    /// @notice Checks if an address is a pool manager.\n    /// @param _poolId The ID of the pool to check\n    /// @param _address The address to check\n    /// @return 'true' if the '_address' is a pool manager, otherwise 'false'\n    function isPoolManager(uint256 _poolId, address _address) external view returns (bool);\n\n    /// @notice Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\n    /// @param _strategy The address of the strategy to check\n    /// @return 'true' if the '_strategy' is cloneable, otherwise 'false'\n    function isCloneableStrategy(address _strategy) external view returns (bool);\n\n    /// @notice Returns the address of the strategy for a given 'poolId'\n    /// @param _poolId The ID of the pool to check\n    /// @return strategy The address of the strategy for the ID of the pool passed in\n    function getStrategy(uint256 _poolId) external view returns (address);\n\n    /// @notice Returns the current percent fee\n    /// @return percentFee The current percentage for the fee\n    function getPercentFee() external view returns (uint256);\n\n    /// @notice Returns the current base fee\n    /// @return baseFee The current base fee\n    function getBaseFee() external view returns (uint256);\n\n    /// @notice Returns the current treasury address\n    /// @return treasury The current treasury address\n    function getTreasury() external view returns (address payable);\n\n    /// @notice Returns the current registry address\n    /// @return registry The current registry address\n    function getRegistry() external view returns (IRegistry);\n\n    /// @notice Returns the 'Pool' struct for a given 'poolId'\n    /// @param _poolId The ID of the pool to check\n    /// @return pool The 'Pool' struct for the ID of the pool passed in\n    function getPool(uint256 _poolId) external view returns (Pool memory);\n\n    /// @notice Returns the current fee denominator\n    /// @dev 1e18 represents 100%\n    /// @return feeDenominator The current fee denominator\n    function getFeeDenominator() external view returns (uint256);\n}\n"
			},
			"lib/allo-v2/contracts/core/libraries/Errors.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.19;\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Errors\n/// @author @thelostone-mc <aditya@gitcoin.co>, @KurtMerbeth <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>\n/// @notice Library containing all custom errors the protocol may revert with.\ncontract Errors {\n    /// ======================\n    /// ====== Generic =======\n    /// ======================\n\n    /// @notice Thrown as a general error when input / data is invalid\n    error INVALID();\n\n    /// @notice Thrown when mismatch in decoding data\n    error MISMATCH();\n\n    /// @notice Thrown when not enough funds are available\n    error NOT_ENOUGH_FUNDS();\n\n    /// @notice Thrown when user is not authorized\n    error UNAUTHORIZED();\n\n    /// @notice Thrown when address is the zero address\n    error ZERO_ADDRESS();\n\n    /// @notice Thrown when the function is not implemented\n    error NOT_IMPLEMENTED();\n\n    /// @notice Thrown when the value is non-zero\n    error NON_ZERO_VALUE();\n\n    /// ======================\n    /// ====== Registry ======\n    /// ======================\n\n    /// @dev Thrown when the nonce passed has been used or not available\n    error NONCE_NOT_AVAILABLE();\n\n    /// @dev Thrown when the 'msg.sender' is not the pending owner on ownership transfer\n    error NOT_PENDING_OWNER();\n\n    /// @dev Thrown if the anchor creation fails\n    error ANCHOR_ERROR();\n\n    /// ======================\n    /// ======== Allo ========\n    /// ======================\n\n    /// @notice Thrown when the strategy is not approved\n    error NOT_APPROVED_STRATEGY();\n\n    /// @notice Thrown when the strategy is approved and should be cloned\n    error IS_APPROVED_STRATEGY();\n\n    /// @notice Thrown when the fee is below 1e18 which is the fee percentage denominator\n    error INVALID_FEE();\n\n    /// ======================\n    /// ===== IStrategy ======\n    /// ======================\n\n    /// @notice Thrown when data is already intialized\n    error ALREADY_INITIALIZED();\n\n    /// @notice Thrown when data is yet to be initialized\n    error NOT_INITIALIZED();\n\n    /// @notice Thrown when an invalid address is used\n    error INVALID_ADDRESS();\n\n    /// @notice Thrown when a pool is inactive\n    error POOL_INACTIVE();\n\n    /// @notice Thrown when a pool is already active\n    error POOL_ACTIVE();\n\n    /// @notice Thrown when two arrays length are not equal\n    error ARRAY_MISMATCH();\n\n    /// @notice Thrown when the registration is invalid.\n    error INVALID_REGISTRATION();\n\n    /// @notice Thrown when the metadata is invalid.\n    error INVALID_METADATA();\n\n    /// @notice Thrown when the recipient is not accepted.\n    error RECIPIENT_NOT_ACCEPTED();\n\n    /// @notice Thrown when recipient is already accepted.\n    error RECIPIENT_ALREADY_ACCEPTED();\n\n    /// @notice Thrown when registration is not active.\n    error REGISTRATION_NOT_ACTIVE();\n\n    /// @notice Thrown when registration is active.\n    error REGISTRATION_ACTIVE();\n\n    /// @notice Thrown when there is an error in recipient.\n    error RECIPIENT_ERROR(address recipientId);\n\n    /// @notice Thrown when the allocation is not active.\n    error ALLOCATION_NOT_ACTIVE();\n\n    /// @notice Thrown when the allocation is not ended.\n    error ALLOCATION_NOT_ENDED();\n\n    /// @notice Thrown when the allocation is active.\n    error ALLOCATION_ACTIVE();\n}\n"
			},
			"lib/allo-v2/contracts/core/libraries/Transfer.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.19;\n\n// External Libraries\nimport {SafeTransferLib} from \"solady/utils/SafeTransferLib.sol\";\n// Internal Libraries\nimport \"./Native.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Transfer contract\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice A helper contract to transfer tokens within Allo protocol\n/// @dev Handles the transfer of tokens to an address\ncontract Transfer is Native {\n    /// @notice Thrown when the amount of tokens sent does not match the amount of tokens expected\n    error AMOUNT_MISMATCH();\n\n    /// @notice This holds the details for a transfer\n    struct TransferData {\n        address from;\n        address to;\n        uint256 amount;\n    }\n\n    /// @notice Transfer an amount of a token to an array of addresses\n    /// @param _token The address of the token\n    /// @param _transferData TransferData[]\n    /// @return Whether the transfer was successful or not\n    function _transferAmountsFrom(address _token, TransferData[] memory _transferData)\n        internal\n        virtual\n        returns (bool)\n    {\n        uint256 msgValue = msg.value;\n\n        for (uint256 i; i < _transferData.length;) {\n            TransferData memory transferData = _transferData[i];\n\n            if (_token == NATIVE) {\n                msgValue -= transferData.amount;\n                SafeTransferLib.safeTransferETH(transferData.to, transferData.amount);\n            } else {\n                SafeTransferLib.safeTransferFrom(_token, transferData.from, transferData.to, transferData.amount);\n            }\n\n            unchecked {\n                i++;\n            }\n        }\n\n        if (msgValue != 0) revert AMOUNT_MISMATCH();\n\n        return true;\n    }\n\n    /// @notice Transfer an amount of a token to an address\n    /// @param _token The address of the token\n    /// @param _transferData Individual TransferData\n    /// @return Whether the transfer was successful or not\n    function _transferAmountFrom(address _token, TransferData memory _transferData) internal virtual returns (bool) {\n        uint256 amount = _transferData.amount;\n        if (_token == NATIVE) {\n            // Native Token\n            if (msg.value < amount) revert AMOUNT_MISMATCH();\n\n            SafeTransferLib.safeTransferETH(_transferData.to, amount);\n        } else {\n            SafeTransferLib.safeTransferFrom(_token, _transferData.from, _transferData.to, amount);\n        }\n        return true;\n    }\n\n    /// @notice Transfer an amount of a token to an address\n    /// @param _token The token to transfer\n    /// @param _to The address to transfer to\n    /// @param _amount The amount to transfer\n    function _transferAmount(address _token, address _to, uint256 _amount) internal virtual {\n        if (_token == NATIVE) {\n            SafeTransferLib.safeTransferETH(_to, _amount);\n        } else {\n            SafeTransferLib.safeTransfer(_token, _to, _amount);\n        }\n    }\n\n    /// @notice Get the balance of a token for an account\n    /// @param _token The token to get the balance of\n    /// @param _account The account to get the balance for\n    /// @return The balance of the token for the account\n    function _getBalance(address _token, address _account) internal view returns (uint256) {\n        if (_token == NATIVE) {\n            return payable(_account).balance;\n        } else {\n            return SafeTransferLib.balanceOf(_token, _account);\n        }\n    }\n}\n"
			},
			"lib/allo-v2/contracts/core/interfaces/IStrategy.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// Interfaces\nimport {IAllo} from \"./IAllo.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title IStrategy Interface\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice BaseStrategy is the base contract that all strategies should inherit from and uses this interface.\n\ninterface IStrategy {\n    /// ======================\n    /// ======= Storage ======\n    /// ======================\n\n    /// @notice The Status enum that all recipients are based from\n    enum Status {\n        None,\n        Pending,\n        Accepted,\n        Rejected,\n        Appealed,\n        InReview,\n        Canceled\n    }\n\n    /// @notice Payout summary struct to hold the payout data\n    struct PayoutSummary {\n        address recipientAddress;\n        uint256 amount;\n    }\n\n    /// ======================\n    /// ======= Events =======\n    /// ======================\n\n    /// @notice Emitted when strategy is initialized.\n    /// @param poolId The ID of the pool\n    /// @param data The data passed to the 'initialize' function\n    event Initialized(uint256 poolId, bytes data);\n\n    /// @notice Emitted when a recipient is registered.\n    /// @param recipientId The ID of the recipient\n    /// @param data The data passed to the 'registerRecipient' function\n    /// @param sender The sender\n    event Registered(address indexed recipientId, bytes data, address sender);\n\n    /// @notice Emitted when a recipient is allocated to.\n    /// @param recipientId The ID of the recipient\n    /// @param amount The amount allocated\n    /// @param token The token allocated\n    event Allocated(address indexed recipientId, uint256 amount, address token, address sender);\n\n    /// @notice Emitted when tokens are distributed.\n    /// @param recipientId The ID of the recipient\n    /// @param recipientAddress The recipient\n    /// @param amount The amount distributed\n    /// @param sender The sender\n    event Distributed(address indexed recipientId, address recipientAddress, uint256 amount, address sender);\n\n    /// @notice Emitted when pool is set to active status.\n    /// @param active The status of the pool\n    event PoolActive(bool active);\n\n    /// ======================\n    /// ======= Views ========\n    /// ======================\n\n    /// @notice Getter for the address of the Allo contract.\n    /// @return The 'Allo' contract\n    function getAllo() external view returns (IAllo);\n\n    /// @notice Getter for the 'poolId' for this strategy.\n    /// @return The ID of the pool\n    function getPoolId() external view returns (uint256);\n\n    /// @notice Getter for the 'id' of the strategy.\n    /// @return The ID of the strategy\n    function getStrategyId() external view returns (bytes32);\n\n    /// @notice Checks whether a allocator is valid or not, will usually be true for all strategies\n    ///      and will depend on the strategy implementation.\n    /// @param _allocator The allocator to check\n    /// @return Whether the allocator is valid or not\n    function isValidAllocator(address _allocator) external view returns (bool);\n\n    /// @notice whether pool is active.\n    /// @return Whether the pool is active or not\n    function isPoolActive() external returns (bool);\n\n    /// @notice Checks the amount of tokens in the pool.\n    /// @return The balance of the pool\n    function getPoolAmount() external view returns (uint256);\n\n    /// @notice Increases the balance of the pool.\n    /// @param _amount The amount to increase the pool by\n    function increasePoolAmount(uint256 _amount) external;\n\n    /// @notice Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation\n    ///      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those\n    ///      since there is no need for Pending or Rejected.\n    /// @param _recipientId The ID of the recipient\n    /// @return The status of the recipient\n    function getRecipientStatus(address _recipientId) external view returns (Status);\n\n    /// @notice Checks the amount allocated to a recipient for distribution.\n    /// @dev Input the values you would send to distribute(), get the amounts each recipient in the array would receive.\n    ///      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The encoded data\n    function getPayouts(address[] memory _recipientIds, bytes[] memory _data)\n        external\n        view\n        returns (PayoutSummary[] memory);\n\n    /// ======================\n    /// ===== Functions ======\n    /// ======================\n\n    /// @notice\n    /// @dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,\n    ///      use it, and then call super.initialize().\n    /// @param _poolId The ID of the pool\n    /// @param _data The encoded data\n    function initialize(uint256 _poolId, bytes memory _data) external;\n\n    /// @notice This will register a recipient, set their status (and any other strategy specific values), and\n    ///         return the ID of the recipient.\n    /// @dev Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional\n    ///      functions should be added to allow the owner to check this. The owner could also check attestations directly\n    ///      and then accept for instance. The '_data' will be determined by the strategy implementation.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    /// @return The ID of the recipient\n    function registerRecipient(bytes memory _data, address _sender) external payable returns (address);\n\n    /// @notice This will allocate to a recipient.\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function allocate(bytes memory _data, address _sender) external payable;\n\n    /// @notice This will distribute funds (tokens) to recipients.\n    /// @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n    /// this contract will need to track the amount paid already, so that it doesn't double pay.\n    function distribute(address[] memory _recipientIds, bytes memory _data, address _sender) external;\n}\n"
			},
			"lib/allo-v2/contracts/core/libraries/Metadata.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.19;\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Metadata\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice Metadata is used to define the metadata for the protocol that is used throughout the system.\nstruct Metadata {\n    /// @notice Protocol ID corresponding to a specific protocol (currently using IPFS = 1)\n    uint256 protocol;\n    /// @notice Pointer (hash) to fetch metadata for the specified protocol\n    string pointer;\n}\n"
			},
			"lib/allo-v2/contracts/core/libraries/Native.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.19;\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Native token information\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice This is used to define the address of the native token for the protocol\ncontract Native {\n    /// @notice Address of the native token\n    address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\n}\n"
			},
			"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n///\n/// @dev Note:\n/// - For ETH transfers, please use `forceSafeTransferETH` for gas griefing protection.\n/// - For ERC20s, this implementation won't check that a token has code,\n/// responsibility is delegated to the caller.\nlibrary SafeTransferLib {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The ETH transfer has failed.\n    error ETHTransferFailed();\n\n    /// @dev The ERC20 `transferFrom` has failed.\n    error TransferFromFailed();\n\n    /// @dev The ERC20 `transfer` has failed.\n    error TransferFailed();\n\n    /// @dev The ERC20 `approve` has failed.\n    error ApproveFailed();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         CONSTANTS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Suggested gas stipend for contract receiving ETH\n    /// that disallows any storage writes.\n    uint256 internal constant GAS_STIPEND_NO_STORAGE_WRITES = 2300;\n\n    /// @dev Suggested gas stipend for contract receiving ETH to perform a few\n    /// storage reads and writes, but low enough to prevent griefing.\n    /// Multiply by a small constant (e.g. 2), if needed.\n    uint256 internal constant GAS_STIPEND_NO_GRIEF = 100000;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       ETH OPERATIONS                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Sends `amount` (in wei) ETH to `to`.\n    /// Reverts upon failure.\n    ///\n    /// Note: This implementation does NOT protect against gas griefing.\n    /// Please use `forceSafeTransferETH` for gas griefing protection.\n    function safeTransferETH(address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Transfer the ETH and check if it succeeded or not.\n            if iszero(call(gas(), to, amount, 0x00, 0x00, 0x00, 0x00)) {\n                // Store the function selector of `ETHTransferFailed()`.\n                mstore(0x00, 0xb12d13eb)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /// @dev Force sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n    /// The `gasStipend` can be set to a low enough value to prevent\n    /// storage writes or gas griefing.\n    ///\n    /// If sending via the normal procedure fails, force sends the ETH by\n    /// creating a temporary contract which uses `SELFDESTRUCT` to force send the ETH.\n    ///\n    /// Reverts if the current contract has insufficient balance.\n    function forceSafeTransferETH(address to, uint256 amount, uint256 gasStipend) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // If insufficient balance, revert.\n            if lt(selfbalance(), amount) {\n                // Store the function selector of `ETHTransferFailed()`.\n                mstore(0x00, 0xb12d13eb)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Transfer the ETH and check if it succeeded or not.\n            if iszero(call(gasStipend, to, amount, 0x00, 0x00, 0x00, 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                // We can directly use `SELFDESTRUCT` in the contract creation.\n                // Compatible with `SENDALL`: https://eips.ethereum.org/EIPS/eip-4758\n                if iszero(create(amount, 0x0b, 0x16)) {\n                    // To coerce gas estimation to provide enough gas for the `create` above.\n                    if iszero(gt(gas(), 1000000)) { revert(0x00, 0x00) }\n                }\n            }\n        }\n    }\n\n    /// @dev Force sends `amount` (in wei) ETH to `to`, with a gas stipend\n    /// equal to `GAS_STIPEND_NO_GRIEF`. This gas stipend is a reasonable default\n    /// for 99% of cases and can be overridden with the three-argument version of this\n    /// function if necessary.\n    ///\n    /// If sending via the normal procedure fails, force sends the ETH by\n    /// creating a temporary contract which uses `SELFDESTRUCT` to force send the ETH.\n    ///\n    /// Reverts if the current contract has insufficient balance.\n    function forceSafeTransferETH(address to, uint256 amount) internal {\n        // Manually inlined because the compiler doesn't inline functions with branches.\n        /// @solidity memory-safe-assembly\n        assembly {\n            // If insufficient balance, revert.\n            if lt(selfbalance(), amount) {\n                // Store the function selector of `ETHTransferFailed()`.\n                mstore(0x00, 0xb12d13eb)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Transfer the ETH and check if it succeeded or not.\n            if iszero(call(GAS_STIPEND_NO_GRIEF, to, amount, 0x00, 0x00, 0x00, 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                // We can directly use `SELFDESTRUCT` in the contract creation.\n                // Compatible with `SENDALL`: https://eips.ethereum.org/EIPS/eip-4758\n                if iszero(create(amount, 0x0b, 0x16)) {\n                    // To coerce gas estimation to provide enough gas for the `create` above.\n                    if iszero(gt(gas(), 1000000)) { revert(0x00, 0x00) }\n                }\n            }\n        }\n    }\n\n    /// @dev Sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n    /// The `gasStipend` can be set to a low enough value to prevent\n    /// storage writes or gas griefing.\n    ///\n    /// Simply use `gasleft()` for `gasStipend` if you don't need a gas stipend.\n    ///\n    /// Note: Does NOT revert upon failure.\n    /// Returns whether the transfer of ETH is successful instead.\n    function trySafeTransferETH(address to, uint256 amount, uint256 gasStipend)\n        internal\n        returns (bool success)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Transfer the ETH and check if it succeeded or not.\n            success := call(gasStipend, to, amount, 0x00, 0x00, 0x00, 0x00)\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                      ERC20 OPERATIONS                      */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to`.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have at least `amount` approved for\n    /// the current contract to manage.\n    function safeTransferFrom(address token, address from, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n\n            mstore(0x60, amount) // Store the `amount` argument.\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            // Store the function selector of `transferFrom(address,address,uint256)`.\n            mstore(0x0c, 0x23b872dd000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFromFailed()`.\n                mstore(0x00, 0x7939f424)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends all of ERC20 `token` from `from` to `to`.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have their entire balance approved for\n    /// the current contract to manage.\n    function safeTransferAllFrom(address token, address from, address to)\n        internal\n        returns (uint256 amount)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            // Store the function selector of `balanceOf(address)`.\n            mstore(0x0c, 0x70a08231000000000000000000000000)\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                    staticcall(gas(), token, 0x1c, 0x24, 0x60, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFromFailed()`.\n                mstore(0x00, 0x7939f424)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n\n            // Store the function selector of `transferFrom(address,address,uint256)`.\n            mstore(0x00, 0x23b872dd)\n            // The `amount` is already at 0x60. Load it for the function's return value.\n            amount := mload(0x60)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFromFailed()`.\n                mstore(0x00, 0x7939f424)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from the current contract to `to`.\n    /// Reverts upon failure.\n    function safeTransfer(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            // Store the function selector of `transfer(address,uint256)`.\n            mstore(0x00, 0xa9059cbb000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFailed()`.\n                mstore(0x00, 0x90b8ec18)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Restore the part of the free memory pointer that was overwritten.\n            mstore(0x34, 0)\n        }\n    }\n\n    /// @dev Sends all of ERC20 `token` from the current contract to `to`.\n    /// Reverts upon failure.\n    function safeTransferAll(address token, address to) internal returns (uint256 amount) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, 0x70a08231) // Store the function selector of `balanceOf(address)`.\n            mstore(0x20, address()) // Store the address of the current contract.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                    staticcall(gas(), token, 0x1c, 0x24, 0x34, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFailed()`.\n                mstore(0x00, 0x90b8ec18)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n\n            mstore(0x14, to) // Store the `to` argument.\n            // The `amount` is already at 0x34. Load it for the function's return value.\n            amount := mload(0x34)\n            // Store the function selector of `transfer(address,uint256)`.\n            mstore(0x00, 0xa9059cbb000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `TransferFailed()`.\n                mstore(0x00, 0x90b8ec18)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Restore the part of the free memory pointer that was overwritten.\n            mstore(0x34, 0)\n        }\n    }\n\n    /// @dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n    /// Reverts upon failure.\n    function safeApprove(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            // Store the function selector of `approve(address,uint256)`.\n            mstore(0x00, 0x095ea7b3000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                // Store the function selector of `ApproveFailed()`.\n                mstore(0x00, 0x3e3f8f73)\n                // Revert with (offset, size).\n                revert(0x1c, 0x04)\n            }\n            // Restore the part of the free memory pointer that was overwritten.\n            mstore(0x34, 0)\n        }\n    }\n\n    /// @dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n    /// If the initial attempt to approve fails, attempts to reset the approved amount to zero,\n    /// then retries the approval again (some tokens, e.g. USDT, requires this).\n    /// Reverts upon failure.\n    function safeApproveWithRetry(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            // Store the function selector of `approve(address,uint256)`.\n            mstore(0x00, 0x095ea7b3000000000000000000000000)\n\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    // Set success to whether the call reverted, if not we check it either\n                    // returned exactly 1 (can't just be non-zero data), or had no return data.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())),\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                mstore(0x34, 0) // Store 0 for the `amount`.\n                mstore(0x00, 0x095ea7b3000000000000000000000000) // Store the function selector.\n                // We can ignore the result of this call. Just need to check the next call.\n                pop(call(gas(), token, 0, 0x10, 0x44, 0x00, 0x00))\n                mstore(0x34, amount) // Store back the original `amount`.\n\n                if iszero(\n                    and(\n                        or(eq(mload(0x00), 1), iszero(returndatasize())),\n                        call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                    )\n                ) {\n                    // Store the function selector of `ApproveFailed()`.\n                    mstore(0x00, 0x3e3f8f73)\n                    // Revert with (offset, size).\n                    revert(0x1c, 0x04)\n                }\n            }\n            // Restore the part of the free memory pointer that was overwritten.\n            mstore(0x34, 0)\n        }\n    }\n\n    /// @dev Returns the amount of ERC20 `token` owned by `account`.\n    /// Returns zero if the `token` does not exist.\n    function balanceOf(address token, address account) internal view returns (uint256 amount) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, account) // Store the `account` argument.\n            // Store the function selector of `balanceOf(address)`.\n            mstore(0x00, 0x70a08231000000000000000000000000)\n            amount :=\n                mul(\n                    mload(0x20),\n                    and( // The arguments of `and` are evaluated from right to left.\n                        gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                        staticcall(gas(), token, 0x10, 0x24, 0x20, 0x20)\n                    )\n                )\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/",
				"allo/=lib/allo-v2/",
				"solady/=lib/allo-v2/lib/solady/src/",
				"solmate/=lib/solmate/src/",
				"openzeppelin-contracts/=lib/openzeppelin-contracts/"
			]
		}
	},
	"output": {
		"contracts": {
			"lib/allo-v2/contracts/core/interfaces/IAllo.sol": {
				"IAllo": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BaseFeePaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFee",
									"type": "uint256"
								}
							],
							"name": "BaseFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "percentFee",
									"type": "uint256"
								}
							],
							"name": "PercentFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "contract IStrategy",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "PoolFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "PoolMetadataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "registry",
									"type": "address"
								}
							],
							"name": "RegistryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "StrategyApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "StrategyRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "treasury",
									"type": "address"
								}
							],
							"name": "TreasuryUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_manager",
									"type": "address"
								}
							],
							"name": "addPoolManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"name": "addToCloneableStrategies",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_poolIds",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_datas",
									"type": "bytes[]"
								}
							],
							"name": "batchAllocate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_poolIds",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "batchRegisterRecipient",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_initStrategyData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								},
								{
									"internalType": "address[]",
									"name": "_managers",
									"type": "address[]"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_initStrategyData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								},
								{
									"internalType": "address[]",
									"name": "_managers",
									"type": "address[]"
								}
							],
							"name": "createPoolWithCustomStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "fundPool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBaseFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPercentFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "profileId",
											"type": "bytes32"
										},
										{
											"internalType": "contract IStrategy",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "bytes32",
											"name": "managerRole",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "adminRole",
											"type": "bytes32"
										}
									],
									"internalType": "struct IAllo.Pool",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRegistry",
							"outputs": [
								{
									"internalType": "contract IRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "getStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTreasury",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_percentFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_baseFee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"name": "isCloneableStrategy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isPoolAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isPoolManager",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "recoverFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"name": "removeFromCloneableStrategies",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_manager",
									"type": "address"
								}
							],
							"name": "removePoolManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_baseFee",
									"type": "uint256"
								}
							],
							"name": "updateBaseFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentFee",
									"type": "uint256"
								}
							],
							"name": "updatePercentFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								}
							],
							"name": "updatePoolMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								}
							],
							"name": "updateRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "updateTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"events": {
							"BaseFeePaid(uint256,uint256)": {
								"params": {
									"amount": "Amount of the base fee paid",
									"poolId": "ID of the pool the base fee was paid for"
								}
							},
							"BaseFeeUpdated(uint256)": {
								"params": {
									"baseFee": "New base fee amount"
								}
							},
							"PercentFeeUpdated(uint256)": {
								"params": {
									"percentFee": "New percentage for the fee"
								}
							},
							"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))": {
								"params": {
									"amount": "Amount pool was funded with when created",
									"metadata": "Pool metadata",
									"poolId": "ID of the pool created",
									"profileId": "ID of the profile the pool is associated with",
									"strategy": "Address of the strategy contract",
									"token": "Address of the token pool was funded with when created"
								}
							},
							"PoolFunded(uint256,uint256,uint256)": {
								"params": {
									"amount": "Amount funded to the pool",
									"fee": "Amount of the fee paid to the treasury",
									"poolId": "ID of the pool funded"
								}
							},
							"PoolMetadataUpdated(uint256,(uint256,string))": {
								"params": {
									"metadata": "Pool metadata that was updated",
									"poolId": "ID of the pool updated"
								}
							},
							"RegistryUpdated(address)": {
								"params": {
									"registry": "Address of the new registry"
								}
							},
							"StrategyApproved(address)": {
								"params": {
									"strategy": "Address of the strategy approved"
								}
							},
							"StrategyRemoved(address)": {
								"params": {
									"strategy": "Address of the strategy removed"
								}
							},
							"TreasuryUpdated(address)": {
								"params": {
									"treasury": "Address of the new treasury"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addPoolManager(uint256,address)": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_manager": "The address of the manager to add",
									"_poolId": "The ID of the pool to add the manager to"
								}
							},
							"addToCloneableStrategies(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_strategy": "The address of the strategy to add"
								}
							},
							"allocate(uint256,bytes)": {
								"details": "Each strategy will handle the allocation of funds differently.",
								"params": {
									"_data": "The data to pass to the strategy and may be handled differently by each strategy.",
									"_poolId": "The ID of the pool to allocate funds from"
								}
							},
							"batchAllocate(uint256[],bytes[])": {
								"details": "Each strategy will handle the allocation of funds differently"
							},
							"batchRegisterRecipient(uint256[],bytes[])": {
								"params": {
									"_data": "The data to pass to the strategy and may be handled differently by each strategy",
									"_poolIds": "The pool ID's to register the recipients for"
								}
							},
							"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
								"custom:initstrategydata": "The encoded data will be specific to a given strategy requirements,    reference the strategy implementation of 'initialize()'",
								"details": "'msg.sender' must be owner or member of the profile id passed as '_profileId'.",
								"params": {
									"_amount": "The amount of the token",
									"_initStrategyData": "The data to initialize the strategy",
									"_managers": "The managers of the pool",
									"_metadata": "The metadata of the pool",
									"_profileId": "The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile",
									"_strategy": "The address of the strategy contract the pool will use.",
									"_token": "The address of the token"
								}
							},
							"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
								"details": "'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must      be a member or owner of the profile id passed as '_profileId'.",
								"params": {
									"_amount": "The amount of the token you want to deposit into the pool on initialization",
									"_initStrategyData": "The data to initialize the strategy",
									"_managers": "The managers of the pool, and can be added/removed later by the pool admin",
									"_metadata": "The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)",
									"_profileId": "The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile",
									"_strategy": "The address of the deployed custom strategy",
									"_token": "The address of the token you want to use in your pool"
								},
								"returns": {
									"poolId": "The ID of the pool"
								}
							},
							"distribute(uint256,address[],bytes)": {
								"details": "Each strategy will handle the distribution of funds differently",
								"params": {
									"_data": "The data to pass to the strategy and may be handled differently by each strategy",
									"_poolId": "The ID of the pool to distribute from",
									"_recipientIds": "The recipient ids to distribute to"
								}
							},
							"fundPool(uint256,uint256)": {
								"details": "'msg.value' must be greater than 0 if the token is the native token       or '_amount' must be greater than 0 if the token is not the native token.",
								"params": {
									"_amount": "The amount to fund the pool with",
									"_poolId": "The ID of the pool to fund"
								}
							},
							"getBaseFee()": {
								"returns": {
									"_0": "baseFee The current base fee"
								}
							},
							"getFeeDenominator()": {
								"details": "1e18 represents 100%",
								"returns": {
									"_0": "feeDenominator The current fee denominator"
								}
							},
							"getPercentFee()": {
								"returns": {
									"_0": "percentFee The current percentage for the fee"
								}
							},
							"getPool(uint256)": {
								"params": {
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "pool The 'Pool' struct for the ID of the pool passed in"
								}
							},
							"getRegistry()": {
								"returns": {
									"_0": "registry The current registry address"
								}
							},
							"getStrategy(uint256)": {
								"params": {
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "strategy The address of the strategy for the ID of the pool passed in"
								}
							},
							"getTreasury()": {
								"returns": {
									"_0": "treasury The current treasury address"
								}
							},
							"initialize(address,address,address,uint256,uint256)": {
								"params": {
									"_baseFee": "Base fee amount",
									"_owner": "Address of the owner",
									"_percentFee": "Percentage for the fee",
									"_registry": "Address of the registry contract",
									"_treasury": "Address of the treasury"
								}
							},
							"isCloneableStrategy(address)": {
								"params": {
									"_strategy": "The address of the strategy to check"
								},
								"returns": {
									"_0": "'true' if the '_strategy' is cloneable, otherwise 'false'"
								}
							},
							"isPoolAdmin(uint256,address)": {
								"params": {
									"_address": "The address to check",
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "'true' if the '_address' is a pool admin, otherwise 'false'"
								}
							},
							"isPoolManager(uint256,address)": {
								"params": {
									"_address": "The address to check",
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "'true' if the '_address' is a pool manager, otherwise 'false'"
								}
							},
							"recoverFunds(address,address)": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_recipient": "The address to send the recovered funds to",
									"_token": "The token to recover"
								}
							},
							"registerRecipient(uint256,bytes)": {
								"params": {
									"_poolId": "The ID of the pool to register the recipient for"
								}
							},
							"removeFromCloneableStrategies(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_strategy": "The address of the strategy to remove"
								}
							},
							"removePoolManager(uint256,address)": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_manager": "The address of the manager to remove",
									"_poolId": "The ID of the pool to remove the manager from"
								}
							},
							"updateBaseFee(uint256)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_baseFee": "The new base fee"
								}
							},
							"updatePercentFee(uint256)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_percentFee": "The new percentage for the fee"
								}
							},
							"updatePoolMetadata(uint256,(uint256,string))": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_metadata": "The new metadata to set",
									"_poolId": "The ID of the pool to update"
								}
							},
							"updateRegistry(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_registry": "The new registry address"
								}
							},
							"updateTreasury(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_treasury": "The new treasury address"
								}
							}
						},
						"title": "Allo Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addPoolManager(uint256,address)": "2cf682b0",
							"addToCloneableStrategies(address)": "41bba0b4",
							"allocate(uint256,bytes)": "2ec38188",
							"batchAllocate(uint256[],bytes[])": "c6dff1cf",
							"batchRegisterRecipient(uint256[],bytes[])": "1a20bd88",
							"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])": "77da8caf",
							"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": "e1007d4a",
							"distribute(uint256,address[],bytes)": "3a5fbd92",
							"fundPool(uint256,uint256)": "5acd6fac",
							"getBaseFee()": "15e812ad",
							"getFeeDenominator()": "f4e1fc41",
							"getPercentFee()": "4edbaadc",
							"getPool(uint256)": "068bcd8d",
							"getRegistry()": "5ab1bd53",
							"getStrategy(uint256)": "cfc0cc34",
							"getTreasury()": "3b19e84a",
							"initialize(address,address,address,uint256,uint256)": "a6b63eb8",
							"isCloneableStrategy(address)": "ab2ec589",
							"isPoolAdmin(uint256,address)": "ab3febc6",
							"isPoolManager(uint256,address)": "29e40d4b",
							"recoverFunds(address,address)": "24ae6a27",
							"registerRecipient(uint256,bytes)": "075c0e9c",
							"removeFromCloneableStrategies(address)": "031e2fa1",
							"removePoolManager(uint256,address)": "7f5a70bd",
							"updateBaseFee(uint256)": "8e690186",
							"updatePercentFee(uint256)": "f54fc4a0",
							"updatePoolMetadata(uint256,(uint256,string))": "5f9ca138",
							"updateRegistry(address)": "1a5da6c8",
							"updateTreasury(address)": "7f51bb1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BaseFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"}],\"name\":\"BaseFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentFee\",\"type\":\"uint256\"}],\"name\":\"PercentFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"PoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"RegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"addPoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"addToCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_datas\",\"type\":\"bytes[]\"}],\"name\":\"batchAllocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"batchRegisterRecipient\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initStrategyData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_managers\",\"type\":\"address[]\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initStrategyData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_managers\",\"type\":\"address[]\"}],\"name\":\"createPoolWithCustomStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPercentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"managerRole\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"adminRole\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAllo.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"isCloneableStrategy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"removeFromCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"removePoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"updateBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"}],\"name\":\"updatePercentFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"updatePoolMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"updateRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"params\":{\"amount\":\"Amount of the base fee paid\",\"poolId\":\"ID of the pool the base fee was paid for\"}},\"BaseFeeUpdated(uint256)\":{\"params\":{\"baseFee\":\"New base fee amount\"}},\"PercentFeeUpdated(uint256)\":{\"params\":{\"percentFee\":\"New percentage for the fee\"}},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"params\":{\"amount\":\"Amount pool was funded with when created\",\"metadata\":\"Pool metadata\",\"poolId\":\"ID of the pool created\",\"profileId\":\"ID of the profile the pool is associated with\",\"strategy\":\"Address of the strategy contract\",\"token\":\"Address of the token pool was funded with when created\"}},\"PoolFunded(uint256,uint256,uint256)\":{\"params\":{\"amount\":\"Amount funded to the pool\",\"fee\":\"Amount of the fee paid to the treasury\",\"poolId\":\"ID of the pool funded\"}},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"params\":{\"metadata\":\"Pool metadata that was updated\",\"poolId\":\"ID of the pool updated\"}},\"RegistryUpdated(address)\":{\"params\":{\"registry\":\"Address of the new registry\"}},\"StrategyApproved(address)\":{\"params\":{\"strategy\":\"Address of the strategy approved\"}},\"StrategyRemoved(address)\":{\"params\":{\"strategy\":\"Address of the strategy removed\"}},\"TreasuryUpdated(address)\":{\"params\":{\"treasury\":\"Address of the new treasury\"}}},\"kind\":\"dev\",\"methods\":{\"addPoolManager(uint256,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address of the manager to add\",\"_poolId\":\"The ID of the pool to add the manager to\"}},\"addToCloneableStrategies(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_strategy\":\"The address of the strategy to add\"}},\"allocate(uint256,bytes)\":{\"details\":\"Each strategy will handle the allocation of funds differently.\",\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy.\",\"_poolId\":\"The ID of the pool to allocate funds from\"}},\"batchAllocate(uint256[],bytes[])\":{\"details\":\"Each strategy will handle the allocation of funds differently\"},\"batchRegisterRecipient(uint256[],bytes[])\":{\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy\",\"_poolIds\":\"The pool ID's to register the recipients for\"}},\"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"custom:initstrategydata\":\"The encoded data will be specific to a given strategy requirements,    reference the strategy implementation of 'initialize()'\",\"details\":\"'msg.sender' must be owner or member of the profile id passed as '_profileId'.\",\"params\":{\"_amount\":\"The amount of the token\",\"_initStrategyData\":\"The data to initialize the strategy\",\"_managers\":\"The managers of the pool\",\"_metadata\":\"The metadata of the pool\",\"_profileId\":\"The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\",\"_strategy\":\"The address of the strategy contract the pool will use.\",\"_token\":\"The address of the token\"}},\"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"details\":\"'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must      be a member or owner of the profile id passed as '_profileId'.\",\"params\":{\"_amount\":\"The amount of the token you want to deposit into the pool on initialization\",\"_initStrategyData\":\"The data to initialize the strategy\",\"_managers\":\"The managers of the pool, and can be added/removed later by the pool admin\",\"_metadata\":\"The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\",\"_profileId\":\"The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\",\"_strategy\":\"The address of the deployed custom strategy\",\"_token\":\"The address of the token you want to use in your pool\"},\"returns\":{\"poolId\":\"The ID of the pool\"}},\"distribute(uint256,address[],bytes)\":{\"details\":\"Each strategy will handle the distribution of funds differently\",\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy\",\"_poolId\":\"The ID of the pool to distribute from\",\"_recipientIds\":\"The recipient ids to distribute to\"}},\"fundPool(uint256,uint256)\":{\"details\":\"'msg.value' must be greater than 0 if the token is the native token       or '_amount' must be greater than 0 if the token is not the native token.\",\"params\":{\"_amount\":\"The amount to fund the pool with\",\"_poolId\":\"The ID of the pool to fund\"}},\"getBaseFee()\":{\"returns\":{\"_0\":\"baseFee The current base fee\"}},\"getFeeDenominator()\":{\"details\":\"1e18 represents 100%\",\"returns\":{\"_0\":\"feeDenominator The current fee denominator\"}},\"getPercentFee()\":{\"returns\":{\"_0\":\"percentFee The current percentage for the fee\"}},\"getPool(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"pool The 'Pool' struct for the ID of the pool passed in\"}},\"getRegistry()\":{\"returns\":{\"_0\":\"registry The current registry address\"}},\"getStrategy(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"strategy The address of the strategy for the ID of the pool passed in\"}},\"getTreasury()\":{\"returns\":{\"_0\":\"treasury The current treasury address\"}},\"initialize(address,address,address,uint256,uint256)\":{\"params\":{\"_baseFee\":\"Base fee amount\",\"_owner\":\"Address of the owner\",\"_percentFee\":\"Percentage for the fee\",\"_registry\":\"Address of the registry contract\",\"_treasury\":\"Address of the treasury\"}},\"isCloneableStrategy(address)\":{\"params\":{\"_strategy\":\"The address of the strategy to check\"},\"returns\":{\"_0\":\"'true' if the '_strategy' is cloneable, otherwise 'false'\"}},\"isPoolAdmin(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"'true' if the '_address' is a pool admin, otherwise 'false'\"}},\"isPoolManager(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"'true' if the '_address' is a pool manager, otherwise 'false'\"}},\"recoverFunds(address,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_recipient\":\"The address to send the recovered funds to\",\"_token\":\"The token to recover\"}},\"registerRecipient(uint256,bytes)\":{\"params\":{\"_poolId\":\"The ID of the pool to register the recipient for\"}},\"removeFromCloneableStrategies(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_strategy\":\"The address of the strategy to remove\"}},\"removePoolManager(uint256,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address of the manager to remove\",\"_poolId\":\"The ID of the pool to remove the manager from\"}},\"updateBaseFee(uint256)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_baseFee\":\"The new base fee\"}},\"updatePercentFee(uint256)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_percentFee\":\"The new percentage for the fee\"}},\"updatePoolMetadata(uint256,(uint256,string))\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_metadata\":\"The new metadata to set\",\"_poolId\":\"The ID of the pool to update\"}},\"updateRegistry(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_registry\":\"The new registry address\"}},\"updateTreasury(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_treasury\":\"The new treasury address\"}}},\"title\":\"Allo Interface\",\"version\":1},\"userdoc\":{\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"notice\":\"Emitted when the base fee is paid\"},\"BaseFeeUpdated(uint256)\":{\"notice\":\"Emitted when the base fee is updated\"},\"PercentFeeUpdated(uint256)\":{\"notice\":\"Emitted when the percent fee is updated\"},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"notice\":\"Event emitted when a new pool is created\"},\"PoolFunded(uint256,uint256,uint256)\":{\"notice\":\"Emitted when a pool is funded\"},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"notice\":\"Emitted when a pools metadata is updated\"},\"RegistryUpdated(address)\":{\"notice\":\"Emitted when the registry address is updated\"},\"StrategyApproved(address)\":{\"notice\":\"Emitted when a strategy is approved and added to the cloneable strategies\"},\"StrategyRemoved(address)\":{\"notice\":\"Emitted when a strategy is removed from the cloneable strategies\"},\"TreasuryUpdated(address)\":{\"notice\":\"Emitted when the treasury address is updated\"}},\"kind\":\"user\",\"methods\":{\"addPoolManager(uint256,address)\":{\"notice\":\"Adds a pool manager to the pool.\"},\"addToCloneableStrategies(address)\":{\"notice\":\"Adds a strategy to the cloneable strategies.\"},\"allocate(uint256,bytes)\":{\"notice\":\"Allocates funds to a recipient.\"},\"batchAllocate(uint256[],bytes[])\":{\"notice\":\"Allocates funds to multiple recipients.\"},\"batchRegisterRecipient(uint256[],bytes[])\":{\"notice\":\"Registers a batch of recipients.\"},\"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"notice\":\"Creates a new pool (by cloning a cloneable strategies).\"},\"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])\":{\"notice\":\"Creates a new pool (with a custom strategy)\"},\"distribute(uint256,address[],bytes)\":{\"notice\":\"Distributes funds to recipients and emits {Distributed} event if successful\"},\"fundPool(uint256,uint256)\":{\"notice\":\"Funds a pool.\"},\"getBaseFee()\":{\"notice\":\"Returns the current base fee\"},\"getFeeDenominator()\":{\"notice\":\"Returns the current fee denominator\"},\"getPercentFee()\":{\"notice\":\"Returns the current percent fee\"},\"getPool(uint256)\":{\"notice\":\"Returns the 'Pool' struct for a given 'poolId'\"},\"getRegistry()\":{\"notice\":\"Returns the current registry address\"},\"getStrategy(uint256)\":{\"notice\":\"Returns the address of the strategy for a given 'poolId'\"},\"getTreasury()\":{\"notice\":\"Returns the current treasury address\"},\"initialize(address,address,address,uint256,uint256)\":{\"notice\":\"Initialize the Allo contract\"},\"isCloneableStrategy(address)\":{\"notice\":\"Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\"},\"isPoolAdmin(uint256,address)\":{\"notice\":\"Checks if an address is a pool admin.\"},\"isPoolManager(uint256,address)\":{\"notice\":\"Checks if an address is a pool manager.\"},\"recoverFunds(address,address)\":{\"notice\":\"Recovers funds from a pool.\"},\"registerRecipient(uint256,bytes)\":{\"notice\":\"Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\"},\"removeFromCloneableStrategies(address)\":{\"notice\":\"Removes a strategy from the cloneable strategies.\"},\"removePoolManager(uint256,address)\":{\"notice\":\"Removes a pool manager from the pool.\"},\"updateBaseFee(uint256)\":{\"notice\":\"Updates the base fee.\"},\"updatePercentFee(uint256)\":{\"notice\":\"Updates the percentage for the fee.\"},\"updatePoolMetadata(uint256,(uint256,string))\":{\"notice\":\"Updates a pools metadata.\"},\"updateRegistry(address)\":{\"notice\":\"Update the registry address.\"},\"updateTreasury(address)\":{\"notice\":\"Updates the treasury address.\"}},\"notice\":\"Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":\"IAllo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29\",\"dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"BaseFeePaid(uint256,uint256)": {
								"notice": "Emitted when the base fee is paid"
							},
							"BaseFeeUpdated(uint256)": {
								"notice": "Emitted when the base fee is updated"
							},
							"PercentFeeUpdated(uint256)": {
								"notice": "Emitted when the percent fee is updated"
							},
							"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))": {
								"notice": "Event emitted when a new pool is created"
							},
							"PoolFunded(uint256,uint256,uint256)": {
								"notice": "Emitted when a pool is funded"
							},
							"PoolMetadataUpdated(uint256,(uint256,string))": {
								"notice": "Emitted when a pools metadata is updated"
							},
							"RegistryUpdated(address)": {
								"notice": "Emitted when the registry address is updated"
							},
							"StrategyApproved(address)": {
								"notice": "Emitted when a strategy is approved and added to the cloneable strategies"
							},
							"StrategyRemoved(address)": {
								"notice": "Emitted when a strategy is removed from the cloneable strategies"
							},
							"TreasuryUpdated(address)": {
								"notice": "Emitted when the treasury address is updated"
							}
						},
						"kind": "user",
						"methods": {
							"addPoolManager(uint256,address)": {
								"notice": "Adds a pool manager to the pool."
							},
							"addToCloneableStrategies(address)": {
								"notice": "Adds a strategy to the cloneable strategies."
							},
							"allocate(uint256,bytes)": {
								"notice": "Allocates funds to a recipient."
							},
							"batchAllocate(uint256[],bytes[])": {
								"notice": "Allocates funds to multiple recipients."
							},
							"batchRegisterRecipient(uint256[],bytes[])": {
								"notice": "Registers a batch of recipients."
							},
							"createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
								"notice": "Creates a new pool (by cloning a cloneable strategies)."
							},
							"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": {
								"notice": "Creates a new pool (with a custom strategy)"
							},
							"distribute(uint256,address[],bytes)": {
								"notice": "Distributes funds to recipients and emits {Distributed} event if successful"
							},
							"fundPool(uint256,uint256)": {
								"notice": "Funds a pool."
							},
							"getBaseFee()": {
								"notice": "Returns the current base fee"
							},
							"getFeeDenominator()": {
								"notice": "Returns the current fee denominator"
							},
							"getPercentFee()": {
								"notice": "Returns the current percent fee"
							},
							"getPool(uint256)": {
								"notice": "Returns the 'Pool' struct for a given 'poolId'"
							},
							"getRegistry()": {
								"notice": "Returns the current registry address"
							},
							"getStrategy(uint256)": {
								"notice": "Returns the address of the strategy for a given 'poolId'"
							},
							"getTreasury()": {
								"notice": "Returns the current treasury address"
							},
							"initialize(address,address,address,uint256,uint256)": {
								"notice": "Initialize the Allo contract"
							},
							"isCloneableStrategy(address)": {
								"notice": "Checks if a strategy is cloneable (is in the cloneableStrategies mapping)."
							},
							"isPoolAdmin(uint256,address)": {
								"notice": "Checks if an address is a pool admin."
							},
							"isPoolManager(uint256,address)": {
								"notice": "Checks if an address is a pool manager."
							},
							"recoverFunds(address,address)": {
								"notice": "Recovers funds from a pool."
							},
							"registerRecipient(uint256,bytes)": {
								"notice": "Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy."
							},
							"removeFromCloneableStrategies(address)": {
								"notice": "Removes a strategy from the cloneable strategies."
							},
							"removePoolManager(uint256,address)": {
								"notice": "Removes a pool manager from the pool."
							},
							"updateBaseFee(uint256)": {
								"notice": "Updates the base fee."
							},
							"updatePercentFee(uint256)": {
								"notice": "Updates the percentage for the fee."
							},
							"updatePoolMetadata(uint256,(uint256,string))": {
								"notice": "Updates a pools metadata."
							},
							"updateRegistry(address)": {
								"notice": "Update the registry address."
							},
							"updateTreasury(address)": {
								"notice": "Updates the treasury address."
							}
						},
						"notice": "Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/interfaces/IRegistry.sol": {
				"IRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "anchor",
									"type": "address"
								}
							],
							"name": "ProfileCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "ProfileMetadataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "anchor",
									"type": "address"
								}
							],
							"name": "ProfileNameUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ProfileOwnerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "ProfilePendingOwnerUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								}
							],
							"name": "acceptProfileOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address[]",
									"name": "_members",
									"type": "address[]"
								}
							],
							"name": "addMembers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "_members",
									"type": "address[]"
								}
							],
							"name": "createProfile",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_anchor",
									"type": "address"
								}
							],
							"name": "getProfileByAnchor",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "anchor",
											"type": "address"
										}
									],
									"internalType": "struct IRegistry.Profile",
									"name": "profile",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								}
							],
							"name": "getProfileById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "anchor",
											"type": "address"
										}
									],
									"internalType": "struct IRegistry.Profile",
									"name": "profile",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_member",
									"type": "address"
								}
							],
							"name": "isMemberOfProfile",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isMemberOfProfile",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "isOwnerOfProfile",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOwnerOfProfile",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isOwnerOrMemberOfProfile",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOwnerOrMemberOfProfile",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "recoverFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address[]",
									"name": "_members",
									"type": "address[]"
								}
							],
							"name": "removeMembers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								}
							],
							"name": "updateProfileMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "updateProfileName",
							"outputs": [
								{
									"internalType": "address",
									"name": "anchor",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_pendingOwner",
									"type": "address"
								}
							],
							"name": "updateProfilePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"details": "The Registry Interface is used to interact with the Allo protocol and create profiles      that can be used to interact with the Allo protocol. The Registry is the main contract      that all other contracts interact with to get the 'Profile' information needed to      interact with the Allo protocol. The Registry is also used to create new profiles      and update existing profiles. The Registry is also used to add and remove members      from a profile. The Registry will not always be used in a strategy and will depend on      the strategy being used.",
						"events": {
							"ProfileCreated(bytes32,uint256,string,(uint256,string),address,address)": {
								"details": "Emitted when a profile is created. This will return your anchor address."
							},
							"ProfileMetadataUpdated(bytes32,(uint256,string))": {
								"details": "Emitted when a profile's metadata is updated."
							},
							"ProfileNameUpdated(bytes32,string,address)": {
								"details": "Emitted when a profile name is updated. This will update the anchor when the name is updated and return it."
							},
							"ProfileOwnerUpdated(bytes32,address)": {
								"details": "Emitted when a profile owner is updated."
							},
							"ProfilePendingOwnerUpdated(bytes32,address)": {
								"details": "Emitted when a profile pending owner is updated."
							}
						},
						"kind": "dev",
						"methods": {
							"acceptProfileOwnership(bytes32)": {
								"details": "Accepts the pending 'owner' of the '_profileId' passed in Requirements: Only the pending owner can accept the ownership",
								"params": {
									"_profileId": "The 'profileId' to accept the ownership for"
								}
							},
							"addMembers(bytes32,address[])": {
								"details": "Adds members to the '_profileId' passed in Requirements: Only the 'Profile' owner can add members",
								"params": {
									"_members": "The members to add to the '_profileId' passed in",
									"_profileId": "The 'profileId' to add members to"
								}
							},
							"createProfile(uint256,string,(uint256,string),address,address[])": {
								"details": "Creates a new 'Profile' and returns the 'profileId' of the new profile Note: The 'name' and 'nonce' are used to generate the 'anchor' address Requirements: None, anyone can create a new profile",
								"params": {
									"_members": "The 'members' to use to generate the 'anchor' address",
									"_metadata": "The 'Metadata' to use to generate the 'anchor' address",
									"_name": "The name to use to generate the 'anchor' address",
									"_nonce": "The nonce to use to generate the 'anchor' address",
									"_owner": "The 'owner' to use to generate the 'anchor' address"
								},
								"returns": {
									"profileId": "The 'profileId' of the new profile"
								}
							},
							"getProfileByAnchor(address)": {
								"details": "Returns the 'Profile' for an '_anchor' passed",
								"params": {
									"_anchor": "The 'anchor' to return the 'Profile' for"
								},
								"returns": {
									"profile": "The 'Profile' for the '_anchor' passed"
								}
							},
							"getProfileById(bytes32)": {
								"details": "Returns the 'Profile' for a '_profileId' passed",
								"params": {
									"_profileId": "The 'profileId' to return the 'Profile' for"
								},
								"returns": {
									"profile": "The 'Profile' for the '_profileId' passed"
								}
							},
							"isMemberOfProfile(bytes32,address)": {
								"details": "Returns a boolean if the '_account' is a member of the '_profileId' passed in",
								"params": {
									"_member": "The 'member' to check if they are a member of the '_profileId' passed in",
									"_profileId": "The 'profileId' to check if the '_account' is a member of"
								},
								"returns": {
									"isMemberOfProfile": "A boolean if the '_account' is a member of the '_profileId' passed in"
								}
							},
							"isOwnerOfProfile(bytes32,address)": {
								"details": "Returns a boolean if the '_account' is an owner of the '_profileId' passed in",
								"params": {
									"_owner": "The 'owner' to check if they are an owner of the '_profileId' passed in",
									"_profileId": "The 'profileId' to check if the '_account' is an owner of"
								},
								"returns": {
									"isOwnerOfProfile": "A boolean if the '_account' is an owner of the '_profileId' passed in"
								}
							},
							"isOwnerOrMemberOfProfile(bytes32,address)": {
								"details": "Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in",
								"params": {
									"_account": "The 'account' to check if they are a member or owner of the '_profileId' passed in",
									"_profileId": "The 'profileId' to check if the '_account' is a member or owner of"
								},
								"returns": {
									"isOwnerOrMemberOfProfile": "A boolean if the '_account' is a member or owner of the '_profileId' passed in"
								}
							},
							"recoverFunds(address,address)": {
								"details": "Recovers funds from the contract Requirements: Must be the Allo owner",
								"params": {
									"_recipient": "The recipient of the recovered funds",
									"_token": "The token you want to use to recover funds"
								}
							},
							"removeMembers(bytes32,address[])": {
								"details": "Removes members from the '_profileId' passed in Requirements: Only the 'Profile' owner can remove members",
								"params": {
									"_members": "The members to remove from the '_profileId' passed in",
									"_profileId": "The 'profileId' to remove members from"
								}
							},
							"updateProfileMetadata(bytes32,(uint256,string))": {
								"details": "Updates the 'Metadata' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the metadata",
								"params": {
									"_metadata": "The new 'Metadata' value",
									"_profileId": "The 'profileId' to update the metadata for"
								}
							},
							"updateProfileName(bytes32,string)": {
								"details": "Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address Requirements: Only the 'Profile' owner can update the name Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'       so please use caution. You can always recreate your 'anchor' address by updating the name back       to the original name used to create the profile.",
								"params": {
									"_name": "The new 'name' value",
									"_profileId": "The 'profileId' to update the name for"
								},
								"returns": {
									"anchor": "The new 'anchor' address"
								}
							},
							"updateProfilePendingOwner(bytes32,address)": {
								"details": "Updates the pending 'owner' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the pending owner",
								"params": {
									"_pendingOwner": "The new pending 'owner' value",
									"_profileId": "The 'profileId' to update the pending owner for"
								}
							}
						},
						"title": "IRegistry Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptProfileOwnership(bytes32)": "2497f3c6",
							"addMembers(bytes32,address[])": "5063f361",
							"createProfile(uint256,string,(uint256,string),address,address[])": "3a92f65f",
							"getProfileByAnchor(address)": "dd93da43",
							"getProfileById(bytes32)": "0114cf0a",
							"isMemberOfProfile(bytes32,address)": "0ec1fbac",
							"isOwnerOfProfile(bytes32,address)": "39b86b8c",
							"isOwnerOrMemberOfProfile(bytes32,address)": "5e8a7915",
							"recoverFunds(address,address)": "24ae6a27",
							"removeMembers(bytes32,address[])": "e0cf1e4c",
							"updateProfileMetadata(bytes32,(uint256,string))": "ac402839",
							"updateProfileName(bytes32,string)": "cf189ff2",
							"updateProfilePendingOwner(bytes32,address)": "3b66dacd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"name\":\"ProfileCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"ProfileMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"name\":\"ProfileNameUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ProfileOwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"ProfilePendingOwnerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"}],\"name\":\"acceptProfileOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"addMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"createProfile\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_anchor\",\"type\":\"address\"}],\"name\":\"getProfileByAnchor\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"internalType\":\"struct IRegistry.Profile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"}],\"name\":\"getProfileById\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"internalType\":\"struct IRegistry.Profile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"isMemberOfProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isMemberOfProfile\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isOwnerOfProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOwnerOfProfile\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isOwnerOrMemberOfProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOwnerOrMemberOfProfile\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"removeMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"updateProfileMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"updateProfileName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_pendingOwner\",\"type\":\"address\"}],\"name\":\"updateProfilePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"The Registry Interface is used to interact with the Allo protocol and create profiles      that can be used to interact with the Allo protocol. The Registry is the main contract      that all other contracts interact with to get the 'Profile' information needed to      interact with the Allo protocol. The Registry is also used to create new profiles      and update existing profiles. The Registry is also used to add and remove members      from a profile. The Registry will not always be used in a strategy and will depend on      the strategy being used.\",\"events\":{\"ProfileCreated(bytes32,uint256,string,(uint256,string),address,address)\":{\"details\":\"Emitted when a profile is created. This will return your anchor address.\"},\"ProfileMetadataUpdated(bytes32,(uint256,string))\":{\"details\":\"Emitted when a profile's metadata is updated.\"},\"ProfileNameUpdated(bytes32,string,address)\":{\"details\":\"Emitted when a profile name is updated. This will update the anchor when the name is updated and return it.\"},\"ProfileOwnerUpdated(bytes32,address)\":{\"details\":\"Emitted when a profile owner is updated.\"},\"ProfilePendingOwnerUpdated(bytes32,address)\":{\"details\":\"Emitted when a profile pending owner is updated.\"}},\"kind\":\"dev\",\"methods\":{\"acceptProfileOwnership(bytes32)\":{\"details\":\"Accepts the pending 'owner' of the '_profileId' passed in Requirements: Only the pending owner can accept the ownership\",\"params\":{\"_profileId\":\"The 'profileId' to accept the ownership for\"}},\"addMembers(bytes32,address[])\":{\"details\":\"Adds members to the '_profileId' passed in Requirements: Only the 'Profile' owner can add members\",\"params\":{\"_members\":\"The members to add to the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to add members to\"}},\"createProfile(uint256,string,(uint256,string),address,address[])\":{\"details\":\"Creates a new 'Profile' and returns the 'profileId' of the new profile Note: The 'name' and 'nonce' are used to generate the 'anchor' address Requirements: None, anyone can create a new profile\",\"params\":{\"_members\":\"The 'members' to use to generate the 'anchor' address\",\"_metadata\":\"The 'Metadata' to use to generate the 'anchor' address\",\"_name\":\"The name to use to generate the 'anchor' address\",\"_nonce\":\"The nonce to use to generate the 'anchor' address\",\"_owner\":\"The 'owner' to use to generate the 'anchor' address\"},\"returns\":{\"profileId\":\"The 'profileId' of the new profile\"}},\"getProfileByAnchor(address)\":{\"details\":\"Returns the 'Profile' for an '_anchor' passed\",\"params\":{\"_anchor\":\"The 'anchor' to return the 'Profile' for\"},\"returns\":{\"profile\":\"The 'Profile' for the '_anchor' passed\"}},\"getProfileById(bytes32)\":{\"details\":\"Returns the 'Profile' for a '_profileId' passed\",\"params\":{\"_profileId\":\"The 'profileId' to return the 'Profile' for\"},\"returns\":{\"profile\":\"The 'Profile' for the '_profileId' passed\"}},\"isMemberOfProfile(bytes32,address)\":{\"details\":\"Returns a boolean if the '_account' is a member of the '_profileId' passed in\",\"params\":{\"_member\":\"The 'member' to check if they are a member of the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to check if the '_account' is a member of\"},\"returns\":{\"isMemberOfProfile\":\"A boolean if the '_account' is a member of the '_profileId' passed in\"}},\"isOwnerOfProfile(bytes32,address)\":{\"details\":\"Returns a boolean if the '_account' is an owner of the '_profileId' passed in\",\"params\":{\"_owner\":\"The 'owner' to check if they are an owner of the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to check if the '_account' is an owner of\"},\"returns\":{\"isOwnerOfProfile\":\"A boolean if the '_account' is an owner of the '_profileId' passed in\"}},\"isOwnerOrMemberOfProfile(bytes32,address)\":{\"details\":\"Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in\",\"params\":{\"_account\":\"The 'account' to check if they are a member or owner of the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to check if the '_account' is a member or owner of\"},\"returns\":{\"isOwnerOrMemberOfProfile\":\"A boolean if the '_account' is a member or owner of the '_profileId' passed in\"}},\"recoverFunds(address,address)\":{\"details\":\"Recovers funds from the contract Requirements: Must be the Allo owner\",\"params\":{\"_recipient\":\"The recipient of the recovered funds\",\"_token\":\"The token you want to use to recover funds\"}},\"removeMembers(bytes32,address[])\":{\"details\":\"Removes members from the '_profileId' passed in Requirements: Only the 'Profile' owner can remove members\",\"params\":{\"_members\":\"The members to remove from the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to remove members from\"}},\"updateProfileMetadata(bytes32,(uint256,string))\":{\"details\":\"Updates the 'Metadata' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the metadata\",\"params\":{\"_metadata\":\"The new 'Metadata' value\",\"_profileId\":\"The 'profileId' to update the metadata for\"}},\"updateProfileName(bytes32,string)\":{\"details\":\"Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address Requirements: Only the 'Profile' owner can update the name Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'       so please use caution. You can always recreate your 'anchor' address by updating the name back       to the original name used to create the profile.\",\"params\":{\"_name\":\"The new 'name' value\",\"_profileId\":\"The 'profileId' to update the name for\"},\"returns\":{\"anchor\":\"The new 'anchor' address\"}},\"updateProfilePendingOwner(bytes32,address)\":{\"details\":\"Updates the pending 'owner' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the pending owner\",\"params\":{\"_pendingOwner\":\"The new pending 'owner' value\",\"_profileId\":\"The 'profileId' to update the pending owner for\"}}},\"title\":\"IRegistry Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Registry contract and exposes all functions needed to use the Registry         within the Allo protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":\"IRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the Registry contract and exposes all functions needed to use the Registry         within the Allo protocol.",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/interfaces/IStrategy.sol": {
				"IStrategy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Allocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Distributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolActive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllo",
							"outputs": [
								{
									"internalType": "contract IAllo",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "getPayouts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IStrategy.PayoutSummary[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipientId",
									"type": "address"
								}
							],
							"name": "getRecipientStatus",
							"outputs": [
								{
									"internalType": "enum IStrategy.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStrategyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "increasePoolAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPoolActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "isValidAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"events": {
							"Allocated(address,uint256,address,address)": {
								"params": {
									"amount": "The amount allocated",
									"recipientId": "The ID of the recipient",
									"token": "The token allocated"
								}
							},
							"Distributed(address,address,uint256,address)": {
								"params": {
									"amount": "The amount distributed",
									"recipientAddress": "The recipient",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							},
							"Initialized(uint256,bytes)": {
								"params": {
									"data": "The data passed to the 'initialize' function",
									"poolId": "The ID of the pool"
								}
							},
							"PoolActive(bool)": {
								"params": {
									"active": "The status of the pool"
								}
							},
							"Registered(address,bytes,address)": {
								"params": {
									"data": "The data passed to the 'registerRecipient' function",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allocate(bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to allocate to the recipient",
									"_sender": "The address of the sender"
								}
							},
							"distribute(address[],bytes,address)": {
								"details": "most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference this contract will need to track the amount paid already, so that it doesn't double pay."
							},
							"getAllo()": {
								"returns": {
									"_0": "The 'Allo' contract"
								}
							},
							"getPayouts(address[],bytes[])": {
								"details": "Input the values you would send to distribute(), get the amounts each recipient in the array would receive.      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.",
								"params": {
									"_data": "The encoded data",
									"_recipientIds": "The IDs of the recipients"
								}
							},
							"getPoolAmount()": {
								"returns": {
									"_0": "The balance of the pool"
								}
							},
							"getPoolId()": {
								"returns": {
									"_0": "The ID of the pool"
								}
							},
							"getRecipientStatus(address)": {
								"params": {
									"_recipientId": "The ID of the recipient"
								},
								"returns": {
									"_0": "The status of the recipient"
								}
							},
							"getStrategyId()": {
								"returns": {
									"_0": "The ID of the strategy"
								}
							},
							"increasePoolAmount(uint256)": {
								"params": {
									"_amount": "The amount to increase the pool by"
								}
							},
							"initialize(uint256,bytes)": {
								"params": {
									"_data": "The encoded data",
									"_poolId": "The ID of the pool"
								}
							},
							"isPoolActive()": {
								"returns": {
									"_0": "Whether the pool is active or not"
								}
							},
							"isValidAllocator(address)": {
								"params": {
									"_allocator": "The allocator to check"
								},
								"returns": {
									"_0": "Whether the allocator is valid or not"
								}
							},
							"registerRecipient(bytes,address)": {
								"details": "Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional      functions should be added to allow the owner to check this. The owner could also check attestations directly      and then accept for instance. The '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to register the recipient",
									"_sender": "The address of the sender"
								},
								"returns": {
									"_0": "The ID of the recipient"
								}
							}
						},
						"title": "IStrategy Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allocate(bytes,address)": "ef2920fc",
							"distribute(address[],bytes,address)": "0a6f0ee9",
							"getAllo()": "15cc481e",
							"getPayouts(address[],bytes[])": "b2b878d0",
							"getPoolAmount()": "4ab4ba42",
							"getPoolId()": "38fff2d0",
							"getRecipientStatus(address)": "eb11af93",
							"getStrategyId()": "42fda9c7",
							"increasePoolAmount(uint256)": "f5b0dfb7",
							"initialize(uint256,bytes)": "edd146cc",
							"isPoolActive()": "df868ed3",
							"isValidAllocator(address)": "4d31d087",
							"registerRecipient(bytes,address)": "2bbe0cae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"distribute(address[],bytes,address)\":{\"details\":\"most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference this contract will need to track the amount paid already, so that it doesn't double pay.\"},\"getAllo()\":{\"returns\":{\"_0\":\"The 'Allo' contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"Input the values you would send to distribute(), get the amounts each recipient in the array would receive.      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.\",\"params\":{\"_data\":\"The encoded data\",\"_recipientIds\":\"The IDs of the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"Whether the pool is active or not\"}},\"isValidAllocator(address)\":{\"params\":{\"_allocator\":\"The allocator to check\"},\"returns\":{\"_0\":\"Whether the allocator is valid or not\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional      functions should be added to allow the owner to check this. The owner could also check attestations directly      and then accept for instance. The '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"_0\":\"The ID of the recipient\"}}},\"title\":\"IStrategy Interface\",\"version\":1},\"userdoc\":{\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"allocate(bytes,address)\":{\"notice\":\"This will allocate to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"This will distribute funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the address of the Allo contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Checks the amount allocated to a recipient for distribution.\"},\"getPoolAmount()\":{\"notice\":\"Checks the amount of tokens in the pool.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId' for this strategy.\"},\"getRecipientStatus(address)\":{\"notice\":\"Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those      since there is no need for Pending or Rejected.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'id' of the strategy.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the balance of the pool.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"whether pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks whether a allocator is valid or not, will usually be true for all strategies      and will depend on the strategy implementation.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"This will register a recipient, set their status (and any other strategy specific values), and         return the ID of the recipient.\"}},\"notice\":\"BaseStrategy is the base contract that all strategies should inherit from and uses this interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29\",\"dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Allocated(address,uint256,address,address)": {
								"notice": "Emitted when a recipient is allocated to."
							},
							"Distributed(address,address,uint256,address)": {
								"notice": "Emitted when tokens are distributed."
							},
							"Initialized(uint256,bytes)": {
								"notice": "Emitted when strategy is initialized."
							},
							"PoolActive(bool)": {
								"notice": "Emitted when pool is set to active status."
							},
							"Registered(address,bytes,address)": {
								"notice": "Emitted when a recipient is registered."
							}
						},
						"kind": "user",
						"methods": {
							"allocate(bytes,address)": {
								"notice": "This will allocate to a recipient."
							},
							"distribute(address[],bytes,address)": {
								"notice": "This will distribute funds (tokens) to recipients."
							},
							"getAllo()": {
								"notice": "Getter for the address of the Allo contract."
							},
							"getPayouts(address[],bytes[])": {
								"notice": "Checks the amount allocated to a recipient for distribution."
							},
							"getPoolAmount()": {
								"notice": "Checks the amount of tokens in the pool."
							},
							"getPoolId()": {
								"notice": "Getter for the 'poolId' for this strategy."
							},
							"getRecipientStatus(address)": {
								"notice": "Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those      since there is no need for Pending or Rejected."
							},
							"getStrategyId()": {
								"notice": "Getter for the 'id' of the strategy."
							},
							"increasePoolAmount(uint256)": {
								"notice": "Increases the balance of the pool."
							},
							"initialize(uint256,bytes)": {
								"notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
							},
							"isPoolActive()": {
								"notice": "whether pool is active."
							},
							"isValidAllocator(address)": {
								"notice": "Checks whether a allocator is valid or not, will usually be true for all strategies      and will depend on the strategy implementation."
							},
							"registerRecipient(bytes,address)": {
								"notice": "This will register a recipient, set their status (and any other strategy specific values), and         return the ID of the recipient."
							}
						},
						"notice": "BaseStrategy is the base contract that all strategies should inherit from and uses this interface.",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/libraries/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "ALLOCATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ENDED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALREADY_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ANCHOR_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ARRAY_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_FEE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_METADATA",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_REGISTRATION",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IS_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NONCE_NOT_AVAILABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NON_ZERO_VALUE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_ENOUGH_FUNDS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_IMPLEMENTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_PENDING_OWNER",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_INACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_ALREADY_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"name": "RECIPIENT_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_NOT_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UNAUTHORIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZERO_ADDRESS",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @KurtMerbeth <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>",
						"errors": {
							"ANCHOR_ERROR()": [
								{
									"details": "Thrown if the anchor creation fails"
								}
							],
							"NONCE_NOT_AVAILABLE()": [
								{
									"details": "Thrown when the nonce passed has been used or not available"
								}
							],
							"NOT_PENDING_OWNER()": [
								{
									"details": "Thrown when the 'msg.sender' is not the pending owner on ownership transfer"
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "Errors",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/allo-v2/contracts/core/libraries/Errors.sol\":4269:7313  contract Errors {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/allo-v2/contracts/core/libraries/Errors.sol\":4269:7313  contract Errors {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220988dbecd9056632e1f55ef3e57d839cbdf2362146fb4b984e1d0aa9ca4dd957b64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220988dbecd9056632e1f55ef3e57d839cbdf2362146fb4b984e1d0aa9ca4dd957b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP14 0xBE 0xCD SWAP1 JUMP PUSH4 0x2E1F55EF RETURNDATACOPY JUMPI 0xD8 CODECOPY 0xCB 0xDF 0x23 PUSH3 0x146FB4 0xB9 DUP5 0xE1 0xD0 0xAA SWAP13 LOG4 0xDD SWAP6 PUSH28 0x64736F6C634300081300330000000000000000000000000000000000 ",
							"sourceMap": "4269:3044:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220988dbecd9056632e1f55ef3e57d839cbdf2362146fb4b984e1d0aa9ca4dd957b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP14 0xBE 0xCD SWAP1 JUMP PUSH4 0x2E1F55EF RETURNDATACOPY JUMPI 0xD8 CODECOPY 0xCB 0xDF 0x23 PUSH3 0x146FB4 0xB9 DUP5 0xE1 0xD0 0xAA SWAP13 LOG4 0xDD SWAP6 PUSH28 0x64736F6C634300081300330000000000000000000000000000000000 ",
							"sourceMap": "4269:3044:3:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4269,
									"end": 7313,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 7313,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220988dbecd9056632e1f55ef3e57d839cbdf2362146fb4b984e1d0aa9ca4dd957b64736f6c63430008130033",
									".code": [
										{
											"begin": 4269,
											"end": 7313,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4269,
											"end": 7313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4269,
											"end": 7313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 7313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 7313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 7313,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NON_ZERO_VALUE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @KurtMerbeth <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>\",\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors\",\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NON_ZERO_VALUE()\":[{\"notice\":\"Thrown when the value is non-zero\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_ACTIVE()\":[{\"notice\":\"Thrown when registration is active.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Library containing all custom errors the protocol may revert with.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/libraries/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0x67e3c1109948a92cb3a01e8c2325c5f1b748ecbd4c9cd5bee34e81fa737f77ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9603d3f1c4bb4b44a55663e71688a9d10786038e5dfa5039aa354572af1a53c3\",\"dweb:/ipfs/QmWNxsPH9YaJJkFiiU6oJ642i5kHxPzpRYfR5H8zSH4KaP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ALLOCATION_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is active."
								}
							],
							"ALLOCATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is not active."
								}
							],
							"ALLOCATION_NOT_ENDED()": [
								{
									"notice": "Thrown when the allocation is not ended."
								}
							],
							"ALREADY_INITIALIZED()": [
								{
									"notice": "Thrown when data is already intialized"
								}
							],
							"ARRAY_MISMATCH()": [
								{
									"notice": "Thrown when two arrays length are not equal"
								}
							],
							"INVALID()": [
								{
									"notice": "Thrown as a general error when input / data is invalid"
								}
							],
							"INVALID_ADDRESS()": [
								{
									"notice": "Thrown when an invalid address is used"
								}
							],
							"INVALID_FEE()": [
								{
									"notice": "Thrown when the fee is below 1e18 which is the fee percentage denominator"
								}
							],
							"INVALID_METADATA()": [
								{
									"notice": "Thrown when the metadata is invalid."
								}
							],
							"INVALID_REGISTRATION()": [
								{
									"notice": "Thrown when the registration is invalid."
								}
							],
							"IS_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is approved and should be cloned"
								}
							],
							"MISMATCH()": [
								{
									"notice": "Thrown when mismatch in decoding data"
								}
							],
							"NON_ZERO_VALUE()": [
								{
									"notice": "Thrown when the value is non-zero"
								}
							],
							"NOT_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is not approved"
								}
							],
							"NOT_ENOUGH_FUNDS()": [
								{
									"notice": "Thrown when not enough funds are available"
								}
							],
							"NOT_IMPLEMENTED()": [
								{
									"notice": "Thrown when the function is not implemented"
								}
							],
							"NOT_INITIALIZED()": [
								{
									"notice": "Thrown when data is yet to be initialized"
								}
							],
							"POOL_ACTIVE()": [
								{
									"notice": "Thrown when a pool is already active"
								}
							],
							"POOL_INACTIVE()": [
								{
									"notice": "Thrown when a pool is inactive"
								}
							],
							"RECIPIENT_ALREADY_ACCEPTED()": [
								{
									"notice": "Thrown when recipient is already accepted."
								}
							],
							"RECIPIENT_ERROR(address)": [
								{
									"notice": "Thrown when there is an error in recipient."
								}
							],
							"RECIPIENT_NOT_ACCEPTED()": [
								{
									"notice": "Thrown when the recipient is not accepted."
								}
							],
							"REGISTRATION_ACTIVE()": [
								{
									"notice": "Thrown when registration is active."
								}
							],
							"REGISTRATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when registration is not active."
								}
							],
							"UNAUTHORIZED()": [
								{
									"notice": "Thrown when user is not authorized"
								}
							],
							"ZERO_ADDRESS()": [
								{
									"notice": "Thrown when address is the zero address"
								}
							]
						},
						"kind": "user",
						"methods": {},
						"notice": "Library containing all custom errors the protocol may revert with.",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/libraries/Native.sol": {
				"Native": {
					"abi": [
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"kind": "dev",
						"methods": {},
						"title": "Native token information",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4346:4490  contract Native {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4346:4490  contract Native {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa0cf0aea\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4412:4487  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4445:4487  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4412:4487  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_9:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_14\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_8\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_10:\n        /* \"#utility.yul\":328:352   */\n      tag_16\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_18\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_10\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e16a73a1b6f373a179c668ef113abdc78db43ee885841b0a23cb64a92b50eae864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060eb8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a0cf0aea14602d575b600080fd5b60336047565b604051603e9190609c565b60405180910390f35b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000608882605f565b9050919050565b609681607f565b82525050565b600060208201905060af6000830184608f565b9291505056fea2646970667358221220e16a73a1b6f373a179c668ef113abdc78db43ee885841b0a23cb64a92b50eae864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xEB DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x88 DUP3 PUSH1 0x5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x96 DUP2 PUSH1 0x7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xAF PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH11 0x73A1B6F373A179C668EF11 GASPRICE 0xBD 0xC7 DUP14 0xB4 RETURNDATACOPY 0xE8 DUP6 DUP5 SHL EXP 0x23 0xCB PUSH5 0xA92B50EAE8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "4346:144:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_826": {
									"entryPoint": 71,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 95,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063a0cf0aea14602d575b600080fd5b60336047565b604051603e9190609c565b60405180910390f35b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000608882605f565b9050919050565b609681607f565b82525050565b600060208201905060af6000830184608f565b9291505056fea2646970667358221220e16a73a1b6f373a179c668ef113abdc78db43ee885841b0a23cb64a92b50eae864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x88 DUP3 PUSH1 0x5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x96 DUP2 PUSH1 0x7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xAF PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH11 0x73A1B6F373A179C668EF11 GASPRICE 0xBD 0xC7 DUP14 0xB4 RETURNDATACOPY 0xE8 DUP6 DUP5 SHL EXP 0x23 0xCB PUSH5 0xA92B50EAE8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "4346:144:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4412:75;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;4445:42;4412:75;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "47000",
								"executionCost": "99",
								"totalCost": "47099"
							},
							"external": {
								"NATIVE()": "356"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4346,
									"end": 4490,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4346,
									"end": 4490,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e16a73a1b6f373a179c668ef113abdc78db43ee885841b0a23cb64a92b50eae864736f6c63430008130033",
									".code": [
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH",
											"source": 5,
											"value": "A0CF0AEA"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4490,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4412,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4412,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Native token information\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"}},\"notice\":\"This is used to define the address of the native token for the protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/libraries/Native.sol\":\"Native\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"NATIVE()": {
								"notice": "Address of the native token"
							}
						},
						"notice": "This is used to define the address of the native token for the protocol",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/core/libraries/Transfer.sol": {
				"Transfer": {
					"abi": [
						{
							"inputs": [],
							"name": "AMOUNT_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"details": "Handles the transfer of tokens to an address",
						"kind": "dev",
						"methods": {},
						"title": "Transfer contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":4513:7537  contract Transfer is Native {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":4513:7537  contract Transfer is Native {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa0cf0aea\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4412:4487  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4445:4487  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4412:4487  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_9:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_14\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_8\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_10:\n        /* \"#utility.yul\":328:352   */\n      tag_16\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_18\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_10\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220779892610161def5694fd6d98a0555e26cfb9c91846cb8f58080332a98b1babd64736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060eb8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a0cf0aea14602d575b600080fd5b60336047565b604051603e9190609c565b60405180910390f35b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000608882605f565b9050919050565b609681607f565b82525050565b600060208201905060af6000830184608f565b9291505056fea2646970667358221220779892610161def5694fd6d98a0555e26cfb9c91846cb8f58080332a98b1babd64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xEB DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x88 DUP3 PUSH1 0x5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x96 DUP2 PUSH1 0x7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xAF PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x9892610161DEF5694FD6D98A0555E26CFB9C91846CB8F580 DUP1 CALLER 0x2A SWAP9 0xB1 0xBA 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "4513:3024:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_826": {
									"entryPoint": 71,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 95,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:10",
														"type": ""
													}
												],
												"src": "139:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:10",
														"type": ""
													}
												],
												"src": "241:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:10",
														"type": ""
													}
												],
												"src": "365:222:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063a0cf0aea14602d575b600080fd5b60336047565b604051603e9190609c565b60405180910390f35b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000608882605f565b9050919050565b609681607f565b82525050565b600060208201905060af6000830184608f565b9291505056fea2646970667358221220779892610161def5694fd6d98a0555e26cfb9c91846cb8f58080332a98b1babd64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x88 DUP3 PUSH1 0x5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x96 DUP2 PUSH1 0x7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xAF PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x9892610161DEF5694FD6D98A0555E26CFB9C91846CB8F580 DUP1 CALLER 0x2A SWAP9 0xB1 0xBA 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "4513:3024:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4412:75:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;4445:42;4412:75;:::o;7:126:10:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "47000",
								"executionCost": "99",
								"totalCost": "47099"
							},
							"external": {
								"NATIVE()": "356"
							},
							"internal": {
								"_getBalance(address,address)": "infinite",
								"_transferAmount(address,address,uint256)": "infinite",
								"_transferAmountFrom(address,struct Transfer.TransferData memory)": "infinite",
								"_transferAmountsFrom(address,struct Transfer.TransferData memory[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4513,
									"end": 7537,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4513,
									"end": 7537,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220779892610161def5694fd6d98a0555e26cfb9c91846cb8f58080332a98b1babd64736f6c63430008130033",
									".code": [
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH",
											"source": 6,
											"value": "A0CF0AEA"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 7537,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4412,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4412,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"Handles the transfer of tokens to an address\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Transfer contract\",\"version\":1},\"userdoc\":{\"errors\":{\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}]},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"}},\"notice\":\"A helper contract to transfer tokens within Allo protocol\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":\"Transfer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0x99f4e3bfd5cea354c2ef9e9774d7bdb2310faec5e7a21a619d87377b40eba135\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f84412d189fa7c6ea3656409af156fad084b1a541850798da3e76549e3124588\",\"dweb:/ipfs/QmT3roFjt41PX7zgjT7KdThFU37Fh7F6vEyKooSzpfTBvq\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"AMOUNT_MISMATCH()": [
								{
									"notice": "Thrown when the amount of tokens sent does not match the amount of tokens expected"
								}
							]
						},
						"kind": "user",
						"methods": {
							"NATIVE()": {
								"notice": "Address of the native token"
							}
						},
						"notice": "A helper contract to transfer tokens within Allo protocol",
						"version": 1
					}
				}
			},
			"lib/allo-v2/contracts/strategies/BaseStrategy.sol": {
				"BaseStrategy": {
					"abi": [
						{
							"inputs": [],
							"name": "ALLOCATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ENDED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALREADY_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AMOUNT_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ANCHOR_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ARRAY_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_FEE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_METADATA",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_REGISTRATION",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IS_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NONCE_NOT_AVAILABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NON_ZERO_VALUE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_ENOUGH_FUNDS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_IMPLEMENTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_PENDING_OWNER",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_INACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_ALREADY_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"name": "RECIPIENT_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_NOT_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UNAUTHORIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZERO_ADDRESS",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Allocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Distributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolActive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllo",
							"outputs": [
								{
									"internalType": "contract IAllo",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "getPayouts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IStrategy.PayoutSummary[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipientId",
									"type": "address"
								}
							],
							"name": "getRecipientStatus",
							"outputs": [
								{
									"internalType": "enum IStrategy.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStrategyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "increasePoolAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPoolActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "isValidAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"details": "This contract is implemented by all strategies.",
						"errors": {
							"ANCHOR_ERROR()": [
								{
									"details": "Thrown if the anchor creation fails"
								}
							],
							"NONCE_NOT_AVAILABLE()": [
								{
									"details": "Thrown when the nonce passed has been used or not available"
								}
							],
							"NOT_PENDING_OWNER()": [
								{
									"details": "Thrown when the 'msg.sender' is not the pending owner on ownership transfer"
								}
							]
						},
						"events": {
							"Allocated(address,uint256,address,address)": {
								"params": {
									"amount": "The amount allocated",
									"recipientId": "The ID of the recipient",
									"token": "The token allocated"
								}
							},
							"Distributed(address,address,uint256,address)": {
								"params": {
									"amount": "The amount distributed",
									"recipientAddress": "The recipient",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							},
							"Initialized(uint256,bytes)": {
								"params": {
									"data": "The data passed to the 'initialize' function",
									"poolId": "The ID of the pool"
								}
							},
							"PoolActive(bool)": {
								"params": {
									"active": "The status of the pool"
								}
							},
							"Registered(address,bytes,address)": {
								"params": {
									"data": "The data passed to the 'registerRecipient' function",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allocate(bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to allocate to the recipient",
									"_sender": "The address of the sender"
								}
							},
							"constructor": {
								"params": {
									"_allo": "Address of the Allo contract.",
									"_name": "Name of the strategy"
								}
							},
							"distribute(address[],bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to distribute to the recipients",
									"_recipientIds": "The IDs of the recipients",
									"_sender": "The address of the sender"
								}
							},
							"getAllo()": {
								"returns": {
									"_0": "The Allo contract"
								}
							},
							"getPayouts(address[],bytes[])": {
								"details": "The encoded '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to get the payout summary for the recipients",
									"_recipientIds": "The IDs of the recipients"
								},
								"returns": {
									"_0": "The payout summary for the recipients"
								}
							},
							"getPoolAmount()": {
								"returns": {
									"_0": "The balance of the pool"
								}
							},
							"getPoolId()": {
								"returns": {
									"_0": "The ID of the pool"
								}
							},
							"getRecipientStatus(address)": {
								"params": {
									"_recipientId": "The ID of the recipient"
								},
								"returns": {
									"_0": "The status of the recipient"
								}
							},
							"getStrategyId()": {
								"returns": {
									"_0": "The ID of the strategy"
								}
							},
							"increasePoolAmount(uint256)": {
								"details": "Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.",
								"params": {
									"_amount": "The amount to increase the pool by"
								}
							},
							"initialize(uint256,bytes)": {
								"params": {
									"_data": "The encoded data",
									"_poolId": "The ID of the pool"
								}
							},
							"isPoolActive()": {
								"returns": {
									"_0": "'true' if the pool is active, otherwise 'false'"
								}
							},
							"isValidAllocator(address)": {
								"details": "How the allocator is determined is up to the strategy implementation.",
								"params": {
									"_allocator": "The address to check if it is a valid allocator for the strategy."
								},
								"returns": {
									"_0": "'true' if the address is a valid allocator, 'false' otherwise"
								}
							},
							"registerRecipient(bytes,address)": {
								"details": "Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.",
								"params": {
									"_data": "The data to use to register the recipient",
									"_sender": "The address of the sender"
								},
								"returns": {
									"recipientId": "The recipientId"
								}
							}
						},
						"title": "BaseStrategy Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea",
							"allocate(bytes,address)": "ef2920fc",
							"distribute(address[],bytes,address)": "0a6f0ee9",
							"getAllo()": "15cc481e",
							"getPayouts(address[],bytes[])": "b2b878d0",
							"getPoolAmount()": "4ab4ba42",
							"getPoolId()": "38fff2d0",
							"getRecipientStatus(address)": "eb11af93",
							"getStrategyId()": "42fda9c7",
							"increasePoolAmount(uint256)": "f5b0dfb7",
							"initialize(uint256,bytes)": "edd146cc",
							"isPoolActive()": "df868ed3",
							"isValidAllocator(address)": "4d31d087",
							"registerRecipient(bytes,address)": "2bbe0cae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NON_ZERO_VALUE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"This contract is implemented by all strategies.\",\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"constructor\":{\"params\":{\"_allo\":\"Address of the Allo contract.\",\"_name\":\"Name of the strategy\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to get the payout summary for the recipients\",\"_recipientIds\":\"The IDs of the recipients\"},\"returns\":{\"_0\":\"The payout summary for the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}}},\"title\":\"BaseStrategy Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NON_ZERO_VALUE()\":[{\"notice\":\"Thrown when the value is non-zero\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_ACTIVE()\":[{\"notice\":\"Thrown when registration is active.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"constructor\":{\"notice\":\"Constructor to set the Allo contract and \\\"strategyId'.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Gets the payout summary for recipients.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"}},\"notice\":\"This contract is the base contract for all strategies\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":\"BaseStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29\",\"dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0x67e3c1109948a92cb3a01e8c2325c5f1b748ecbd4c9cd5bee34e81fa737f77ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9603d3f1c4bb4b44a55663e71688a9d10786038e5dfa5039aa354572af1a53c3\",\"dweb:/ipfs/QmWNxsPH9YaJJkFiiU6oJ642i5kHxPzpRYfR5H8zSH4KaP\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]},\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0x99f4e3bfd5cea354c2ef9e9774d7bdb2310faec5e7a21a619d87377b40eba135\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f84412d189fa7c6ea3656409af156fad084b1a541850798da3e76549e3124588\",\"dweb:/ipfs/QmT3roFjt41PX7zgjT7KdThFU37Fh7F6vEyKooSzpfTBvq\"]},\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":{\"keccak256\":\"0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974\",\"dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1060,
								"contract": "lib/allo-v2/contracts/strategies/BaseStrategy.sol:BaseStrategy",
								"label": "poolActive",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1062,
								"contract": "lib/allo-v2/contracts/strategies/BaseStrategy.sol:BaseStrategy",
								"label": "poolId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1064,
								"contract": "lib/allo-v2/contracts/strategies/BaseStrategy.sol:BaseStrategy",
								"label": "poolAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ALLOCATION_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is active."
								}
							],
							"ALLOCATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is not active."
								}
							],
							"ALLOCATION_NOT_ENDED()": [
								{
									"notice": "Thrown when the allocation is not ended."
								}
							],
							"ALREADY_INITIALIZED()": [
								{
									"notice": "Thrown when data is already intialized"
								}
							],
							"AMOUNT_MISMATCH()": [
								{
									"notice": "Thrown when the amount of tokens sent does not match the amount of tokens expected"
								}
							],
							"ARRAY_MISMATCH()": [
								{
									"notice": "Thrown when two arrays length are not equal"
								}
							],
							"INVALID()": [
								{
									"notice": "Thrown as a general error when input / data is invalid"
								}
							],
							"INVALID_ADDRESS()": [
								{
									"notice": "Thrown when an invalid address is used"
								}
							],
							"INVALID_FEE()": [
								{
									"notice": "Thrown when the fee is below 1e18 which is the fee percentage denominator"
								}
							],
							"INVALID_METADATA()": [
								{
									"notice": "Thrown when the metadata is invalid."
								}
							],
							"INVALID_REGISTRATION()": [
								{
									"notice": "Thrown when the registration is invalid."
								}
							],
							"IS_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is approved and should be cloned"
								}
							],
							"MISMATCH()": [
								{
									"notice": "Thrown when mismatch in decoding data"
								}
							],
							"NON_ZERO_VALUE()": [
								{
									"notice": "Thrown when the value is non-zero"
								}
							],
							"NOT_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is not approved"
								}
							],
							"NOT_ENOUGH_FUNDS()": [
								{
									"notice": "Thrown when not enough funds are available"
								}
							],
							"NOT_IMPLEMENTED()": [
								{
									"notice": "Thrown when the function is not implemented"
								}
							],
							"NOT_INITIALIZED()": [
								{
									"notice": "Thrown when data is yet to be initialized"
								}
							],
							"POOL_ACTIVE()": [
								{
									"notice": "Thrown when a pool is already active"
								}
							],
							"POOL_INACTIVE()": [
								{
									"notice": "Thrown when a pool is inactive"
								}
							],
							"RECIPIENT_ALREADY_ACCEPTED()": [
								{
									"notice": "Thrown when recipient is already accepted."
								}
							],
							"RECIPIENT_ERROR(address)": [
								{
									"notice": "Thrown when there is an error in recipient."
								}
							],
							"RECIPIENT_NOT_ACCEPTED()": [
								{
									"notice": "Thrown when the recipient is not accepted."
								}
							],
							"REGISTRATION_ACTIVE()": [
								{
									"notice": "Thrown when registration is active."
								}
							],
							"REGISTRATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when registration is not active."
								}
							],
							"UNAUTHORIZED()": [
								{
									"notice": "Thrown when user is not authorized"
								}
							],
							"ZERO_ADDRESS()": [
								{
									"notice": "Thrown when address is the zero address"
								}
							]
						},
						"events": {
							"Allocated(address,uint256,address,address)": {
								"notice": "Emitted when a recipient is allocated to."
							},
							"Distributed(address,address,uint256,address)": {
								"notice": "Emitted when tokens are distributed."
							},
							"Initialized(uint256,bytes)": {
								"notice": "Emitted when strategy is initialized."
							},
							"PoolActive(bool)": {
								"notice": "Emitted when pool is set to active status."
							},
							"Registered(address,bytes,address)": {
								"notice": "Emitted when a recipient is registered."
							}
						},
						"kind": "user",
						"methods": {
							"NATIVE()": {
								"notice": "Address of the native token"
							},
							"allocate(bytes,address)": {
								"notice": "Allocates to a recipient."
							},
							"constructor": {
								"notice": "Constructor to set the Allo contract and \"strategyId'."
							},
							"distribute(address[],bytes,address)": {
								"notice": "Distributes funds (tokens) to recipients."
							},
							"getAllo()": {
								"notice": "Getter for the 'Allo' contract."
							},
							"getPayouts(address[],bytes[])": {
								"notice": "Gets the payout summary for recipients."
							},
							"getPoolAmount()": {
								"notice": "Getter for the 'poolAmount'."
							},
							"getPoolId()": {
								"notice": "Getter for the 'poolId'."
							},
							"getRecipientStatus(address)": {
								"notice": "Getter for the status of a recipient."
							},
							"getStrategyId()": {
								"notice": "Getter for the 'strategyId'."
							},
							"increasePoolAmount(uint256)": {
								"notice": "Increases the pool amount."
							},
							"initialize(uint256,bytes)": {
								"notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
							},
							"isPoolActive()": {
								"notice": "Getter for whether or not the pool is active."
							},
							"isValidAllocator(address)": {
								"notice": "Checks if the '_allocator' is a valid allocator."
							},
							"registerRecipient(bytes,address)": {
								"notice": "Registers a recipient."
							}
						},
						"notice": "This contract is the base contract for all strategies",
						"version": 1
					}
				}
			},
			"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol": {
				"SafeTransferLib": {
					"abi": [
						{
							"inputs": [],
							"name": "ApproveFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ETHTransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromFailed",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)",
						"details": "Note: - For ETH transfers, please use `forceSafeTransferETH` for gas griefing protection. - For ERC20s, this implementation won't check that a token has code, responsibility is delegated to the caller.",
						"errors": {
							"ApproveFailed()": [
								{
									"details": "The ERC20 `approve` has failed."
								}
							],
							"ETHTransferFailed()": [
								{
									"details": "The ETH transfer has failed."
								}
							],
							"TransferFailed()": [
								{
									"details": "The ERC20 `transfer` has failed."
								}
							],
							"TransferFromFailed()": [
								{
									"details": "The ERC20 `transferFrom` has failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"GAS_STIPEND_NO_GRIEF": {
								"details": "Suggested gas stipend for contract receiving ETH to perform a few storage reads and writes, but low enough to prevent griefing. Multiply by a small constant (e.g. 2), if needed."
							},
							"GAS_STIPEND_NO_STORAGE_WRITES": {
								"details": "Suggested gas stipend for contract receiving ETH that disallows any storage writes."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":596:19023  library SafeTransferLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":596:19023  library SafeTransferLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220823970572e10ae99b800d893e70ad06c3314defe5a223f815bc782094bf33fd164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220823970572e10ae99b800d893e70ad06c3314defe5a223f815bc782094bf33fd164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 CODECOPY PUSH17 0x572E10AE99B800D893E70AD06C3314DEFE GAS 0x22 EXTCODEHASH DUP2 JUMPDEST 0xC7 DUP3 MULMOD 0x4B RETURN EXTCODEHASH 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "596:18427:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220823970572e10ae99b800d893e70ad06c3314defe5a223f815bc782094bf33fd164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 CODECOPY PUSH17 0x572E10AE99B800D893E70AD06C3314DEFE GAS 0x22 EXTCODEHASH DUP2 JUMPDEST 0xC7 DUP3 MULMOD 0x4B RETURN EXTCODEHASH 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "596:18427:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"balanceOf(address,address)": "infinite",
								"forceSafeTransferETH(address,uint256)": "infinite",
								"forceSafeTransferETH(address,uint256,uint256)": "infinite",
								"safeApprove(address,address,uint256)": "infinite",
								"safeApproveWithRetry(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferAll(address,address)": "infinite",
								"safeTransferAllFrom(address,address,address)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite",
								"trySafeTransferETH(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 596,
									"end": 19023,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220823970572e10ae99b800d893e70ad06c3314defe5a223f815bc782094bf33fd164736f6c63430008130033",
									".code": [
										{
											"begin": 596,
											"end": 19023,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 596,
											"end": 19023,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApproveFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromFailed\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\",\"details\":\"Note: - For ETH transfers, please use `forceSafeTransferETH` for gas griefing protection. - For ERC20s, this implementation won't check that a token has code, responsibility is delegated to the caller.\",\"errors\":{\"ApproveFailed()\":[{\"details\":\"The ERC20 `approve` has failed.\"}],\"ETHTransferFailed()\":[{\"details\":\"The ETH transfer has failed.\"}],\"TransferFailed()\":[{\"details\":\"The ERC20 `transfer` has failed.\"}],\"TransferFromFailed()\":[{\"details\":\"The ERC20 `transferFrom` has failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"GAS_STIPEND_NO_GRIEF\":{\"details\":\"Suggested gas stipend for contract receiving ETH to perform a few storage reads and writes, but low enough to prevent griefing. Multiply by a small constant (e.g. 2), if needed.\"},\"GAS_STIPEND_NO_STORAGE_WRITES\":{\"details\":\"Suggested gas stipend for contract receiving ETH that disallows any storage writes.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe ETH and ERC20 transfer library that gracefully handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":\"SafeTransferLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Safe ETH and ERC20 transfer library that gracefully handles missing return values.",
						"version": 1
					}
				}
			},
			"src/YeeterStrategy.sol": {
				"YeeterStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allo",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALLOCATION_NOT_ENDED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ALREADY_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AMOUNT_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ANCHOR_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ARRAY_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INPUT_LENGTH_MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_ADDRESS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_FEE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_METADATA",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "INVALID_REGISTRATION",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IS_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MISMATCH",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NONCE_NOT_AVAILABLE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NON_ZERO_VALUE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOOP",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_APPROVED_STRATEGY",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_ENOUGH_FUNDS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_IMPLEMENTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_INITIALIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NOT_PENDING_OWNER",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "POOL_INACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_ALREADY_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"name": "RECIPIENT_ERROR",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RECIPIENT_NOT_ACCEPTED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "REGISTRATION_NOT_ACTIVE",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UNAUTHORIZED",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZERO_ADDRESS",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Allocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Distributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolActive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NATIVE",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllo",
							"outputs": [
								{
									"internalType": "contract IAllo",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "getPayouts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IStrategy.PayoutSummary[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipientId",
									"type": "address"
								}
							],
							"name": "getRecipientStatus",
							"outputs": [
								{
									"internalType": "enum IStrategy.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStrategyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "increasePoolAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPoolActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "isValidAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ANCHOR_ERROR()": [
								{
									"details": "Thrown if the anchor creation fails"
								}
							],
							"NONCE_NOT_AVAILABLE()": [
								{
									"details": "Thrown when the nonce passed has been used or not available"
								}
							],
							"NOT_PENDING_OWNER()": [
								{
									"details": "Thrown when the 'msg.sender' is not the pending owner on ownership transfer"
								}
							]
						},
						"events": {
							"Allocated(address,uint256,address,address)": {
								"params": {
									"amount": "The amount allocated",
									"recipientId": "The ID of the recipient",
									"token": "The token allocated"
								}
							},
							"Distributed(address,address,uint256,address)": {
								"params": {
									"amount": "The amount distributed",
									"recipientAddress": "The recipient",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							},
							"Initialized(uint256,bytes)": {
								"params": {
									"data": "The data passed to the 'initialize' function",
									"poolId": "The ID of the pool"
								}
							},
							"PoolActive(bool)": {
								"params": {
									"active": "The status of the pool"
								}
							},
							"Registered(address,bytes,address)": {
								"params": {
									"data": "The data passed to the 'registerRecipient' function",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allocate(bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to allocate to the recipient",
									"_sender": "The address of the sender"
								}
							},
							"distribute(address[],bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to distribute to the recipients",
									"_recipientIds": "The IDs of the recipients",
									"_sender": "The address of the sender"
								}
							},
							"getAllo()": {
								"returns": {
									"_0": "The Allo contract"
								}
							},
							"getPayouts(address[],bytes[])": {
								"details": "The encoded '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to get the payout summary for the recipients",
									"_recipientIds": "The IDs of the recipients"
								},
								"returns": {
									"_0": "The payout summary for the recipients"
								}
							},
							"getPoolAmount()": {
								"returns": {
									"_0": "The balance of the pool"
								}
							},
							"getPoolId()": {
								"returns": {
									"_0": "The ID of the pool"
								}
							},
							"getRecipientStatus(address)": {
								"params": {
									"_recipientId": "The ID of the recipient"
								},
								"returns": {
									"_0": "The status of the recipient"
								}
							},
							"getStrategyId()": {
								"returns": {
									"_0": "The ID of the strategy"
								}
							},
							"increasePoolAmount(uint256)": {
								"details": "Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.",
								"params": {
									"_amount": "The amount to increase the pool by"
								}
							},
							"initialize(uint256,bytes)": {
								"params": {
									"_data": "The encoded data",
									"_poolId": "The ID of the pool"
								}
							},
							"isPoolActive()": {
								"returns": {
									"_0": "'true' if the pool is active, otherwise 'false'"
								}
							},
							"isValidAllocator(address)": {
								"details": "How the allocator is determined is up to the strategy implementation.",
								"params": {
									"_allocator": "The address to check if it is a valid allocator for the strategy."
								},
								"returns": {
									"_0": "'true' if the address is a valid allocator, 'false' otherwise"
								}
							},
							"registerRecipient(bytes,address)": {
								"details": "Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.",
								"params": {
									"_data": "The data to use to register the recipient",
									"_sender": "The address of the sender"
								},
								"returns": {
									"recipientId": "The recipientId"
								}
							},
							"withdraw(address,address,uint256)": {
								"params": {
									"_amount": "Amount to withdraw",
									"_recipient": "Address to send the funds to",
									"_token": "Token address"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/YeeterStrategy.sol\":422:3269  contract YeeterStrategy is BaseStrategy {... */\n  mstore(0x40, 0xc0)\n    /* \"src/YeeterStrategy.sol\":522:590  constructor(address _allo) BaseStrategy(_allo, \"Yeeter Strategy\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/YeeterStrategy.sol\":562:567  _allo */\n  dup1\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5210:5345  constructor(address _allo, string memory _name) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  0x5965657465722053747261746567790000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5281:5286  _allo */\n  dup2\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5268:5287  allo = IAllo(_allo) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5331:5336  _name */\n  dup1\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5320:5337  abi.encode(_name) */\n  add(0x20, mload(0x40))\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5310:5338  keccak256(abi.encode(_name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5297:5338  strategyId = keccak256(abi.encode(_name)) */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5210:5345  constructor(address _allo, string memory _name) {... */\n  pop\n  pop\n    /* \"src/YeeterStrategy.sol\":522:590  constructor(address _allo) BaseStrategy(_allo, \"Yeeter Strategy\") {} */\n  pop\n    /* \"src/YeeterStrategy.sol\":422:3269  contract YeeterStrategy is BaseStrategy {... */\n  jump(tag_10)\n    /* \"#utility.yul\":88:205   */\ntag_12:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_14:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_15:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_14\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_16:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_17:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_16\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_17\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_18:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1476   */\ntag_19:\n    /* \"#utility.yul\":1391:1402   */\n  0x00\n    /* \"#utility.yul\":1425:1431   */\n  dup3\n    /* \"#utility.yul\":1420:1423   */\n  dup3\n    /* \"#utility.yul\":1413:1432   */\n  mstore\n    /* \"#utility.yul\":1465:1469   */\n  0x20\n    /* \"#utility.yul\":1460:1463   */\n  dup3\n    /* \"#utility.yul\":1456:1470   */\n  add\n    /* \"#utility.yul\":1441:1470   */\n  swap1\n  pop\n    /* \"#utility.yul\":1307:1476   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1728   */\ntag_20:\n    /* \"#utility.yul\":1563:1564   */\n  0x00\n    /* \"#utility.yul\":1573:1686   */\ntag_42:\n    /* \"#utility.yul\":1587:1593   */\n  dup4\n    /* \"#utility.yul\":1584:1585   */\n  dup2\n    /* \"#utility.yul\":1581:1594   */\n  lt\n    /* \"#utility.yul\":1573:1686   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1672:1673   */\n  dup1\n    /* \"#utility.yul\":1667:1670   */\n  dup3\n    /* \"#utility.yul\":1663:1674   */\n  add\n    /* \"#utility.yul\":1657:1675   */\n  mload\n    /* \"#utility.yul\":1653:1654   */\n  dup2\n    /* \"#utility.yul\":1648:1651   */\n  dup5\n    /* \"#utility.yul\":1644:1655   */\n  add\n    /* \"#utility.yul\":1637:1676   */\n  mstore\n    /* \"#utility.yul\":1609:1611   */\n  0x20\n    /* \"#utility.yul\":1606:1607   */\n  dup2\n    /* \"#utility.yul\":1602:1612   */\n  add\n    /* \"#utility.yul\":1597:1612   */\n  swap1\n  pop\n    /* \"#utility.yul\":1573:1686   */\n  jump(tag_42)\ntag_44:\n    /* \"#utility.yul\":1720:1721   */\n  0x00\n    /* \"#utility.yul\":1711:1717   */\n  dup5\n    /* \"#utility.yul\":1706:1709   */\n  dup5\n    /* \"#utility.yul\":1702:1718   */\n  add\n    /* \"#utility.yul\":1695:1722   */\n  mstore\n    /* \"#utility.yul\":1544:1728   */\n  pop\n    /* \"#utility.yul\":1482:1728   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1734:1836   */\ntag_21:\n    /* \"#utility.yul\":1775:1781   */\n  0x00\n    /* \"#utility.yul\":1826:1828   */\n  0x1f\n    /* \"#utility.yul\":1822:1829   */\n  not\n    /* \"#utility.yul\":1817:1819   */\n  0x1f\n    /* \"#utility.yul\":1810:1815   */\n  dup4\n    /* \"#utility.yul\":1806:1820   */\n  add\n    /* \"#utility.yul\":1802:1830   */\n  and\n    /* \"#utility.yul\":1792:1830   */\n  swap1\n  pop\n    /* \"#utility.yul\":1734:1836   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1842:2219   */\ntag_22:\n    /* \"#utility.yul\":1930:1933   */\n  0x00\n    /* \"#utility.yul\":1958:1997   */\n  tag_47\n    /* \"#utility.yul\":1991:1996   */\n  dup3\n    /* \"#utility.yul\":1958:1997   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2013:2084   */\n  tag_48\n    /* \"#utility.yul\":2077:2083   */\n  dup2\n    /* \"#utility.yul\":2072:2075   */\n  dup6\n    /* \"#utility.yul\":2013:2084   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2006:2084   */\n  swap4\n  pop\n    /* \"#utility.yul\":2093:2158   */\n  tag_49\n    /* \"#utility.yul\":2151:2157   */\n  dup2\n    /* \"#utility.yul\":2146:2149   */\n  dup6\n    /* \"#utility.yul\":2139:2143   */\n  0x20\n    /* \"#utility.yul\":2132:2137   */\n  dup7\n    /* \"#utility.yul\":2128:2144   */\n  add\n    /* \"#utility.yul\":2093:2158   */\n  tag_20\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":2183:2212   */\n  tag_50\n    /* \"#utility.yul\":2205:2211   */\n  dup2\n    /* \"#utility.yul\":2183:2212   */\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2178:2181   */\n  dup5\n    /* \"#utility.yul\":2174:2213   */\n  add\n    /* \"#utility.yul\":2167:2213   */\n  swap2\n  pop\n    /* \"#utility.yul\":1934:2219   */\n  pop\n    /* \"#utility.yul\":1842:2219   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2225:2538   */\ntag_8:\n    /* \"#utility.yul\":2338:2342   */\n  0x00\n    /* \"#utility.yul\":2376:2378   */\n  0x20\n    /* \"#utility.yul\":2365:2374   */\n  dup3\n    /* \"#utility.yul\":2361:2379   */\n  add\n    /* \"#utility.yul\":2353:2379   */\n  swap1\n  pop\n    /* \"#utility.yul\":2425:2434   */\n  dup2\n    /* \"#utility.yul\":2419:2423   */\n  dup2\n    /* \"#utility.yul\":2415:2435   */\n  sub\n    /* \"#utility.yul\":2411:2412   */\n  0x00\n    /* \"#utility.yul\":2400:2409   */\n  dup4\n    /* \"#utility.yul\":2396:2413   */\n  add\n    /* \"#utility.yul\":2389:2436   */\n  mstore\n    /* \"#utility.yul\":2453:2531   */\n  tag_52\n    /* \"#utility.yul\":2526:2530   */\n  dup2\n    /* \"#utility.yul\":2517:2523   */\n  dup5\n    /* \"#utility.yul\":2453:2531   */\n  tag_22\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2445:2531   */\n  swap1\n  pop\n    /* \"#utility.yul\":2225:2538   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/YeeterStrategy.sol\":422:3269  contract YeeterStrategy is BaseStrategy {... */\ntag_10:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2be948d33a294076f76a99093bea2a653ff0b7119b53db934818a9f091f778a6\")\n  0x00\n  assignImmutable(\"0xe83e88c2152b206e69cb9b3b201a106be63261dd2cfe22481b2beae14bec255b\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/YeeterStrategy.sol\":422:3269  contract YeeterStrategy is BaseStrategy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa0cf0aea\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xeb11af93\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xeb11af93\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xedd146cc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xef2920fc\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf5b0dfb7\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0xa0cf0aea\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb2b878d0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd9caed12\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdf868ed3\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x42fda9c7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x42fda9c7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x44469f98\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4ab4ba42\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4d31d087\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x0a6f0ee9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x15cc481e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2bbe0cae\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38fff2d0\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10705:11030  function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6785:6871  function getAllo() external view override returns (IAllo) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9429:9773  function registerRecipient(bytes memory _data, address _sender)... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6953:7045  function getPoolId() external view override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7135:7235  function getStrategyId() external view override returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/YeeterStrategy.sol\":2388:2631  function allocate(address[] memory _recipientIds, uint256[] memory _amounts, address _token) external onlyPoolManager(msg.sender) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7326:7434  function getPoolAmount() external view virtual override returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12395:12540  function isValidAllocator(address _allocator) external view virtual override returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4412:4487  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11367:12071  function getPayouts(address[] memory _recipientIds, bytes[] memory _data)... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/YeeterStrategy.sol\":954:1123  function withdraw(address _token, address _recipient, uint256 _amount) external onlyPoolManager(msg.sender) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7566:7667  function isPoolActive() external view override returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7823:7969  function getRecipientStatus(address _recipientId) external view virtual returns (Status) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/YeeterStrategy.sol\":596:766  function initialize(uint256 _poolId, bytes memory _data) external virtual override {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10092:10312  function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {... */\n    tag_17:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8816:9013  function increasePoolAmount(uint256 _amount) external override onlyAllo {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      stop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10705:11030  function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)... */\n    tag_28:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_106\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_107\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_106:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      tag_109\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6553  _checkOnlyInitialized */\n      tag_110\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      jump\t// in\n    tag_109:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10866:10914  _beforeDistribute(_recipientIds, _data, _sender) */\n      tag_112\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10884:10897  _recipientIds */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10899:10904  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10906:10913  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10866:10883  _beforeDistribute */\n      tag_113\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10866:10914  _beforeDistribute(_recipientIds, _data, _sender) */\n      jump\t// in\n    tag_112:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10924:10966  _distribute(_recipientIds, _data, _sender) */\n      tag_114\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10936:10949  _recipientIds */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10951:10956  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10958:10965  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10924:10935  _distribute */\n      tag_115\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10924:10966  _distribute(_recipientIds, _data, _sender) */\n      jump\t// in\n    tag_114:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10976:11023  _afterDistribute(_recipientIds, _data, _sender) */\n      tag_116\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10993:11006  _recipientIds */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11008:11013  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11015:11022  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10976:10992  _afterDistribute */\n      tag_117\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10976:11023  _afterDistribute(_recipientIds, _data, _sender) */\n      jump\t// in\n    tag_116:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10705:11030  function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6785:6871  function getAllo() external view override returns (IAllo) {... */\n    tag_31:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6836:6841  IAllo */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6860:6864  allo */\n      immutable(\"0xe83e88c2152b206e69cb9b3b201a106be63261dd2cfe22481b2beae14bec255b\")\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6853:6864  return allo */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6785:6871  function getAllo() external view override returns (IAllo) {... */\n      swap1\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9429:9773  function registerRecipient(bytes memory _data, address _sender)... */\n    tag_37:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9584:9603  address recipientId */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_120\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_107\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_120:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      tag_122\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6553  _checkOnlyInitialized */\n      tag_110\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      jump\t// in\n    tag_122:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9619:9659  _beforeRegisterRecipient(_data, _sender) */\n      tag_124\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9644:9649  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9651:9658  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9619:9643  _beforeRegisterRecipient */\n      tag_125\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9619:9659  _beforeRegisterRecipient(_data, _sender) */\n      jump\t// in\n    tag_124:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9683:9717  _registerRecipient(_data, _sender) */\n      tag_126\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9702:9707  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9709:9716  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9683:9701  _registerRecipient */\n      tag_127\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9683:9717  _registerRecipient(_data, _sender) */\n      jump\t// in\n    tag_126:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9669:9717  recipientId = _registerRecipient(_data, _sender) */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9727:9766  _afterRegisterRecipient(_data, _sender) */\n      tag_128\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9751:9756  _data */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9758:9765  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9727:9750  _afterRegisterRecipient */\n      tag_129\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9727:9766  _afterRegisterRecipient(_data, _sender) */\n      jump\t// in\n    tag_128:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":9429:9773  function registerRecipient(bytes memory _data, address _sender)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6953:7045  function getPoolId() external view override returns (uint256) {... */\n    tag_42:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7006:7013  uint256 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7032:7038  poolId */\n      sload(0x01)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7025:7038  return poolId */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6953:7045  function getPoolId() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7135:7235  function getStrategyId() external view override returns (bytes32) {... */\n    tag_47:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7192:7199  bytes32 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7218:7228  strategyId */\n      immutable(\"0x2be948d33a294076f76a99093bea2a653ff0b7119b53db934818a9f091f778a6\")\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7211:7228  return strategyId */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7135:7235  function getStrategyId() external view override returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":2388:2631  function allocate(address[] memory _recipientIds, uint256[] memory _amounts, address _token) external onlyPoolManager(msg.sender) {... */\n    tag_54:\n        /* \"src/YeeterStrategy.sol\":2506:2516  msg.sender */\n      caller\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      tag_133\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5976:5983  _sender */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5975  _checkOnlyPoolManager */\n      tag_134\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      jump\t// in\n    tag_133:\n        /* \"src/YeeterStrategy.sol\":2526:2543  bytes memory data */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2557:2570  _recipientIds */\n      dup5\n        /* \"src/YeeterStrategy.sol\":2572:2580  _amounts */\n      dup5\n        /* \"src/YeeterStrategy.sol\":2582:2588  _token */\n      dup5\n        /* \"src/YeeterStrategy.sol\":2546:2589  abi.encode(_recipientIds, _amounts, _token) */\n      add(0x20, mload(0x40))\n      tag_136\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/YeeterStrategy.sol\":2526:2589  bytes memory data = abi.encode(_recipientIds, _amounts, _token) */\n      swap1\n      pop\n        /* \"src/YeeterStrategy.sol\":2597:2624  _allocate(data, msg.sender) */\n      tag_138\n        /* \"src/YeeterStrategy.sol\":2607:2611  data */\n      dup2\n        /* \"src/YeeterStrategy.sol\":2613:2623  msg.sender */\n      caller\n        /* \"src/YeeterStrategy.sol\":2597:2606  _allocate */\n      tag_139\n        /* \"src/YeeterStrategy.sol\":2597:2624  _allocate(data, msg.sender) */\n      jump\t// in\n    tag_138:\n        /* \"src/YeeterStrategy.sol\":2518:2631  {... */\n      pop\n        /* \"src/YeeterStrategy.sol\":2388:2631  function allocate(address[] memory _recipientIds, uint256[] memory _amounts, address _token) external onlyPoolManager(msg.sender) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7326:7434  function getPoolAmount() external view virtual override returns (uint256) {... */\n    tag_57:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7391:7398  uint256 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7417:7427  poolAmount */\n      sload(0x02)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7410:7427  return poolAmount */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7326:7434  function getPoolAmount() external view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12395:12540  function isValidAllocator(address _allocator) external view virtual override returns (bool) {... */\n    tag_63:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12481:12485  bool */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12504:12533  _isValidAllocator(_allocator) */\n      tag_142\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12522:12532  _allocator */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12504:12521  _isValidAllocator */\n      tag_143\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12504:12533  _isValidAllocator(_allocator) */\n      jump\t// in\n    tag_142:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12497:12533  return _isValidAllocator(_allocator) */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12395:12540  function isValidAllocator(address _allocator) external view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4412:4487  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n    tag_68:\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4445:4487  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4412:4487  address public constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      dup2\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11367:12071  function getPayouts(address[] memory _recipientIds, bytes[] memory _data)... */\n    tag_74:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11521:11543  PayoutSummary[] memory */\n      0x60\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11559:11582  uint256 recipientLength */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11585:11598  _recipientIds */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11585:11605  _recipientIds.length */\n      mload\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11559:11605  uint256 recipientLength = _recipientIds.length */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11741:11746  _data */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11741:11753  _data.length */\n      mload\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11722:11737  recipientLength */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11722:11753  recipientLength != _data.length */\n      eq\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11718:11778  if (recipientLength != _data.length) revert ARRAY_MISMATCH() */\n      tag_145\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11762:11778  ARRAY_MISMATCH() */\n      mload(0x40)\n      0x7b49805600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11718:11778  if (recipientLength != _data.length) revert ARRAY_MISMATCH() */\n    tag_145:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11789:11819  PayoutSummary[] memory payouts */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11842:11857  recipientLength */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11822:11858  new PayoutSummary[](recipientLength) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_146\n      jumpi\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n    tag_146:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup2\n      0x20\n      add\n    tag_150:\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_150\n      jumpi\n      swap1\n      pop\n    tag_149:\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11789:11858  PayoutSummary[] memory payouts = new PayoutSummary[](recipientLength) */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11873:11882  uint256 i */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11868:12041  for (uint256 i; i < recipientLength;) {... */\n    tag_153:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11888:11903  recipientLength */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11884:11885  i */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11884:11903  i < recipientLength */\n      lt\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11868:12041  for (uint256 i; i < recipientLength;) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11933:11971  _getPayout(_recipientIds[i], _data[i]) */\n      tag_156\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11944:11957  _recipientIds */\n      dup7\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11958:11959  i */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11944:11960  _recipientIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_157\n      jumpi\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n    tag_157:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11962:11967  _data */\n      dup7\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11968:11969  i */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11962:11970  _data[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_161\n      tag_159\n      jump\t// in\n    tag_161:\n    tag_160:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11933:11943  _getPayout */\n      tag_162\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11933:11971  _getPayout(_recipientIds[i], _data[i]) */\n      jump\t// in\n    tag_156:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11920:11927  payouts */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11928:11929  i */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11920:11930  payouts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_163\n      jumpi\n      tag_164\n      tag_159\n      jump\t// in\n    tag_164:\n    tag_163:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11920:11971  payouts[i] = _getPayout(_recipientIds[i], _data[i]) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12013:12016  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11868:12041  for (uint256 i; i < recipientLength;) {... */\n      jump(tag_153)\n    tag_154:\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12057:12064  payouts */\n      dup1\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12050:12064  return payouts */\n      swap3\n      pop\n      pop\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":11367:12071  function getPayouts(address[] memory _recipientIds, bytes[] memory _data)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":954:1123  function withdraw(address _token, address _recipient, uint256 _amount) external onlyPoolManager(msg.sender) {... */\n    tag_81:\n        /* \"src/YeeterStrategy.sol\":1050:1060  msg.sender */\n      caller\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      tag_166\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5976:5983  _sender */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5975  _checkOnlyPoolManager */\n      tag_134\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      jump\t// in\n    tag_166:\n        /* \"src/YeeterStrategy.sol\":1072:1116  _transferAmount(_token, _recipient, _amount) */\n      tag_168\n        /* \"src/YeeterStrategy.sol\":1088:1094  _token */\n      dup5\n        /* \"src/YeeterStrategy.sol\":1096:1106  _recipient */\n      dup5\n        /* \"src/YeeterStrategy.sol\":1108:1115  _amount */\n      dup5\n        /* \"src/YeeterStrategy.sol\":1072:1087  _transferAmount */\n      tag_169\n        /* \"src/YeeterStrategy.sol\":1072:1116  _transferAmount(_token, _recipient, _amount) */\n      jump\t// in\n    tag_168:\n        /* \"src/YeeterStrategy.sol\":954:1123  function withdraw(address _token, address _recipient, uint256 _amount) external onlyPoolManager(msg.sender) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7566:7667  function isPoolActive() external view override returns (bool) {... */\n    tag_84:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7622:7626  bool */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7645:7660  _isPoolActive() */\n      tag_171\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7645:7658  _isPoolActive */\n      tag_172\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7645:7660  _isPoolActive() */\n      jump\t// in\n    tag_171:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7638:7660  return _isPoolActive() */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7566:7667  function isPoolActive() external view override returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7823:7969  function getRecipientStatus(address _recipientId) external view virtual returns (Status) {... */\n    tag_89:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7904:7910  Status */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7929:7962  _getRecipientStatus(_recipientId) */\n      tag_174\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7949:7961  _recipientId */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7929:7948  _getRecipientStatus */\n      tag_175\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7929:7962  _getRecipientStatus(_recipientId) */\n      jump\t// in\n    tag_174:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7922:7962  return _getRecipientStatus(_recipientId) */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":7823:7969  function getRecipientStatus(address _recipientId) external view virtual returns (Status) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":596:766  function initialize(uint256 _poolId, bytes memory _data) external virtual override {... */\n    tag_96:\n        /* \"src/YeeterStrategy.sol\":689:717  __BaseStrategy_init(_poolId) */\n      tag_177\n        /* \"src/YeeterStrategy.sol\":709:716  _poolId */\n      dup3\n        /* \"src/YeeterStrategy.sol\":689:708  __BaseStrategy_init */\n      tag_178\n        /* \"src/YeeterStrategy.sol\":689:717  __BaseStrategy_init(_poolId) */\n      jump\t// in\n    tag_177:\n        /* \"src/YeeterStrategy.sol\":732:759  Initialized(_poolId, _data) */\n      0x91efa3d50feccde0d0d202f8ae5c41ca0b2be614cebcb2bd2f4b019396e6568a\n        /* \"src/YeeterStrategy.sol\":744:751  _poolId */\n      dup3\n        /* \"src/YeeterStrategy.sol\":753:758  _data */\n      dup3\n        /* \"src/YeeterStrategy.sol\":732:759  Initialized(_poolId, _data) */\n      mload(0x40)\n      tag_179\n      swap3\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/YeeterStrategy.sol\":596:766  function initialize(uint256 _poolId, bytes memory _data) external virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10092:10312  function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {... */\n    tag_99:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_182\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_107\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_182:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      tag_184\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6553  _checkOnlyInitialized */\n      tag_110\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":6532:6555  _checkOnlyInitialized() */\n      jump\t// in\n    tag_184:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10199:10230  _beforeAllocate(_data, _sender) */\n      tag_186\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10215:10220  _data */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10222:10229  _sender */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10199:10214  _beforeAllocate */\n      tag_187\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10199:10230  _beforeAllocate(_data, _sender) */\n      jump\t// in\n    tag_186:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10240:10265  _allocate(_data, _sender) */\n      tag_188\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10250:10255  _data */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10257:10264  _sender */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10240:10249  _allocate */\n      tag_139\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10240:10265  _allocate(_data, _sender) */\n      jump\t// in\n    tag_188:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10275:10305  _afterAllocate(_data, _sender) */\n      tag_189\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10290:10295  _data */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10297:10304  _sender */\n      dup3\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10275:10289  _afterAllocate */\n      tag_190\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10275:10305  _afterAllocate(_data, _sender) */\n      jump\t// in\n    tag_189:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":10092:10312  function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8816:9013  function increasePoolAmount(uint256 _amount) external override onlyAllo {... */\n    tag_104:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_192\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_107\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_192:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8898:8932  _beforeIncreasePoolAmount(_amount) */\n      tag_194\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8924:8931  _amount */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8898:8923  _beforeIncreasePoolAmount */\n      tag_195\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8898:8932  _beforeIncreasePoolAmount(_amount) */\n      jump\t// in\n    tag_194:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8956:8963  _amount */\n      dup1\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8942:8952  poolAmount */\n      0x02\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8942:8963  poolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8973:9006  _afterIncreasePoolAmount(_amount) */\n      tag_198\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8998:9005  _amount */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8973:8997  _afterIncreasePoolAmount */\n      tag_199\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8973:9006  _afterIncreasePoolAmount(_amount) */\n      jump\t// in\n    tag_198:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8816:9013  function increasePoolAmount(uint256 _amount) external override onlyAllo {... */\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12814:12925  function _checkOnlyAllo() internal view {... */\n    tag_107:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12890:12894  allo */\n      immutable(\"0xe83e88c2152b206e69cb9b3b201a106be63261dd2cfe22481b2beae14bec255b\")\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12868:12895  msg.sender != address(allo) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12868:12878  msg.sender */\n      caller\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12868:12895  msg.sender != address(allo) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12864:12918  if (msg.sender != address(allo)) revert UNAUTHORIZED() */\n      tag_201\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12904:12918  UNAUTHORIZED() */\n      mload(0x40)\n      0x075fd2b100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12864:12918  if (msg.sender != address(allo)) revert UNAUTHORIZED() */\n    tag_201:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":12814:12925  function _checkOnlyAllo() internal view {... */\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13771:13876  function _checkOnlyInitialized() internal view {... */\n    tag_110:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13842:13843  0 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13832:13838  poolId */\n      sload(0x01)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13832:13843  poolId == 0 */\n      sub\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13828:13869  if (poolId == 0) revert NOT_INITIALIZED() */\n      tag_203\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13852:13869  NOT_INITIALIZED() */\n      mload(0x40)\n      0x3da3f98c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13828:13869  if (poolId == 0) revert NOT_INITIALIZED() */\n    tag_203:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13771:13876  function _checkOnlyInitialized() internal view {... */\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":18949:19064  function _beforeDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {} */\n    tag_113:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":2637:2755  function _distribute(address[] memory, bytes memory, address) internal virtual override {... */\n    tag_115:\n        /* \"src/YeeterStrategy.sol\":2742:2748  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":19320:19434  function _afterDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {} */\n    tag_117:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":17810:17900  function _beforeRegisterRecipient(bytes memory _data, address _sender) internal virtual {} */\n    tag_125:\n      pop\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":3001:3126  function _registerRecipient(bytes memory, address) internal virtual override returns (address) {... */\n    tag_127:\n        /* \"src/YeeterStrategy.sol\":3087:3094  address */\n      0x00\n        /* \"src/YeeterStrategy.sol\":3113:3119  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":18077:18166  function _afterRegisterRecipient(bytes memory _data, address _sender) internal virtual {} */\n    tag_129:\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13122:13264  function _checkOnlyPoolManager(address _sender) internal view {... */\n    tag_134:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13199:13203  allo */\n      immutable(\"0xe83e88c2152b206e69cb9b3b201a106be63261dd2cfe22481b2beae14bec255b\")\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13199:13217  allo.isPoolManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x29e40d4b\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13218:13224  poolId */\n      sload(0x01)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13226:13233  _sender */\n      dup4\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13199:13234  allo.isPoolManager(poolId, _sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13194:13257  if (!allo.isPoolManager(poolId, _sender)) revert UNAUTHORIZED() */\n      tag_217\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13243:13257  UNAUTHORIZED() */\n      mload(0x40)\n      0x075fd2b100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13194:13257  if (!allo.isPoolManager(poolId, _sender)) revert UNAUTHORIZED() */\n    tag_217:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":13122:13264  function _checkOnlyPoolManager(address _sender) internal view {... */\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":1329:2349  function _allocate(bytes memory _data, address _sender) internal virtual override onlyPoolManager(_sender) {... */\n    tag_139:\n        /* \"src/YeeterStrategy.sol\":1427:1434  _sender */\n      dup1\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      tag_219\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5976:5983  _sender */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5975  _checkOnlyPoolManager */\n      tag_134\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5954:5984  _checkOnlyPoolManager(_sender) */\n      jump\t// in\n    tag_219:\n        /* \"src/YeeterStrategy.sol\":1474:1504  address[] memory _recipientIds */\n      0x00\n        /* \"src/YeeterStrategy.sol\":1506:1531  uint256[] memory _amounts */\n      dup1\n        /* \"src/YeeterStrategy.sol\":1533:1547  address _token */\n      0x00\n        /* \"src/YeeterStrategy.sol\":1574:1579  _data */\n      dup6\n        /* \"src/YeeterStrategy.sol\":1563:1613  abi.decode(_data, (address[], uint256[], address)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"src/YeeterStrategy.sol\":1473:1613  (address[] memory _recipientIds, uint256[] memory _amounts, address _token) =... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"src/YeeterStrategy.sol\":1624:1644  uint256 payoutLength */\n      0x00\n        /* \"src/YeeterStrategy.sol\":1647:1660  _recipientIds */\n      dup4\n        /* \"src/YeeterStrategy.sol\":1647:1667  _recipientIds.length */\n      mload\n        /* \"src/YeeterStrategy.sol\":1624:1667  uint256 payoutLength = _recipientIds.length */\n      swap1\n      pop\n        /* \"src/YeeterStrategy.sol\":1739:1740  0 */\n      0x00\n        /* \"src/YeeterStrategy.sol\":1723:1735  payoutLength */\n      dup2\n        /* \"src/YeeterStrategy.sol\":1723:1740  payoutLength == 0 */\n      sub\n        /* \"src/YeeterStrategy.sol\":1719:1797  if (payoutLength == 0) {... */\n      tag_223\n      jumpi\n        /* \"src/YeeterStrategy.sol\":1763:1786  INPUT_LENGTH_MISMATCH() */\n      mload(0x40)\n      0xfb76571500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/YeeterStrategy.sol\":1719:1797  if (payoutLength == 0) {... */\n    tag_223:\n        /* \"src/YeeterStrategy.sol\":1884:1892  _amounts */\n      dup3\n        /* \"src/YeeterStrategy.sol\":1884:1899  _amounts.length */\n      mload\n        /* \"src/YeeterStrategy.sol\":1868:1880  payoutLength */\n      dup2\n        /* \"src/YeeterStrategy.sol\":1868:1899  payoutLength != _amounts.length */\n      eq\n        /* \"src/YeeterStrategy.sol\":1864:1956  if (payoutLength != _amounts.length) {... */\n      tag_224\n      jumpi\n        /* \"src/YeeterStrategy.sol\":1922:1945  INPUT_LENGTH_MISMATCH() */\n      mload(0x40)\n      0xfb76571500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/YeeterStrategy.sol\":1864:1956  if (payoutLength != _amounts.length) {... */\n    tag_224:\n        /* \"src/YeeterStrategy.sol\":2018:2027  uint256 i */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2013:2343  for (uint256 i; i < payoutLength;) {... */\n    tag_225:\n        /* \"src/YeeterStrategy.sol\":2033:2045  payoutLength */\n      dup2\n        /* \"src/YeeterStrategy.sol\":2029:2030  i */\n      dup2\n        /* \"src/YeeterStrategy.sol\":2029:2045  i < payoutLength */\n      lt\n        /* \"src/YeeterStrategy.sol\":2013:2343  for (uint256 i; i < payoutLength;) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"src/YeeterStrategy.sol\":2062:2077  uint256 _amount */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2080:2088  _amounts */\n      dup5\n        /* \"src/YeeterStrategy.sol\":2089:2090  i */\n      dup3\n        /* \"src/YeeterStrategy.sol\":2080:2091  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_228\n      jumpi\n      tag_229\n      tag_159\n      jump\t// in\n    tag_229:\n    tag_228:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/YeeterStrategy.sol\":2062:2091  uint256 _amount = _amounts[i] */\n      swap1\n      pop\n        /* \"src/YeeterStrategy.sol\":2105:2125  address _recipientId */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2128:2141  _recipientIds */\n      dup7\n        /* \"src/YeeterStrategy.sol\":2142:2143  i */\n      dup4\n        /* \"src/YeeterStrategy.sol\":2128:2144  _recipientIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_231\n      tag_159\n      jump\t// in\n    tag_231:\n    tag_230:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/YeeterStrategy.sol\":2105:2144  address _recipientId = _recipientIds[i] */\n      swap1\n      pop\n        /* \"src/YeeterStrategy.sol\":2159:2205  _transferAmount(_token, _recipientId, _amount) */\n      tag_232\n        /* \"src/YeeterStrategy.sol\":2175:2181  _token */\n      dup6\n        /* \"src/YeeterStrategy.sol\":2183:2195  _recipientId */\n      dup3\n        /* \"src/YeeterStrategy.sol\":2197:2204  _amount */\n      dup5\n        /* \"src/YeeterStrategy.sol\":2159:2174  _transferAmount */\n      tag_169\n        /* \"src/YeeterStrategy.sol\":2159:2205  _transferAmount(_token, _recipientId, _amount) */\n      jump\t// in\n    tag_232:\n        /* \"src/YeeterStrategy.sol\":2234:2246  _recipientId */\n      dup1\n        /* \"src/YeeterStrategy.sol\":2224:2273  Allocated(_recipientId, _amount, _token, _sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x463ffc2cf8b1596445c417388ed30e53eb67cf6668cb2be7f0addf8a78c8441b\n        /* \"src/YeeterStrategy.sol\":2248:2255  _amount */\n      dup4\n        /* \"src/YeeterStrategy.sol\":2257:2263  _token */\n      dup8\n        /* \"src/YeeterStrategy.sol\":2265:2272  _sender */\n      dup13\n        /* \"src/YeeterStrategy.sol\":2224:2273  Allocated(_recipientId, _amount, _token, _sender) */\n      mload(0x40)\n      tag_233\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/YeeterStrategy.sol\":2315:2318  ++i */\n      dup3\n      0x01\n      add\n      swap3\n      pop\n        /* \"src/YeeterStrategy.sol\":2048:2343  {... */\n      pop\n      pop\n        /* \"src/YeeterStrategy.sol\":2013:2343  for (uint256 i; i < payoutLength;) {... */\n      jump(tag_225)\n    tag_226:\n      pop\n        /* \"src/YeeterStrategy.sol\":1436:2349  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/YeeterStrategy.sol\":1329:2349  function _allocate(bytes memory _data, address _sender) internal virtual override onlyPoolManager(_sender) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":2883:2995  function _isValidAllocator(address) internal view virtual override returns (bool) {... */\n    tag_143:\n        /* \"src/YeeterStrategy.sol\":2959:2963  bool */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2982:2988  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/YeeterStrategy.sol\":3132:3267  function _getPayout(address, bytes memory) internal view virtual override returns (PayoutSummary memory) {... */\n    tag_162:\n        /* \"src/YeeterStrategy.sol\":3215:3235  PayoutSummary memory */\n      tag_236\n      tag_152\n      jump\t// in\n    tag_236:\n        /* \"src/YeeterStrategy.sol\":3254:3260  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6761:7038  function _transferAmount(address _token, address _to, uint256 _amount) internal virtual {... */\n    tag_169:\n        /* \"lib/allo-v2/contracts/core/libraries/Native.sol\":4445:4487  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6863:6879  _token == NATIVE */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6863:6869  _token */\n      dup4\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6863:6879  _token == NATIVE */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6859:7032  if (_token == NATIVE) {... */\n      tag_239\n      jumpi\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6895:6940  SafeTransferLib.safeTransferETH(_to, _amount) */\n      tag_240\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6927:6930  _to */\n      dup3\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6932:6939  _amount */\n      dup3\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6895:6926  SafeTransferLib.safeTransferETH */\n      tag_241\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6895:6940  SafeTransferLib.safeTransferETH(_to, _amount) */\n      jump\t// in\n    tag_240:\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6859:7032  if (_token == NATIVE) {... */\n      jump(tag_242)\n    tag_239:\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6971:7021  SafeTransferLib.safeTransfer(_token, _to, _amount) */\n      tag_243\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":7000:7006  _token */\n      dup4\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":7008:7011  _to */\n      dup4\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":7013:7020  _amount */\n      dup4\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6971:6999  SafeTransferLib.safeTransfer */\n      tag_244\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6971:7021  SafeTransferLib.safeTransfer(_token, _to, _amount) */\n      jump\t// in\n    tag_243:\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6859:7032  if (_token == NATIVE) {... */\n    tag_242:\n        /* \"lib/allo-v2/contracts/core/libraries/Transfer.sol\":6761:7038  function _transferAmount(address _token, address _to, uint256 _amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14400:14496  function _isPoolActive() internal view virtual returns (bool) {... */\n    tag_172:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14456:14460  bool */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14479:14489  poolActive */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14472:14489  return poolActive */\n      swap1\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":14400:14496  function _isPoolActive() internal view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"src/YeeterStrategy.sol\":2761:2877  function _getRecipientStatus(address) internal view virtual override returns (Status) {... */\n    tag_175:\n        /* \"src/YeeterStrategy.sol\":2839:2845  Status */\n      0x00\n        /* \"src/YeeterStrategy.sol\":2864:2870  NOOP() */\n      mload(0x40)\n      0x1569426800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8269:8619  function __BaseStrategy_init(uint256 _poolId) internal virtual onlyAllo {... */\n    tag_178:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      tag_248\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5674  _checkOnlyAllo */\n      tag_107\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":5660:5676  _checkOnlyAllo() */\n      jump\t// in\n    tag_248:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8438:8439  0 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8428:8434  poolId */\n      sload(0x01)\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8428:8439  poolId != 0 */\n      eq\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8424:8469  if (poolId != 0) revert ALREADY_INITIALIZED() */\n      tag_250\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8448:8469  ALREADY_INITIALIZED() */\n      mload(0x40)\n      0x439a74c900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8424:8469  if (poolId != 0) revert ALREADY_INITIALIZED() */\n    tag_250:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8567:8568  0 */\n      0x00\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8556:8563  _poolId */\n      dup2\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8556:8568  _poolId == 0 */\n      sub\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8552:8586  if (_poolId == 0) revert INVALID() */\n      tag_251\n      jumpi\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8577:8586  INVALID() */\n      mload(0x40)\n      0x7fcce2a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8552:8586  if (_poolId == 0) revert INVALID() */\n    tag_251:\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8605:8612  _poolId */\n      dup1\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8596:8602  poolId */\n      0x01\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8596:8612  poolId = _poolId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":8269:8619  function __BaseStrategy_init(uint256 _poolId) internal virtual onlyAllo {... */\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":18349:18430  function _beforeAllocate(bytes memory _data, address _sender) internal virtual {} */\n    tag_187:\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":18612:18692  function _afterAllocate(bytes memory _data, address _sender) internal virtual {} */\n    tag_190:\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":17365:17436  function _beforeIncreasePoolAmount(uint256 _amount) internal virtual {} */\n    tag_195:\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":17562:17632  function _afterIncreasePoolAmount(uint256 _amount) internal virtual {} */\n    tag_199:\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2455:2945  function safeTransferETH(address to, uint256 amount) internal {... */\n    tag_241:\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2711:2715  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2705:2709  0x00 */\n      dup1\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2699:2703  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2693:2697  0x00 */\n      dup1\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2685:2691  amount */\n      dup5\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2681:2683  to */\n      dup7\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2674:2679  gas() */\n      gas\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2669:2716  call(gas(), to, amount, 0x00, 0x00, 0x00, 0x00) */\n      call\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2659:2929  if iszero(call(gas(), to, amount, 0x00, 0x00, 0x00, 0x00)) {... */\n      tag_257\n      jumpi\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2822:2832  0xb12d13eb */\n      0xb12d13eb\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2816:2820  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2809:2833  mstore(0x00, 0xb12d13eb) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2910:2914  0x04 */\n      0x04\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2904:2908  0x1c */\n      0x1c\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2897:2915  revert(0x1c, 0x04) */\n      revert\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2659:2929  if iszero(call(gas(), to, amount, 0x00, 0x00, 0x00, 0x00)) {... */\n    tag_257:\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":2455:2945  function safeTransferETH(address to, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11454:12643  function safeTransfer(address token, address to, uint256 amount) internal {... */\n    tag_244:\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11617:11619  to */\n      dup2\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11611:11615  0x14 */\n      0x14\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11604:11620  mstore(0x14, to) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11674:11680  amount */\n      dup1\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11668:11672  0x34 */\n      0x34\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11661:11681  mstore(0x34, amount) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11814:11848  0xa9059cbb000000000000000000000000 */\n      0xa9059cbb000000000000000000000000\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11808:11812  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11801:11849  mstore(0x00, 0xa9059cbb000000000000000000000000) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12272:12276  0x20 */\n      0x20\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12266:12270  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12260:12264  0x44 */\n      0x44\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12254:12258  0x10 */\n      0x10\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12251:12252  0 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12244:12249  token */\n      dup8\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12237:12242  gas() */\n      gas\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12232:12277  call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20) */\n      call\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12192:12208  returndatasize() */\n      returndatasize\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12185:12209  iszero(returndatasize()) */\n      iszero\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12181:12182  1 */\n      0x01\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12174:12178  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12168:12179  mload(0x00) */\n      mload\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12165:12183  eq(mload(0x00), 1) */\n      eq\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12162:12210  or(eq(mload(0x00), 1), iszero(returndatasize())) */\n      or\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11890:12295  and( // The arguments of `and` are evaluated from right to left.... */\n      and\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11863:12518  if iszero(... */\n      tag_259\n      jumpi\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12411:12421  0x90b8ec18 */\n      0x90b8ec18\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12405:12409  0x00 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12398:12422  mstore(0x00, 0x90b8ec18) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12499:12503  0x04 */\n      0x04\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12493:12497  0x1c */\n      0x1c\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12486:12504  revert(0x1c, 0x04) */\n      revert\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11863:12518  if iszero(... */\n    tag_259:\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12625:12626  0 */\n      0x00\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12619:12623  0x34 */\n      0x34\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":12612:12627  mstore(0x34, 0) */\n      mstore\n        /* \"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":11454:12643  function safeTransfer(address token, address to, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_152:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_260:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_261:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_262:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_263:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:559   */\n    tag_264:\n        /* \"#utility.yul\":498:504   */\n      0x00\n        /* \"#utility.yul\":549:551   */\n      0x1f\n        /* \"#utility.yul\":545:552   */\n      not\n        /* \"#utility.yul\":540:542   */\n      0x1f\n        /* \"#utility.yul\":533:538   */\n      dup4\n        /* \"#utility.yul\":529:543   */\n      add\n        /* \"#utility.yul\":525:553   */\n      and\n        /* \"#utility.yul\":515:553   */\n      swap1\n      pop\n        /* \"#utility.yul\":457:559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:745   */\n    tag_148:\n        /* \"#utility.yul\":613:690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:691   */\n      mstore\n        /* \"#utility.yul\":710:714   */\n      0x41\n        /* \"#utility.yul\":707:708   */\n      0x04\n        /* \"#utility.yul\":700:715   */\n      mstore\n        /* \"#utility.yul\":734:738   */\n      0x24\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":724:739   */\n      revert\n        /* \"#utility.yul\":751:1032   */\n    tag_265:\n        /* \"#utility.yul\":834:861   */\n      tag_350\n        /* \"#utility.yul\":856:860   */\n      dup3\n        /* \"#utility.yul\":834:861   */\n      tag_264\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":826:832   */\n      dup2\n        /* \"#utility.yul\":822:862   */\n      add\n        /* \"#utility.yul\":964:970   */\n      dup2\n        /* \"#utility.yul\":952:962   */\n      dup2\n        /* \"#utility.yul\":949:971   */\n      lt\n        /* \"#utility.yul\":928:946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":916:926   */\n      dup3\n        /* \"#utility.yul\":913:947   */\n      gt\n        /* \"#utility.yul\":910:972   */\n      or\n        /* \"#utility.yul\":907:995   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":975:993   */\n      tag_352\n      tag_148\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":907:995   */\n    tag_351:\n        /* \"#utility.yul\":1015:1025   */\n      dup1\n        /* \"#utility.yul\":1011:1013   */\n      0x40\n        /* \"#utility.yul\":1004:1026   */\n      mstore\n        /* \"#utility.yul\":794:1032   */\n      pop\n        /* \"#utility.yul\":751:1032   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1038:1167   */\n    tag_266:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1099:1119   */\n      tag_354\n      tag_260\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1089:1119   */\n      swap1\n      pop\n        /* \"#utility.yul\":1128:1161   */\n      tag_355\n        /* \"#utility.yul\":1156:1160   */\n      dup3\n        /* \"#utility.yul\":1148:1154   */\n      dup3\n        /* \"#utility.yul\":1128:1161   */\n      tag_265\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":1038:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1484   */\n    tag_267:\n        /* \"#utility.yul\":1250:1254   */\n      0x00\n        /* \"#utility.yul\":1340:1358   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1332:1338   */\n      dup3\n        /* \"#utility.yul\":1329:1359   */\n      gt\n        /* \"#utility.yul\":1326:1382   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":1362:1380   */\n      tag_358\n      tag_148\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1326:1382   */\n    tag_357:\n        /* \"#utility.yul\":1412:1416   */\n      0x20\n        /* \"#utility.yul\":1404:1410   */\n      dup3\n        /* \"#utility.yul\":1400:1417   */\n      mul\n        /* \"#utility.yul\":1392:1417   */\n      swap1\n      pop\n        /* \"#utility.yul\":1472:1476   */\n      0x20\n        /* \"#utility.yul\":1466:1470   */\n      dup2\n        /* \"#utility.yul\":1462:1477   */\n      add\n        /* \"#utility.yul\":1454:1477   */\n      swap1\n      pop\n        /* \"#utility.yul\":1173:1484   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1490:1607   */\n    tag_268:\n        /* \"#utility.yul\":1599:1600   */\n      0x00\n        /* \"#utility.yul\":1596:1597   */\n      dup1\n        /* \"#utility.yul\":1589:1601   */\n      revert\n        /* \"#utility.yul\":1613:1739   */\n    tag_269:\n        /* \"#utility.yul\":1650:1657   */\n      0x00\n        /* \"#utility.yul\":1690:1732   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1683:1688   */\n      dup3\n        /* \"#utility.yul\":1679:1733   */\n      and\n        /* \"#utility.yul\":1668:1733   */\n      swap1\n      pop\n        /* \"#utility.yul\":1613:1739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1745:1841   */\n    tag_270:\n        /* \"#utility.yul\":1782:1789   */\n      0x00\n        /* \"#utility.yul\":1811:1835   */\n      tag_362\n        /* \"#utility.yul\":1829:1834   */\n      dup3\n        /* \"#utility.yul\":1811:1835   */\n      tag_269\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1800:1835   */\n      swap1\n      pop\n        /* \"#utility.yul\":1745:1841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1847:1969   */\n    tag_271:\n        /* \"#utility.yul\":1920:1944   */\n      tag_364\n        /* \"#utility.yul\":1938:1943   */\n      dup2\n        /* \"#utility.yul\":1920:1944   */\n      tag_270\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1913:1918   */\n      dup2\n        /* \"#utility.yul\":1910:1945   */\n      eq\n        /* \"#utility.yul\":1900:1963   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":1959:1960   */\n      0x00\n        /* \"#utility.yul\":1956:1957   */\n      dup1\n        /* \"#utility.yul\":1949:1961   */\n      revert\n        /* \"#utility.yul\":1900:1963   */\n    tag_365:\n        /* \"#utility.yul\":1847:1969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1975:2114   */\n    tag_272:\n        /* \"#utility.yul\":2021:2026   */\n      0x00\n        /* \"#utility.yul\":2059:2065   */\n      dup2\n        /* \"#utility.yul\":2046:2066   */\n      calldataload\n        /* \"#utility.yul\":2037:2066   */\n      swap1\n      pop\n        /* \"#utility.yul\":2075:2108   */\n      tag_367\n        /* \"#utility.yul\":2102:2107   */\n      dup2\n        /* \"#utility.yul\":2075:2108   */\n      tag_271\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":1975:2114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:2847   */\n    tag_273:\n        /* \"#utility.yul\":2233:2238   */\n      0x00\n        /* \"#utility.yul\":2258:2339   */\n      tag_369\n        /* \"#utility.yul\":2274:2338   */\n      tag_370\n        /* \"#utility.yul\":2331:2337   */\n      dup5\n        /* \"#utility.yul\":2274:2338   */\n      tag_267\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2258:2339   */\n      tag_266\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2249:2339   */\n      swap1\n      pop\n        /* \"#utility.yul\":2359:2364   */\n      dup1\n        /* \"#utility.yul\":2388:2394   */\n      dup4\n        /* \"#utility.yul\":2381:2386   */\n      dup3\n        /* \"#utility.yul\":2374:2395   */\n      mstore\n        /* \"#utility.yul\":2422:2426   */\n      0x20\n        /* \"#utility.yul\":2415:2420   */\n      dup3\n        /* \"#utility.yul\":2411:2427   */\n      add\n        /* \"#utility.yul\":2404:2427   */\n      swap1\n      pop\n        /* \"#utility.yul\":2475:2479   */\n      0x20\n        /* \"#utility.yul\":2467:2473   */\n      dup5\n        /* \"#utility.yul\":2463:2480   */\n      mul\n        /* \"#utility.yul\":2455:2461   */\n      dup4\n        /* \"#utility.yul\":2451:2481   */\n      add\n        /* \"#utility.yul\":2504:2507   */\n      dup6\n        /* \"#utility.yul\":2496:2502   */\n      dup2\n        /* \"#utility.yul\":2493:2508   */\n      gt\n        /* \"#utility.yul\":2490:2612   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2523:2602   */\n      tag_372\n      tag_268\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2490:2612   */\n    tag_371:\n        /* \"#utility.yul\":2638:2644   */\n      dup4\n        /* \"#utility.yul\":2621:2841   */\n    tag_373:\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2650:2653   */\n      dup2\n        /* \"#utility.yul\":2647:2662   */\n      lt\n        /* \"#utility.yul\":2621:2841   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":2730:2733   */\n      dup1\n        /* \"#utility.yul\":2759:2796   */\n      tag_376\n        /* \"#utility.yul\":2792:2795   */\n      dup9\n        /* \"#utility.yul\":2780:2790   */\n      dup3\n        /* \"#utility.yul\":2759:2796   */\n      tag_272\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2754:2757   */\n      dup5\n        /* \"#utility.yul\":2747:2797   */\n      mstore\n        /* \"#utility.yul\":2826:2830   */\n      0x20\n        /* \"#utility.yul\":2821:2824   */\n      dup5\n        /* \"#utility.yul\":2817:2831   */\n      add\n        /* \"#utility.yul\":2810:2831   */\n      swap4\n      pop\n        /* \"#utility.yul\":2697:2841   */\n      pop\n        /* \"#utility.yul\":2681:2685   */\n      0x20\n        /* \"#utility.yul\":2676:2679   */\n      dup2\n        /* \"#utility.yul\":2672:2686   */\n      add\n        /* \"#utility.yul\":2665:2686   */\n      swap1\n      pop\n        /* \"#utility.yul\":2621:2841   */\n      jump(tag_373)\n    tag_375:\n        /* \"#utility.yul\":2625:2646   */\n      pop\n        /* \"#utility.yul\":2239:2847   */\n      pop\n      pop\n        /* \"#utility.yul\":2137:2847   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2870:3240   */\n    tag_274:\n        /* \"#utility.yul\":2941:2946   */\n      0x00\n        /* \"#utility.yul\":2990:2993   */\n      dup3\n        /* \"#utility.yul\":2983:2987   */\n      0x1f\n        /* \"#utility.yul\":2975:2981   */\n      dup4\n        /* \"#utility.yul\":2971:2988   */\n      add\n        /* \"#utility.yul\":2967:2994   */\n      slt\n        /* \"#utility.yul\":2957:3079   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":2998:3077   */\n      tag_379\n      tag_263\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":2957:3079   */\n    tag_378:\n        /* \"#utility.yul\":3115:3121   */\n      dup2\n        /* \"#utility.yul\":3102:3122   */\n      calldataload\n        /* \"#utility.yul\":3140:3234   */\n      tag_380\n        /* \"#utility.yul\":3230:3233   */\n      dup5\n        /* \"#utility.yul\":3222:3228   */\n      dup3\n        /* \"#utility.yul\":3215:3219   */\n      0x20\n        /* \"#utility.yul\":3207:3213   */\n      dup7\n        /* \"#utility.yul\":3203:3220   */\n      add\n        /* \"#utility.yul\":3140:3234   */\n      tag_273\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3131:3234   */\n      swap2\n      pop\n        /* \"#utility.yul\":2947:3240   */\n      pop\n        /* \"#utility.yul\":2870:3240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3246:3363   */\n    tag_275:\n        /* \"#utility.yul\":3355:3356   */\n      0x00\n        /* \"#utility.yul\":3352:3353   */\n      dup1\n        /* \"#utility.yul\":3345:3357   */\n      revert\n        /* \"#utility.yul\":3369:3676   */\n    tag_276:\n        /* \"#utility.yul\":3430:3434   */\n      0x00\n        /* \"#utility.yul\":3520:3538   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3512:3518   */\n      dup3\n        /* \"#utility.yul\":3509:3539   */\n      gt\n        /* \"#utility.yul\":3506:3562   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":3542:3560   */\n      tag_384\n      tag_148\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3506:3562   */\n    tag_383:\n        /* \"#utility.yul\":3580:3609   */\n      tag_385\n        /* \"#utility.yul\":3602:3608   */\n      dup3\n        /* \"#utility.yul\":3580:3609   */\n      tag_264\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3572:3609   */\n      swap1\n      pop\n        /* \"#utility.yul\":3664:3668   */\n      0x20\n        /* \"#utility.yul\":3658:3662   */\n      dup2\n        /* \"#utility.yul\":3654:3669   */\n      add\n        /* \"#utility.yul\":3646:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3369:3676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3682:3828   */\n    tag_277:\n        /* \"#utility.yul\":3779:3785   */\n      dup3\n        /* \"#utility.yul\":3774:3777   */\n      dup2\n        /* \"#utility.yul\":3769:3772   */\n      dup4\n        /* \"#utility.yul\":3756:3786   */\n      calldatacopy\n        /* \"#utility.yul\":3820:3821   */\n      0x00\n        /* \"#utility.yul\":3811:3817   */\n      dup4\n        /* \"#utility.yul\":3806:3809   */\n      dup4\n        /* \"#utility.yul\":3802:3818   */\n      add\n        /* \"#utility.yul\":3795:3822   */\n      mstore\n        /* \"#utility.yul\":3682:3828   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3834:4257   */\n    tag_278:\n        /* \"#utility.yul\":3911:3916   */\n      0x00\n        /* \"#utility.yul\":3936:4001   */\n      tag_388\n        /* \"#utility.yul\":3952:4000   */\n      tag_389\n        /* \"#utility.yul\":3993:3999   */\n      dup5\n        /* \"#utility.yul\":3952:4000   */\n      tag_276\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3936:4001   */\n      tag_266\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3927:4001   */\n      swap1\n      pop\n        /* \"#utility.yul\":4024:4030   */\n      dup3\n        /* \"#utility.yul\":4017:4022   */\n      dup2\n        /* \"#utility.yul\":4010:4031   */\n      mstore\n        /* \"#utility.yul\":4062:4066   */\n      0x20\n        /* \"#utility.yul\":4055:4060   */\n      dup2\n        /* \"#utility.yul\":4051:4067   */\n      add\n        /* \"#utility.yul\":4100:4103   */\n      dup5\n        /* \"#utility.yul\":4091:4097   */\n      dup5\n        /* \"#utility.yul\":4086:4089   */\n      dup5\n        /* \"#utility.yul\":4082:4098   */\n      add\n        /* \"#utility.yul\":4079:4104   */\n      gt\n        /* \"#utility.yul\":4076:4188   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":4107:4186   */\n      tag_391\n      tag_275\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":4076:4188   */\n    tag_390:\n        /* \"#utility.yul\":4197:4251   */\n      tag_392\n        /* \"#utility.yul\":4244:4250   */\n      dup5\n        /* \"#utility.yul\":4239:4242   */\n      dup3\n        /* \"#utility.yul\":4234:4237   */\n      dup6\n        /* \"#utility.yul\":4197:4251   */\n      tag_277\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3917:4257   */\n      pop\n        /* \"#utility.yul\":3834:4257   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4276:4614   */\n    tag_279:\n        /* \"#utility.yul\":4331:4336   */\n      0x00\n        /* \"#utility.yul\":4380:4383   */\n      dup3\n        /* \"#utility.yul\":4373:4377   */\n      0x1f\n        /* \"#utility.yul\":4365:4371   */\n      dup4\n        /* \"#utility.yul\":4361:4378   */\n      add\n        /* \"#utility.yul\":4357:4384   */\n      slt\n        /* \"#utility.yul\":4347:4469   */\n      tag_394\n      jumpi\n        /* \"#utility.yul\":4388:4467   */\n      tag_395\n      tag_263\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4347:4469   */\n    tag_394:\n        /* \"#utility.yul\":4505:4511   */\n      dup2\n        /* \"#utility.yul\":4492:4512   */\n      calldataload\n        /* \"#utility.yul\":4530:4608   */\n      tag_396\n        /* \"#utility.yul\":4604:4607   */\n      dup5\n        /* \"#utility.yul\":4596:4602   */\n      dup3\n        /* \"#utility.yul\":4589:4593   */\n      0x20\n        /* \"#utility.yul\":4581:4587   */\n      dup7\n        /* \"#utility.yul\":4577:4594   */\n      add\n        /* \"#utility.yul\":4530:4608   */\n      tag_278\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4521:4608   */\n      swap2\n      pop\n        /* \"#utility.yul\":4337:4614   */\n      pop\n        /* \"#utility.yul\":4276:4614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4620:5627   */\n    tag_27:\n        /* \"#utility.yul\":4731:4737   */\n      0x00\n        /* \"#utility.yul\":4739:4745   */\n      dup1\n        /* \"#utility.yul\":4747:4753   */\n      0x00\n        /* \"#utility.yul\":4796:4798   */\n      0x60\n        /* \"#utility.yul\":4784:4793   */\n      dup5\n        /* \"#utility.yul\":4775:4782   */\n      dup7\n        /* \"#utility.yul\":4771:4794   */\n      sub\n        /* \"#utility.yul\":4767:4799   */\n      slt\n        /* \"#utility.yul\":4764:4883   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":4802:4881   */\n      tag_399\n      tag_261\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4764:4883   */\n    tag_398:\n        /* \"#utility.yul\":4950:4951   */\n      0x00\n        /* \"#utility.yul\":4939:4948   */\n      dup5\n        /* \"#utility.yul\":4935:4952   */\n      add\n        /* \"#utility.yul\":4922:4953   */\n      calldataload\n        /* \"#utility.yul\":4980:4998   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4972:4978   */\n      dup2\n        /* \"#utility.yul\":4969:4999   */\n      gt\n        /* \"#utility.yul\":4966:5083   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":5002:5081   */\n      tag_401\n      tag_262\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4966:5083   */\n    tag_400:\n        /* \"#utility.yul\":5107:5185   */\n      tag_402\n        /* \"#utility.yul\":5177:5184   */\n      dup7\n        /* \"#utility.yul\":5168:5174   */\n      dup3\n        /* \"#utility.yul\":5157:5166   */\n      dup8\n        /* \"#utility.yul\":5153:5175   */\n      add\n        /* \"#utility.yul\":5107:5185   */\n      tag_274\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5097:5185   */\n      swap4\n      pop\n        /* \"#utility.yul\":4893:5195   */\n      pop\n        /* \"#utility.yul\":5262:5264   */\n      0x20\n        /* \"#utility.yul\":5251:5260   */\n      dup5\n        /* \"#utility.yul\":5247:5265   */\n      add\n        /* \"#utility.yul\":5234:5266   */\n      calldataload\n        /* \"#utility.yul\":5293:5311   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5285:5291   */\n      dup2\n        /* \"#utility.yul\":5282:5312   */\n      gt\n        /* \"#utility.yul\":5279:5396   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":5315:5394   */\n      tag_404\n      tag_262\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5279:5396   */\n    tag_403:\n        /* \"#utility.yul\":5420:5482   */\n      tag_405\n        /* \"#utility.yul\":5474:5481   */\n      dup7\n        /* \"#utility.yul\":5465:5471   */\n      dup3\n        /* \"#utility.yul\":5454:5463   */\n      dup8\n        /* \"#utility.yul\":5450:5472   */\n      add\n        /* \"#utility.yul\":5420:5482   */\n      tag_279\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5410:5482   */\n      swap3\n      pop\n        /* \"#utility.yul\":5205:5492   */\n      pop\n        /* \"#utility.yul\":5531:5533   */\n      0x40\n        /* \"#utility.yul\":5557:5610   */\n      tag_406\n        /* \"#utility.yul\":5602:5609   */\n      dup7\n        /* \"#utility.yul\":5593:5599   */\n      dup3\n        /* \"#utility.yul\":5582:5591   */\n      dup8\n        /* \"#utility.yul\":5578:5600   */\n      add\n        /* \"#utility.yul\":5557:5610   */\n      tag_272\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5547:5610   */\n      swap2\n      pop\n        /* \"#utility.yul\":5502:5620   */\n      pop\n        /* \"#utility.yul\":4620:5627   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5633:5693   */\n    tag_280:\n        /* \"#utility.yul\":5661:5664   */\n      0x00\n        /* \"#utility.yul\":5682:5687   */\n      dup2\n        /* \"#utility.yul\":5675:5687   */\n      swap1\n      pop\n        /* \"#utility.yul\":5633:5693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5699:5841   */\n    tag_281:\n        /* \"#utility.yul\":5749:5758   */\n      0x00\n        /* \"#utility.yul\":5782:5835   */\n      tag_409\n        /* \"#utility.yul\":5800:5834   */\n      tag_410\n        /* \"#utility.yul\":5809:5833   */\n      tag_411\n        /* \"#utility.yul\":5827:5832   */\n      dup5\n        /* \"#utility.yul\":5809:5833   */\n      tag_269\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5800:5834   */\n      tag_280\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5782:5835   */\n      tag_269\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5769:5835   */\n      swap1\n      pop\n        /* \"#utility.yul\":5699:5841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5847:5973   */\n    tag_282:\n        /* \"#utility.yul\":5897:5906   */\n      0x00\n        /* \"#utility.yul\":5930:5967   */\n      tag_413\n        /* \"#utility.yul\":5961:5966   */\n      dup3\n        /* \"#utility.yul\":5930:5967   */\n      tag_281\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5917:5967   */\n      swap1\n      pop\n        /* \"#utility.yul\":5847:5973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5979:6118   */\n    tag_283:\n        /* \"#utility.yul\":6042:6051   */\n      0x00\n        /* \"#utility.yul\":6075:6112   */\n      tag_415\n        /* \"#utility.yul\":6106:6111   */\n      dup3\n        /* \"#utility.yul\":6075:6112   */\n      tag_282\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6062:6112   */\n      swap1\n      pop\n        /* \"#utility.yul\":5979:6118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6124:6281   */\n    tag_284:\n        /* \"#utility.yul\":6224:6274   */\n      tag_417\n        /* \"#utility.yul\":6268:6273   */\n      dup2\n        /* \"#utility.yul\":6224:6274   */\n      tag_283\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6219:6222   */\n      dup3\n        /* \"#utility.yul\":6212:6275   */\n      mstore\n        /* \"#utility.yul\":6124:6281   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6287:6535   */\n    tag_33:\n        /* \"#utility.yul\":6393:6397   */\n      0x00\n        /* \"#utility.yul\":6431:6433   */\n      0x20\n        /* \"#utility.yul\":6420:6429   */\n      dup3\n        /* \"#utility.yul\":6416:6434   */\n      add\n        /* \"#utility.yul\":6408:6434   */\n      swap1\n      pop\n        /* \"#utility.yul\":6444:6528   */\n      tag_419\n        /* \"#utility.yul\":6525:6526   */\n      0x00\n        /* \"#utility.yul\":6514:6523   */\n      dup4\n        /* \"#utility.yul\":6510:6527   */\n      add\n        /* \"#utility.yul\":6501:6507   */\n      dup5\n        /* \"#utility.yul\":6444:6528   */\n      tag_284\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6287:6535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6541:7193   */\n    tag_36:\n        /* \"#utility.yul\":6618:6624   */\n      0x00\n        /* \"#utility.yul\":6626:6632   */\n      dup1\n        /* \"#utility.yul\":6675:6677   */\n      0x40\n        /* \"#utility.yul\":6663:6672   */\n      dup4\n        /* \"#utility.yul\":6654:6661   */\n      dup6\n        /* \"#utility.yul\":6650:6673   */\n      sub\n        /* \"#utility.yul\":6646:6678   */\n      slt\n        /* \"#utility.yul\":6643:6762   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":6681:6760   */\n      tag_422\n      tag_261\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6643:6762   */\n    tag_421:\n        /* \"#utility.yul\":6829:6830   */\n      0x00\n        /* \"#utility.yul\":6818:6827   */\n      dup4\n        /* \"#utility.yul\":6814:6831   */\n      add\n        /* \"#utility.yul\":6801:6832   */\n      calldataload\n        /* \"#utility.yul\":6859:6877   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6851:6857   */\n      dup2\n        /* \"#utility.yul\":6848:6878   */\n      gt\n        /* \"#utility.yul\":6845:6962   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":6881:6960   */\n      tag_424\n      tag_262\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6845:6962   */\n    tag_423:\n        /* \"#utility.yul\":6986:7048   */\n      tag_425\n        /* \"#utility.yul\":7040:7047   */\n      dup6\n        /* \"#utility.yul\":7031:7037   */\n      dup3\n        /* \"#utility.yul\":7020:7029   */\n      dup7\n        /* \"#utility.yul\":7016:7038   */\n      add\n        /* \"#utility.yul\":6986:7048   */\n      tag_279\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":6976:7048   */\n      swap3\n      pop\n        /* \"#utility.yul\":6772:7058   */\n      pop\n        /* \"#utility.yul\":7097:7099   */\n      0x20\n        /* \"#utility.yul\":7123:7176   */\n      tag_426\n        /* \"#utility.yul\":7168:7175   */\n      dup6\n        /* \"#utility.yul\":7159:7165   */\n      dup3\n        /* \"#utility.yul\":7148:7157   */\n      dup7\n        /* \"#utility.yul\":7144:7166   */\n      add\n        /* \"#utility.yul\":7123:7176   */\n      tag_272\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7113:7176   */\n      swap2\n      pop\n        /* \"#utility.yul\":7068:7186   */\n      pop\n        /* \"#utility.yul\":6541:7193   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7199:7317   */\n    tag_285:\n        /* \"#utility.yul\":7286:7310   */\n      tag_428\n        /* \"#utility.yul\":7304:7309   */\n      dup2\n        /* \"#utility.yul\":7286:7310   */\n      tag_270\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7281:7284   */\n      dup3\n        /* \"#utility.yul\":7274:7311   */\n      mstore\n        /* \"#utility.yul\":7199:7317   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7323:7545   */\n    tag_39:\n        /* \"#utility.yul\":7416:7420   */\n      0x00\n        /* \"#utility.yul\":7454:7456   */\n      0x20\n        /* \"#utility.yul\":7443:7452   */\n      dup3\n        /* \"#utility.yul\":7439:7457   */\n      add\n        /* \"#utility.yul\":7431:7457   */\n      swap1\n      pop\n        /* \"#utility.yul\":7467:7538   */\n      tag_430\n        /* \"#utility.yul\":7535:7536   */\n      0x00\n        /* \"#utility.yul\":7524:7533   */\n      dup4\n        /* \"#utility.yul\":7520:7537   */\n      add\n        /* \"#utility.yul\":7511:7517   */\n      dup5\n        /* \"#utility.yul\":7467:7538   */\n      tag_285\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7323:7545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7551:7628   */\n    tag_286:\n        /* \"#utility.yul\":7588:7595   */\n      0x00\n        /* \"#utility.yul\":7617:7622   */\n      dup2\n        /* \"#utility.yul\":7606:7622   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7634:7752   */\n    tag_287:\n        /* \"#utility.yul\":7721:7745   */\n      tag_433\n        /* \"#utility.yul\":7739:7744   */\n      dup2\n        /* \"#utility.yul\":7721:7745   */\n      tag_286\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7716:7719   */\n      dup3\n        /* \"#utility.yul\":7709:7746   */\n      mstore\n        /* \"#utility.yul\":7634:7752   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7758:7980   */\n    tag_44:\n        /* \"#utility.yul\":7851:7855   */\n      0x00\n        /* \"#utility.yul\":7889:7891   */\n      0x20\n        /* \"#utility.yul\":7878:7887   */\n      dup3\n        /* \"#utility.yul\":7874:7892   */\n      add\n        /* \"#utility.yul\":7866:7892   */\n      swap1\n      pop\n        /* \"#utility.yul\":7902:7973   */\n      tag_435\n        /* \"#utility.yul\":7970:7971   */\n      0x00\n        /* \"#utility.yul\":7959:7968   */\n      dup4\n        /* \"#utility.yul\":7955:7972   */\n      add\n        /* \"#utility.yul\":7946:7952   */\n      dup5\n        /* \"#utility.yul\":7902:7973   */\n      tag_287\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7758:7980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7986:8063   */\n    tag_288:\n        /* \"#utility.yul\":8023:8030   */\n      0x00\n        /* \"#utility.yul\":8052:8057   */\n      dup2\n        /* \"#utility.yul\":8041:8057   */\n      swap1\n      pop\n        /* \"#utility.yul\":7986:8063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8069:8187   */\n    tag_289:\n        /* \"#utility.yul\":8156:8180   */\n      tag_438\n        /* \"#utility.yul\":8174:8179   */\n      dup2\n        /* \"#utility.yul\":8156:8180   */\n      tag_288\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8151:8154   */\n      dup3\n        /* \"#utility.yul\":8144:8181   */\n      mstore\n        /* \"#utility.yul\":8069:8187   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8193:8415   */\n    tag_49:\n        /* \"#utility.yul\":8286:8290   */\n      0x00\n        /* \"#utility.yul\":8324:8326   */\n      0x20\n        /* \"#utility.yul\":8313:8322   */\n      dup3\n        /* \"#utility.yul\":8309:8327   */\n      add\n        /* \"#utility.yul\":8301:8327   */\n      swap1\n      pop\n        /* \"#utility.yul\":8337:8408   */\n      tag_440\n        /* \"#utility.yul\":8405:8406   */\n      0x00\n        /* \"#utility.yul\":8394:8403   */\n      dup4\n        /* \"#utility.yul\":8390:8407   */\n      add\n        /* \"#utility.yul\":8381:8387   */\n      dup5\n        /* \"#utility.yul\":8337:8408   */\n      tag_289\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8193:8415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8421:8732   */\n    tag_290:\n        /* \"#utility.yul\":8498:8502   */\n      0x00\n        /* \"#utility.yul\":8588:8606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8580:8586   */\n      dup3\n        /* \"#utility.yul\":8577:8607   */\n      gt\n        /* \"#utility.yul\":8574:8630   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":8610:8628   */\n      tag_443\n      tag_148\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8574:8630   */\n    tag_442:\n        /* \"#utility.yul\":8660:8664   */\n      0x20\n        /* \"#utility.yul\":8652:8658   */\n      dup3\n        /* \"#utility.yul\":8648:8665   */\n      mul\n        /* \"#utility.yul\":8640:8665   */\n      swap1\n      pop\n        /* \"#utility.yul\":8720:8724   */\n      0x20\n        /* \"#utility.yul\":8714:8718   */\n      dup2\n        /* \"#utility.yul\":8710:8725   */\n      add\n        /* \"#utility.yul\":8702:8725   */\n      swap1\n      pop\n        /* \"#utility.yul\":8421:8732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8738:8860   */\n    tag_291:\n        /* \"#utility.yul\":8811:8835   */\n      tag_445\n        /* \"#utility.yul\":8829:8834   */\n      dup2\n        /* \"#utility.yul\":8811:8835   */\n      tag_286\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8804:8809   */\n      dup2\n        /* \"#utility.yul\":8801:8836   */\n      eq\n        /* \"#utility.yul\":8791:8854   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":8850:8851   */\n      0x00\n        /* \"#utility.yul\":8847:8848   */\n      dup1\n        /* \"#utility.yul\":8840:8852   */\n      revert\n        /* \"#utility.yul\":8791:8854   */\n    tag_446:\n        /* \"#utility.yul\":8738:8860   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8866:9005   */\n    tag_292:\n        /* \"#utility.yul\":8912:8917   */\n      0x00\n        /* \"#utility.yul\":8950:8956   */\n      dup2\n        /* \"#utility.yul\":8937:8957   */\n      calldataload\n        /* \"#utility.yul\":8928:8957   */\n      swap1\n      pop\n        /* \"#utility.yul\":8966:8999   */\n      tag_448\n        /* \"#utility.yul\":8993:8998   */\n      dup2\n        /* \"#utility.yul\":8966:8999   */\n      tag_291\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8866:9005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9028:9738   */\n    tag_293:\n        /* \"#utility.yul\":9124:9129   */\n      0x00\n        /* \"#utility.yul\":9149:9230   */\n      tag_450\n        /* \"#utility.yul\":9165:9229   */\n      tag_451\n        /* \"#utility.yul\":9222:9228   */\n      dup5\n        /* \"#utility.yul\":9165:9229   */\n      tag_290\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9149:9230   */\n      tag_266\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9140:9230   */\n      swap1\n      pop\n        /* \"#utility.yul\":9250:9255   */\n      dup1\n        /* \"#utility.yul\":9279:9285   */\n      dup4\n        /* \"#utility.yul\":9272:9277   */\n      dup3\n        /* \"#utility.yul\":9265:9286   */\n      mstore\n        /* \"#utility.yul\":9313:9317   */\n      0x20\n        /* \"#utility.yul\":9306:9311   */\n      dup3\n        /* \"#utility.yul\":9302:9318   */\n      add\n        /* \"#utility.yul\":9295:9318   */\n      swap1\n      pop\n        /* \"#utility.yul\":9366:9370   */\n      0x20\n        /* \"#utility.yul\":9358:9364   */\n      dup5\n        /* \"#utility.yul\":9354:9371   */\n      mul\n        /* \"#utility.yul\":9346:9352   */\n      dup4\n        /* \"#utility.yul\":9342:9372   */\n      add\n        /* \"#utility.yul\":9395:9398   */\n      dup6\n        /* \"#utility.yul\":9387:9393   */\n      dup2\n        /* \"#utility.yul\":9384:9399   */\n      gt\n        /* \"#utility.yul\":9381:9503   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":9414:9493   */\n      tag_453\n      tag_268\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9381:9503   */\n    tag_452:\n        /* \"#utility.yul\":9529:9535   */\n      dup4\n        /* \"#utility.yul\":9512:9732   */\n    tag_454:\n        /* \"#utility.yul\":9546:9552   */\n      dup2\n        /* \"#utility.yul\":9541:9544   */\n      dup2\n        /* \"#utility.yul\":9538:9553   */\n      lt\n        /* \"#utility.yul\":9512:9732   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":9621:9624   */\n      dup1\n        /* \"#utility.yul\":9650:9687   */\n      tag_457\n        /* \"#utility.yul\":9683:9686   */\n      dup9\n        /* \"#utility.yul\":9671:9681   */\n      dup3\n        /* \"#utility.yul\":9650:9687   */\n      tag_292\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9645:9648   */\n      dup5\n        /* \"#utility.yul\":9638:9688   */\n      mstore\n        /* \"#utility.yul\":9717:9721   */\n      0x20\n        /* \"#utility.yul\":9712:9715   */\n      dup5\n        /* \"#utility.yul\":9708:9722   */\n      add\n        /* \"#utility.yul\":9701:9722   */\n      swap4\n      pop\n        /* \"#utility.yul\":9588:9732   */\n      pop\n        /* \"#utility.yul\":9572:9576   */\n      0x20\n        /* \"#utility.yul\":9567:9570   */\n      dup2\n        /* \"#utility.yul\":9563:9577   */\n      add\n        /* \"#utility.yul\":9556:9577   */\n      swap1\n      pop\n        /* \"#utility.yul\":9512:9732   */\n      jump(tag_454)\n    tag_456:\n        /* \"#utility.yul\":9516:9537   */\n      pop\n        /* \"#utility.yul\":9130:9738   */\n      pop\n      pop\n        /* \"#utility.yul\":9028:9738   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9761:10131   */\n    tag_294:\n        /* \"#utility.yul\":9832:9837   */\n      0x00\n        /* \"#utility.yul\":9881:9884   */\n      dup3\n        /* \"#utility.yul\":9874:9878   */\n      0x1f\n        /* \"#utility.yul\":9866:9872   */\n      dup4\n        /* \"#utility.yul\":9862:9879   */\n      add\n        /* \"#utility.yul\":9858:9885   */\n      slt\n        /* \"#utility.yul\":9848:9970   */\n      tag_459\n      jumpi\n        /* \"#utility.yul\":9889:9968   */\n      tag_460\n      tag_263\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9848:9970   */\n    tag_459:\n        /* \"#utility.yul\":10006:10012   */\n      dup2\n        /* \"#utility.yul\":9993:10013   */\n      calldataload\n        /* \"#utility.yul\":10031:10125   */\n      tag_461\n        /* \"#utility.yul\":10121:10124   */\n      dup5\n        /* \"#utility.yul\":10113:10119   */\n      dup3\n        /* \"#utility.yul\":10106:10110   */\n      0x20\n        /* \"#utility.yul\":10098:10104   */\n      dup7\n        /* \"#utility.yul\":10094:10111   */\n      add\n        /* \"#utility.yul\":10031:10125   */\n      tag_293\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10022:10125   */\n      swap2\n      pop\n        /* \"#utility.yul\":9838:10131   */\n      pop\n        /* \"#utility.yul\":9761:10131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10137:11176   */\n    tag_53:\n        /* \"#utility.yul\":10264:10270   */\n      0x00\n        /* \"#utility.yul\":10272:10278   */\n      dup1\n        /* \"#utility.yul\":10280:10286   */\n      0x00\n        /* \"#utility.yul\":10329:10331   */\n      0x60\n        /* \"#utility.yul\":10317:10326   */\n      dup5\n        /* \"#utility.yul\":10308:10315   */\n      dup7\n        /* \"#utility.yul\":10304:10327   */\n      sub\n        /* \"#utility.yul\":10300:10332   */\n      slt\n        /* \"#utility.yul\":10297:10416   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":10335:10414   */\n      tag_464\n      tag_261\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10297:10416   */\n    tag_463:\n        /* \"#utility.yul\":10483:10484   */\n      0x00\n        /* \"#utility.yul\":10472:10481   */\n      dup5\n        /* \"#utility.yul\":10468:10485   */\n      add\n        /* \"#utility.yul\":10455:10486   */\n      calldataload\n        /* \"#utility.yul\":10513:10531   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10505:10511   */\n      dup2\n        /* \"#utility.yul\":10502:10532   */\n      gt\n        /* \"#utility.yul\":10499:10616   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":10535:10614   */\n      tag_466\n      tag_262\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":10499:10616   */\n    tag_465:\n        /* \"#utility.yul\":10640:10718   */\n      tag_467\n        /* \"#utility.yul\":10710:10717   */\n      dup7\n        /* \"#utility.yul\":10701:10707   */\n      dup3\n        /* \"#utility.yul\":10690:10699   */\n      dup8\n        /* \"#utility.yul\":10686:10708   */\n      add\n        /* \"#utility.yul\":10640:10718   */\n      tag_274\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10630:10718   */\n      swap4\n      pop\n        /* \"#utility.yul\":10426:10728   */\n      pop\n        /* \"#utility.yul\":10795:10797   */\n      0x20\n        /* \"#utility.yul\":10784:10793   */\n      dup5\n        /* \"#utility.yul\":10780:10798   */\n      add\n        /* \"#utility.yul\":10767:10799   */\n      calldataload\n        /* \"#utility.yul\":10826:10844   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10818:10824   */\n      dup2\n        /* \"#utility.yul\":10815:10845   */\n      gt\n        /* \"#utility.yul\":10812:10929   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":10848:10927   */\n      tag_469\n      tag_262\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":10812:10929   */\n    tag_468:\n        /* \"#utility.yul\":10953:11031   */\n      tag_470\n        /* \"#utility.yul\":11023:11030   */\n      dup7\n        /* \"#utility.yul\":11014:11020   */\n      dup3\n        /* \"#utility.yul\":11003:11012   */\n      dup8\n        /* \"#utility.yul\":10999:11021   */\n      add\n        /* \"#utility.yul\":10953:11031   */\n      tag_294\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":10943:11031   */\n      swap3\n      pop\n        /* \"#utility.yul\":10738:11041   */\n      pop\n        /* \"#utility.yul\":11080:11082   */\n      0x40\n        /* \"#utility.yul\":11106:11159   */\n      tag_471\n        /* \"#utility.yul\":11151:11158   */\n      dup7\n        /* \"#utility.yul\":11142:11148   */\n      dup3\n        /* \"#utility.yul\":11131:11140   */\n      dup8\n        /* \"#utility.yul\":11127:11149   */\n      add\n        /* \"#utility.yul\":11106:11159   */\n      tag_272\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11096:11159   */\n      swap2\n      pop\n        /* \"#utility.yul\":11051:11169   */\n      pop\n        /* \"#utility.yul\":10137:11176   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11182:11511   */\n    tag_62:\n        /* \"#utility.yul\":11241:11247   */\n      0x00\n        /* \"#utility.yul\":11290:11292   */\n      0x20\n        /* \"#utility.yul\":11278:11287   */\n      dup3\n        /* \"#utility.yul\":11269:11276   */\n      dup5\n        /* \"#utility.yul\":11265:11288   */\n      sub\n        /* \"#utility.yul\":11261:11293   */\n      slt\n        /* \"#utility.yul\":11258:11377   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":11296:11375   */\n      tag_474\n      tag_261\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11258:11377   */\n    tag_473:\n        /* \"#utility.yul\":11416:11417   */\n      0x00\n        /* \"#utility.yul\":11441:11494   */\n      tag_475\n        /* \"#utility.yul\":11486:11493   */\n      dup5\n        /* \"#utility.yul\":11477:11483   */\n      dup3\n        /* \"#utility.yul\":11466:11475   */\n      dup6\n        /* \"#utility.yul\":11462:11484   */\n      add\n        /* \"#utility.yul\":11441:11494   */\n      tag_272\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11431:11494   */\n      swap2\n      pop\n        /* \"#utility.yul\":11387:11504   */\n      pop\n        /* \"#utility.yul\":11182:11511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11517:11607   */\n    tag_295:\n        /* \"#utility.yul\":11551:11558   */\n      0x00\n        /* \"#utility.yul\":11594:11599   */\n      dup2\n        /* \"#utility.yul\":11587:11600   */\n      iszero\n        /* \"#utility.yul\":11580:11601   */\n      iszero\n        /* \"#utility.yul\":11569:11601   */\n      swap1\n      pop\n        /* \"#utility.yul\":11517:11607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11613:11722   */\n    tag_296:\n        /* \"#utility.yul\":11694:11715   */\n      tag_478\n        /* \"#utility.yul\":11709:11714   */\n      dup2\n        /* \"#utility.yul\":11694:11715   */\n      tag_295\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":11689:11692   */\n      dup3\n        /* \"#utility.yul\":11682:11716   */\n      mstore\n        /* \"#utility.yul\":11613:11722   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11728:11938   */\n    tag_65:\n        /* \"#utility.yul\":11815:11819   */\n      0x00\n        /* \"#utility.yul\":11853:11855   */\n      0x20\n        /* \"#utility.yul\":11842:11851   */\n      dup3\n        /* \"#utility.yul\":11838:11856   */\n      add\n        /* \"#utility.yul\":11830:11856   */\n      swap1\n      pop\n        /* \"#utility.yul\":11866:11931   */\n      tag_480\n        /* \"#utility.yul\":11928:11929   */\n      0x00\n        /* \"#utility.yul\":11917:11926   */\n      dup4\n        /* \"#utility.yul\":11913:11930   */\n      add\n        /* \"#utility.yul\":11904:11910   */\n      dup5\n        /* \"#utility.yul\":11866:11931   */\n      tag_296\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11728:11938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11944:12264   */\n    tag_297:\n        /* \"#utility.yul\":12030:12034   */\n      0x00\n        /* \"#utility.yul\":12120:12138   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12112:12118   */\n      dup3\n        /* \"#utility.yul\":12109:12139   */\n      gt\n        /* \"#utility.yul\":12106:12162   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":12142:12160   */\n      tag_483\n      tag_148\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12106:12162   */\n    tag_482:\n        /* \"#utility.yul\":12192:12196   */\n      0x20\n        /* \"#utility.yul\":12184:12190   */\n      dup3\n        /* \"#utility.yul\":12180:12197   */\n      mul\n        /* \"#utility.yul\":12172:12197   */\n      swap1\n      pop\n        /* \"#utility.yul\":12252:12256   */\n      0x20\n        /* \"#utility.yul\":12246:12250   */\n      dup2\n        /* \"#utility.yul\":12242:12257   */\n      add\n        /* \"#utility.yul\":12234:12257   */\n      swap1\n      pop\n        /* \"#utility.yul\":11944:12264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12285:13227   */\n    tag_298:\n        /* \"#utility.yul\":12390:12395   */\n      0x00\n        /* \"#utility.yul\":12415:12505   */\n      tag_485\n        /* \"#utility.yul\":12431:12504   */\n      tag_486\n        /* \"#utility.yul\":12497:12503   */\n      dup5\n        /* \"#utility.yul\":12431:12504   */\n      tag_297\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":12415:12505   */\n      tag_266\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12406:12505   */\n      swap1\n      pop\n        /* \"#utility.yul\":12525:12530   */\n      dup1\n        /* \"#utility.yul\":12554:12560   */\n      dup4\n        /* \"#utility.yul\":12547:12552   */\n      dup3\n        /* \"#utility.yul\":12540:12561   */\n      mstore\n        /* \"#utility.yul\":12588:12592   */\n      0x20\n        /* \"#utility.yul\":12581:12586   */\n      dup3\n        /* \"#utility.yul\":12577:12593   */\n      add\n        /* \"#utility.yul\":12570:12593   */\n      swap1\n      pop\n        /* \"#utility.yul\":12641:12645   */\n      0x20\n        /* \"#utility.yul\":12633:12639   */\n      dup5\n        /* \"#utility.yul\":12629:12646   */\n      mul\n        /* \"#utility.yul\":12621:12627   */\n      dup4\n        /* \"#utility.yul\":12617:12647   */\n      add\n        /* \"#utility.yul\":12670:12673   */\n      dup6\n        /* \"#utility.yul\":12662:12668   */\n      dup2\n        /* \"#utility.yul\":12659:12674   */\n      gt\n        /* \"#utility.yul\":12656:12778   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":12689:12768   */\n      tag_488\n      tag_268\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12656:12778   */\n    tag_487:\n        /* \"#utility.yul\":12804:12810   */\n      dup4\n        /* \"#utility.yul\":12787:13221   */\n    tag_489:\n        /* \"#utility.yul\":12821:12827   */\n      dup2\n        /* \"#utility.yul\":12816:12819   */\n      dup2\n        /* \"#utility.yul\":12813:12828   */\n      lt\n        /* \"#utility.yul\":12787:13221   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":12910:12913   */\n      dup1\n        /* \"#utility.yul\":12897:12914   */\n      calldataload\n        /* \"#utility.yul\":12946:12964   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12933:12944   */\n      dup2\n        /* \"#utility.yul\":12930:12965   */\n      gt\n        /* \"#utility.yul\":12927:13049   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":12968:13047   */\n      tag_493\n      tag_263\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12927:13049   */\n    tag_492:\n        /* \"#utility.yul\":13092:13103   */\n      dup1\n        /* \"#utility.yul\":13084:13090   */\n      dup7\n        /* \"#utility.yul\":13080:13104   */\n      add\n        /* \"#utility.yul\":13130:13176   */\n      tag_494\n        /* \"#utility.yul\":13172:13175   */\n      dup10\n        /* \"#utility.yul\":13160:13170   */\n      dup3\n        /* \"#utility.yul\":13130:13176   */\n      tag_279\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":13125:13128   */\n      dup6\n        /* \"#utility.yul\":13118:13177   */\n      mstore\n        /* \"#utility.yul\":13206:13210   */\n      0x20\n        /* \"#utility.yul\":13201:13204   */\n      dup6\n        /* \"#utility.yul\":13197:13211   */\n      add\n        /* \"#utility.yul\":13190:13211   */\n      swap5\n      pop\n        /* \"#utility.yul\":12863:13221   */\n      pop\n      pop\n        /* \"#utility.yul\":12847:12851   */\n      0x20\n        /* \"#utility.yul\":12842:12845   */\n      dup2\n        /* \"#utility.yul\":12838:12852   */\n      add\n        /* \"#utility.yul\":12831:12852   */\n      swap1\n      pop\n        /* \"#utility.yul\":12787:13221   */\n      jump(tag_489)\n    tag_491:\n        /* \"#utility.yul\":12791:12812   */\n      pop\n        /* \"#utility.yul\":12396:13227   */\n      pop\n      pop\n        /* \"#utility.yul\":12285:13227   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13248:13636   */\n    tag_299:\n        /* \"#utility.yul\":13328:13333   */\n      0x00\n        /* \"#utility.yul\":13377:13380   */\n      dup3\n        /* \"#utility.yul\":13370:13374   */\n      0x1f\n        /* \"#utility.yul\":13362:13368   */\n      dup4\n        /* \"#utility.yul\":13358:13375   */\n      add\n        /* \"#utility.yul\":13354:13381   */\n      slt\n        /* \"#utility.yul\":13344:13466   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":13385:13464   */\n      tag_497\n      tag_263\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":13344:13466   */\n    tag_496:\n        /* \"#utility.yul\":13502:13508   */\n      dup2\n        /* \"#utility.yul\":13489:13509   */\n      calldataload\n        /* \"#utility.yul\":13527:13630   */\n      tag_498\n        /* \"#utility.yul\":13626:13629   */\n      dup5\n        /* \"#utility.yul\":13618:13624   */\n      dup3\n        /* \"#utility.yul\":13611:13615   */\n      0x20\n        /* \"#utility.yul\":13603:13609   */\n      dup7\n        /* \"#utility.yul\":13599:13616   */\n      add\n        /* \"#utility.yul\":13527:13630   */\n      tag_298\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13518:13630   */\n      swap2\n      pop\n        /* \"#utility.yul\":13334:13636   */\n      pop\n        /* \"#utility.yul\":13248:13636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13642:14554   */\n    tag_73:\n        /* \"#utility.yul\":13769:13775   */\n      0x00\n        /* \"#utility.yul\":13777:13783   */\n      dup1\n        /* \"#utility.yul\":13826:13828   */\n      0x40\n        /* \"#utility.yul\":13814:13823   */\n      dup4\n        /* \"#utility.yul\":13805:13812   */\n      dup6\n        /* \"#utility.yul\":13801:13824   */\n      sub\n        /* \"#utility.yul\":13797:13829   */\n      slt\n        /* \"#utility.yul\":13794:13913   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":13832:13911   */\n      tag_501\n      tag_261\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":13794:13913   */\n    tag_500:\n        /* \"#utility.yul\":13980:13981   */\n      0x00\n        /* \"#utility.yul\":13969:13978   */\n      dup4\n        /* \"#utility.yul\":13965:13982   */\n      add\n        /* \"#utility.yul\":13952:13983   */\n      calldataload\n        /* \"#utility.yul\":14010:14028   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14002:14008   */\n      dup2\n        /* \"#utility.yul\":13999:14029   */\n      gt\n        /* \"#utility.yul\":13996:14113   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":14032:14111   */\n      tag_503\n      tag_262\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":13996:14113   */\n    tag_502:\n        /* \"#utility.yul\":14137:14215   */\n      tag_504\n        /* \"#utility.yul\":14207:14214   */\n      dup6\n        /* \"#utility.yul\":14198:14204   */\n      dup3\n        /* \"#utility.yul\":14187:14196   */\n      dup7\n        /* \"#utility.yul\":14183:14205   */\n      add\n        /* \"#utility.yul\":14137:14215   */\n      tag_274\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14127:14215   */\n      swap3\n      pop\n        /* \"#utility.yul\":13923:14225   */\n      pop\n        /* \"#utility.yul\":14292:14294   */\n      0x20\n        /* \"#utility.yul\":14281:14290   */\n      dup4\n        /* \"#utility.yul\":14277:14295   */\n      add\n        /* \"#utility.yul\":14264:14296   */\n      calldataload\n        /* \"#utility.yul\":14323:14341   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14315:14321   */\n      dup2\n        /* \"#utility.yul\":14312:14342   */\n      gt\n        /* \"#utility.yul\":14309:14426   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":14345:14424   */\n      tag_506\n      tag_262\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14309:14426   */\n    tag_505:\n        /* \"#utility.yul\":14450:14537   */\n      tag_507\n        /* \"#utility.yul\":14529:14536   */\n      dup6\n        /* \"#utility.yul\":14520:14526   */\n      dup3\n        /* \"#utility.yul\":14509:14518   */\n      dup7\n        /* \"#utility.yul\":14505:14527   */\n      add\n        /* \"#utility.yul\":14450:14537   */\n      tag_299\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":14440:14537   */\n      swap2\n      pop\n        /* \"#utility.yul\":14235:14547   */\n      pop\n        /* \"#utility.yul\":13642:14554   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14560:14704   */\n    tag_300:\n        /* \"#utility.yul\":14657:14663   */\n      0x00\n        /* \"#utility.yul\":14691:14696   */\n      dup2\n        /* \"#utility.yul\":14685:14697   */\n      mload\n        /* \"#utility.yul\":14675:14697   */\n      swap1\n      pop\n        /* \"#utility.yul\":14560:14704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14710:14924   */\n    tag_301:\n        /* \"#utility.yul\":14839:14850   */\n      0x00\n        /* \"#utility.yul\":14873:14879   */\n      dup3\n        /* \"#utility.yul\":14868:14871   */\n      dup3\n        /* \"#utility.yul\":14861:14880   */\n      mstore\n        /* \"#utility.yul\":14913:14917   */\n      0x20\n        /* \"#utility.yul\":14908:14911   */\n      dup3\n        /* \"#utility.yul\":14904:14918   */\n      add\n        /* \"#utility.yul\":14889:14918   */\n      swap1\n      pop\n        /* \"#utility.yul\":14710:14924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14930:15092   */\n    tag_302:\n        /* \"#utility.yul\":15027:15031   */\n      0x00\n        /* \"#utility.yul\":15050:15053   */\n      dup2\n        /* \"#utility.yul\":15042:15053   */\n      swap1\n      pop\n        /* \"#utility.yul\":15080:15084   */\n      0x20\n        /* \"#utility.yul\":15075:15078   */\n      dup3\n        /* \"#utility.yul\":15071:15085   */\n      add\n        /* \"#utility.yul\":15063:15085   */\n      swap1\n      pop\n        /* \"#utility.yul\":14930:15092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15098:15206   */\n    tag_303:\n        /* \"#utility.yul\":15175:15199   */\n      tag_512\n        /* \"#utility.yul\":15193:15198   */\n      dup2\n        /* \"#utility.yul\":15175:15199   */\n      tag_270\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15170:15173   */\n      dup3\n        /* \"#utility.yul\":15163:15200   */\n      mstore\n        /* \"#utility.yul\":15098:15206   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15212:15320   */\n    tag_304:\n        /* \"#utility.yul\":15289:15313   */\n      tag_514\n        /* \"#utility.yul\":15307:15312   */\n      dup2\n        /* \"#utility.yul\":15289:15313   */\n      tag_286\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":15284:15287   */\n      dup3\n        /* \"#utility.yul\":15277:15314   */\n      mstore\n        /* \"#utility.yul\":15212:15320   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15398:15919   */\n    tag_305:\n        /* \"#utility.yul\":15545:15549   */\n      0x40\n        /* \"#utility.yul\":15540:15543   */\n      dup3\n        /* \"#utility.yul\":15536:15550   */\n      add\n        /* \"#utility.yul\":15644:15648   */\n      0x00\n        /* \"#utility.yul\":15637:15642   */\n      dup3\n        /* \"#utility.yul\":15633:15649   */\n      add\n        /* \"#utility.yul\":15627:15650   */\n      mload\n        /* \"#utility.yul\":15663:15726   */\n      tag_516\n        /* \"#utility.yul\":15720:15724   */\n      0x00\n        /* \"#utility.yul\":15715:15718   */\n      dup6\n        /* \"#utility.yul\":15711:15725   */\n      add\n        /* \"#utility.yul\":15697:15709   */\n      dup3\n        /* \"#utility.yul\":15663:15726   */\n      tag_303\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":15560:15736   */\n      pop\n        /* \"#utility.yul\":15820:15824   */\n      0x20\n        /* \"#utility.yul\":15813:15818   */\n      dup3\n        /* \"#utility.yul\":15809:15825   */\n      add\n        /* \"#utility.yul\":15803:15826   */\n      mload\n        /* \"#utility.yul\":15839:15902   */\n      tag_517\n        /* \"#utility.yul\":15896:15900   */\n      0x20\n        /* \"#utility.yul\":15891:15894   */\n      dup6\n        /* \"#utility.yul\":15887:15901   */\n      add\n        /* \"#utility.yul\":15873:15885   */\n      dup3\n        /* \"#utility.yul\":15839:15902   */\n      tag_304\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15746:15912   */\n      pop\n        /* \"#utility.yul\":15514:15919   */\n      pop\n        /* \"#utility.yul\":15398:15919   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15925:16224   */\n    tag_306:\n        /* \"#utility.yul\":16054:16064   */\n      0x00\n        /* \"#utility.yul\":16075:16181   */\n      tag_519\n        /* \"#utility.yul\":16177:16180   */\n      dup4\n        /* \"#utility.yul\":16169:16175   */\n      dup4\n        /* \"#utility.yul\":16075:16181   */\n      tag_305\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":16213:16217   */\n      0x40\n        /* \"#utility.yul\":16208:16211   */\n      dup4\n        /* \"#utility.yul\":16204:16218   */\n      add\n        /* \"#utility.yul\":16190:16218   */\n      swap1\n      pop\n        /* \"#utility.yul\":15925:16224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16230:16373   */\n    tag_307:\n        /* \"#utility.yul\":16330:16334   */\n      0x00\n        /* \"#utility.yul\":16362:16366   */\n      0x20\n        /* \"#utility.yul\":16357:16360   */\n      dup3\n        /* \"#utility.yul\":16353:16367   */\n      add\n        /* \"#utility.yul\":16345:16367   */\n      swap1\n      pop\n        /* \"#utility.yul\":16230:16373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16455:17427   */\n    tag_308:\n        /* \"#utility.yul\":16634:16637   */\n      0x00\n        /* \"#utility.yul\":16663:16747   */\n      tag_522\n        /* \"#utility.yul\":16741:16746   */\n      dup3\n        /* \"#utility.yul\":16663:16747   */\n      tag_300\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":16763:16879   */\n      tag_523\n        /* \"#utility.yul\":16872:16878   */\n      dup2\n        /* \"#utility.yul\":16867:16870   */\n      dup6\n        /* \"#utility.yul\":16763:16879   */\n      tag_301\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":16756:16879   */\n      swap4\n      pop\n        /* \"#utility.yul\":16903:16989   */\n      tag_524\n        /* \"#utility.yul\":16983:16988   */\n      dup4\n        /* \"#utility.yul\":16903:16989   */\n      tag_302\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":17012:17019   */\n      dup1\n        /* \"#utility.yul\":17043:17044   */\n      0x00\n        /* \"#utility.yul\":17028:17402   */\n    tag_525:\n        /* \"#utility.yul\":17053:17059   */\n      dup4\n        /* \"#utility.yul\":17050:17051   */\n      dup2\n        /* \"#utility.yul\":17047:17060   */\n      lt\n        /* \"#utility.yul\":17028:17402   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":17129:17135   */\n      dup2\n        /* \"#utility.yul\":17123:17136   */\n      mload\n        /* \"#utility.yul\":17156:17279   */\n      tag_528\n        /* \"#utility.yul\":17275:17278   */\n      dup9\n        /* \"#utility.yul\":17260:17273   */\n      dup3\n        /* \"#utility.yul\":17156:17279   */\n      tag_306\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":17149:17279   */\n      swap8\n      pop\n        /* \"#utility.yul\":17302:17392   */\n      tag_529\n        /* \"#utility.yul\":17385:17391   */\n      dup4\n        /* \"#utility.yul\":17302:17392   */\n      tag_307\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":17292:17392   */\n      swap3\n      pop\n        /* \"#utility.yul\":17088:17402   */\n      pop\n        /* \"#utility.yul\":17075:17076   */\n      0x01\n        /* \"#utility.yul\":17072:17073   */\n      dup2\n        /* \"#utility.yul\":17068:17077   */\n      add\n        /* \"#utility.yul\":17063:17077   */\n      swap1\n      pop\n        /* \"#utility.yul\":17028:17402   */\n      jump(tag_525)\n    tag_527:\n        /* \"#utility.yul\":17032:17046   */\n      pop\n        /* \"#utility.yul\":17418:17421   */\n      dup6\n        /* \"#utility.yul\":17411:17421   */\n      swap4\n      pop\n        /* \"#utility.yul\":16639:17427   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16455:17427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17433:17926   */\n    tag_76:\n        /* \"#utility.yul\":17636:17640   */\n      0x00\n        /* \"#utility.yul\":17674:17676   */\n      0x20\n        /* \"#utility.yul\":17663:17672   */\n      dup3\n        /* \"#utility.yul\":17659:17677   */\n      add\n        /* \"#utility.yul\":17651:17677   */\n      swap1\n      pop\n        /* \"#utility.yul\":17723:17732   */\n      dup2\n        /* \"#utility.yul\":17717:17721   */\n      dup2\n        /* \"#utility.yul\":17713:17733   */\n      sub\n        /* \"#utility.yul\":17709:17710   */\n      0x00\n        /* \"#utility.yul\":17698:17707   */\n      dup4\n        /* \"#utility.yul\":17694:17711   */\n      add\n        /* \"#utility.yul\":17687:17734   */\n      mstore\n        /* \"#utility.yul\":17751:17919   */\n      tag_531\n        /* \"#utility.yul\":17914:17918   */\n      dup2\n        /* \"#utility.yul\":17905:17911   */\n      dup5\n        /* \"#utility.yul\":17751:17919   */\n      tag_308\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":17743:17919   */\n      swap1\n      pop\n        /* \"#utility.yul\":17433:17926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17932:18551   */\n    tag_80:\n        /* \"#utility.yul\":18009:18015   */\n      0x00\n        /* \"#utility.yul\":18017:18023   */\n      dup1\n        /* \"#utility.yul\":18025:18031   */\n      0x00\n        /* \"#utility.yul\":18074:18076   */\n      0x60\n        /* \"#utility.yul\":18062:18071   */\n      dup5\n        /* \"#utility.yul\":18053:18060   */\n      dup7\n        /* \"#utility.yul\":18049:18072   */\n      sub\n        /* \"#utility.yul\":18045:18077   */\n      slt\n        /* \"#utility.yul\":18042:18161   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":18080:18159   */\n      tag_534\n      tag_261\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":18042:18161   */\n    tag_533:\n        /* \"#utility.yul\":18200:18201   */\n      0x00\n        /* \"#utility.yul\":18225:18278   */\n      tag_535\n        /* \"#utility.yul\":18270:18277   */\n      dup7\n        /* \"#utility.yul\":18261:18267   */\n      dup3\n        /* \"#utility.yul\":18250:18259   */\n      dup8\n        /* \"#utility.yul\":18246:18268   */\n      add\n        /* \"#utility.yul\":18225:18278   */\n      tag_272\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":18215:18278   */\n      swap4\n      pop\n        /* \"#utility.yul\":18171:18288   */\n      pop\n        /* \"#utility.yul\":18327:18329   */\n      0x20\n        /* \"#utility.yul\":18353:18406   */\n      tag_536\n        /* \"#utility.yul\":18398:18405   */\n      dup7\n        /* \"#utility.yul\":18389:18395   */\n      dup3\n        /* \"#utility.yul\":18378:18387   */\n      dup8\n        /* \"#utility.yul\":18374:18396   */\n      add\n        /* \"#utility.yul\":18353:18406   */\n      tag_272\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":18343:18406   */\n      swap3\n      pop\n        /* \"#utility.yul\":18298:18416   */\n      pop\n        /* \"#utility.yul\":18455:18457   */\n      0x40\n        /* \"#utility.yul\":18481:18534   */\n      tag_537\n        /* \"#utility.yul\":18526:18533   */\n      dup7\n        /* \"#utility.yul\":18517:18523   */\n      dup3\n        /* \"#utility.yul\":18506:18515   */\n      dup8\n        /* \"#utility.yul\":18502:18524   */\n      add\n        /* \"#utility.yul\":18481:18534   */\n      tag_292\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":18471:18534   */\n      swap2\n      pop\n        /* \"#utility.yul\":18426:18544   */\n      pop\n        /* \"#utility.yul\":17932:18551   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":18557:18737   */\n    tag_309:\n        /* \"#utility.yul\":18605:18682   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18602:18603   */\n      0x00\n        /* \"#utility.yul\":18595:18683   */\n      mstore\n        /* \"#utility.yul\":18702:18706   */\n      0x21\n        /* \"#utility.yul\":18699:18700   */\n      0x04\n        /* \"#utility.yul\":18692:18707   */\n      mstore\n        /* \"#utility.yul\":18726:18730   */\n      0x24\n        /* \"#utility.yul\":18723:18724   */\n      0x00\n        /* \"#utility.yul\":18716:18731   */\n      revert\n        /* \"#utility.yul\":18743:18858   */\n    tag_310:\n        /* \"#utility.yul\":18826:18827   */\n      0x07\n        /* \"#utility.yul\":18819:18824   */\n      dup2\n        /* \"#utility.yul\":18816:18828   */\n      lt\n        /* \"#utility.yul\":18806:18852   */\n      tag_540\n      jumpi\n        /* \"#utility.yul\":18832:18850   */\n      tag_541\n      tag_309\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":18806:18852   */\n    tag_540:\n        /* \"#utility.yul\":18743:18858   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18864:18995   */\n    tag_311:\n        /* \"#utility.yul\":18911:18918   */\n      0x00\n        /* \"#utility.yul\":18940:18945   */\n      dup2\n        /* \"#utility.yul\":18929:18945   */\n      swap1\n      pop\n        /* \"#utility.yul\":18946:18989   */\n      tag_543\n        /* \"#utility.yul\":18983:18988   */\n      dup3\n        /* \"#utility.yul\":18946:18989   */\n      tag_310\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":18864:18995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19001:19132   */\n    tag_312:\n        /* \"#utility.yul\":19059:19068   */\n      0x00\n        /* \"#utility.yul\":19092:19126   */\n      tag_545\n        /* \"#utility.yul\":19120:19125   */\n      dup3\n        /* \"#utility.yul\":19092:19126   */\n      tag_311\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":19079:19126   */\n      swap1\n      pop\n        /* \"#utility.yul\":19001:19132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19138:19285   */\n    tag_313:\n        /* \"#utility.yul\":19233:19278   */\n      tag_547\n        /* \"#utility.yul\":19272:19277   */\n      dup2\n        /* \"#utility.yul\":19233:19278   */\n      tag_312\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":19228:19231   */\n      dup3\n        /* \"#utility.yul\":19221:19279   */\n      mstore\n        /* \"#utility.yul\":19138:19285   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19291:19529   */\n    tag_91:\n        /* \"#utility.yul\":19392:19396   */\n      0x00\n        /* \"#utility.yul\":19430:19432   */\n      0x20\n        /* \"#utility.yul\":19419:19428   */\n      dup3\n        /* \"#utility.yul\":19415:19433   */\n      add\n        /* \"#utility.yul\":19407:19433   */\n      swap1\n      pop\n        /* \"#utility.yul\":19443:19522   */\n      tag_549\n        /* \"#utility.yul\":19519:19520   */\n      0x00\n        /* \"#utility.yul\":19508:19517   */\n      dup4\n        /* \"#utility.yul\":19504:19521   */\n      add\n        /* \"#utility.yul\":19495:19501   */\n      dup5\n        /* \"#utility.yul\":19443:19522   */\n      tag_313\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":19291:19529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19535:20187   */\n    tag_95:\n        /* \"#utility.yul\":19612:19618   */\n      0x00\n        /* \"#utility.yul\":19620:19626   */\n      dup1\n        /* \"#utility.yul\":19669:19671   */\n      0x40\n        /* \"#utility.yul\":19657:19666   */\n      dup4\n        /* \"#utility.yul\":19648:19655   */\n      dup6\n        /* \"#utility.yul\":19644:19667   */\n      sub\n        /* \"#utility.yul\":19640:19672   */\n      slt\n        /* \"#utility.yul\":19637:19756   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":19675:19754   */\n      tag_552\n      tag_261\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":19637:19756   */\n    tag_551:\n        /* \"#utility.yul\":19795:19796   */\n      0x00\n        /* \"#utility.yul\":19820:19873   */\n      tag_553\n        /* \"#utility.yul\":19865:19872   */\n      dup6\n        /* \"#utility.yul\":19856:19862   */\n      dup3\n        /* \"#utility.yul\":19845:19854   */\n      dup7\n        /* \"#utility.yul\":19841:19863   */\n      add\n        /* \"#utility.yul\":19820:19873   */\n      tag_292\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":19810:19873   */\n      swap3\n      pop\n        /* \"#utility.yul\":19766:19883   */\n      pop\n        /* \"#utility.yul\":19950:19952   */\n      0x20\n        /* \"#utility.yul\":19939:19948   */\n      dup4\n        /* \"#utility.yul\":19935:19953   */\n      add\n        /* \"#utility.yul\":19922:19954   */\n      calldataload\n        /* \"#utility.yul\":19981:19999   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19973:19979   */\n      dup2\n        /* \"#utility.yul\":19970:20000   */\n      gt\n        /* \"#utility.yul\":19967:20084   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":20003:20082   */\n      tag_555\n      tag_262\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":19967:20084   */\n    tag_554:\n        /* \"#utility.yul\":20108:20170   */\n      tag_556\n        /* \"#utility.yul\":20162:20169   */\n      dup6\n        /* \"#utility.yul\":20153:20159   */\n      dup3\n        /* \"#utility.yul\":20142:20151   */\n      dup7\n        /* \"#utility.yul\":20138:20160   */\n      add\n        /* \"#utility.yul\":20108:20170   */\n      tag_279\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":20098:20170   */\n      swap2\n      pop\n        /* \"#utility.yul\":19893:20180   */\n      pop\n        /* \"#utility.yul\":19535:20187   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20193:20522   */\n    tag_103:\n        /* \"#utility.yul\":20252:20258   */\n      0x00\n        /* \"#utility.yul\":20301:20303   */\n      0x20\n        /* \"#utility.yul\":20289:20298   */\n      dup3\n        /* \"#utility.yul\":20280:20287   */\n      dup5\n        /* \"#utility.yul\":20276:20299   */\n      sub\n        /* \"#utility.yul\":20272:20304   */\n      slt\n        /* \"#utility.yul\":20269:20388   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":20307:20386   */\n      tag_559\n      tag_261\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":20269:20388   */\n    tag_558:\n        /* \"#utility.yul\":20427:20428   */\n      0x00\n        /* \"#utility.yul\":20452:20505   */\n      tag_560\n        /* \"#utility.yul\":20497:20504   */\n      dup5\n        /* \"#utility.yul\":20488:20494   */\n      dup3\n        /* \"#utility.yul\":20477:20486   */\n      dup6\n        /* \"#utility.yul\":20473:20495   */\n      add\n        /* \"#utility.yul\":20452:20505   */\n      tag_292\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":20442:20505   */\n      swap2\n      pop\n        /* \"#utility.yul\":20398:20515   */\n      pop\n        /* \"#utility.yul\":20193:20522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20528:20642   */\n    tag_314:\n        /* \"#utility.yul\":20595:20601   */\n      0x00\n        /* \"#utility.yul\":20629:20634   */\n      dup2\n        /* \"#utility.yul\":20623:20635   */\n      mload\n        /* \"#utility.yul\":20613:20635   */\n      swap1\n      pop\n        /* \"#utility.yul\":20528:20642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20648:20832   */\n    tag_315:\n        /* \"#utility.yul\":20747:20758   */\n      0x00\n        /* \"#utility.yul\":20781:20787   */\n      dup3\n        /* \"#utility.yul\":20776:20779   */\n      dup3\n        /* \"#utility.yul\":20769:20788   */\n      mstore\n        /* \"#utility.yul\":20821:20825   */\n      0x20\n        /* \"#utility.yul\":20816:20819   */\n      dup3\n        /* \"#utility.yul\":20812:20826   */\n      add\n        /* \"#utility.yul\":20797:20826   */\n      swap1\n      pop\n        /* \"#utility.yul\":20648:20832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20838:20970   */\n    tag_316:\n        /* \"#utility.yul\":20905:20909   */\n      0x00\n        /* \"#utility.yul\":20928:20931   */\n      dup2\n        /* \"#utility.yul\":20920:20931   */\n      swap1\n      pop\n        /* \"#utility.yul\":20958:20962   */\n      0x20\n        /* \"#utility.yul\":20953:20956   */\n      dup3\n        /* \"#utility.yul\":20949:20963   */\n      add\n        /* \"#utility.yul\":20941:20963   */\n      swap1\n      pop\n        /* \"#utility.yul\":20838:20970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20976:21155   */\n    tag_317:\n        /* \"#utility.yul\":21045:21055   */\n      0x00\n        /* \"#utility.yul\":21066:21112   */\n      tag_565\n        /* \"#utility.yul\":21108:21111   */\n      dup4\n        /* \"#utility.yul\":21100:21106   */\n      dup4\n        /* \"#utility.yul\":21066:21112   */\n      tag_303\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":21144:21148   */\n      0x20\n        /* \"#utility.yul\":21139:21142   */\n      dup4\n        /* \"#utility.yul\":21135:21149   */\n      add\n        /* \"#utility.yul\":21121:21149   */\n      swap1\n      pop\n        /* \"#utility.yul\":20976:21155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21161:21274   */\n    tag_318:\n        /* \"#utility.yul\":21231:21235   */\n      0x00\n        /* \"#utility.yul\":21263:21267   */\n      0x20\n        /* \"#utility.yul\":21258:21261   */\n      dup3\n        /* \"#utility.yul\":21254:21268   */\n      add\n        /* \"#utility.yul\":21246:21268   */\n      swap1\n      pop\n        /* \"#utility.yul\":21161:21274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21310:22042   */\n    tag_319:\n        /* \"#utility.yul\":21429:21432   */\n      0x00\n        /* \"#utility.yul\":21458:21512   */\n      tag_568\n        /* \"#utility.yul\":21506:21511   */\n      dup3\n        /* \"#utility.yul\":21458:21512   */\n      tag_314\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":21528:21614   */\n      tag_569\n        /* \"#utility.yul\":21607:21613   */\n      dup2\n        /* \"#utility.yul\":21602:21605   */\n      dup6\n        /* \"#utility.yul\":21528:21614   */\n      tag_315\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":21521:21614   */\n      swap4\n      pop\n        /* \"#utility.yul\":21638:21694   */\n      tag_570\n        /* \"#utility.yul\":21688:21693   */\n      dup4\n        /* \"#utility.yul\":21638:21694   */\n      tag_316\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":21717:21724   */\n      dup1\n        /* \"#utility.yul\":21748:21749   */\n      0x00\n        /* \"#utility.yul\":21733:22017   */\n    tag_571:\n        /* \"#utility.yul\":21758:21764   */\n      dup4\n        /* \"#utility.yul\":21755:21756   */\n      dup2\n        /* \"#utility.yul\":21752:21765   */\n      lt\n        /* \"#utility.yul\":21733:22017   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":21834:21840   */\n      dup2\n        /* \"#utility.yul\":21828:21841   */\n      mload\n        /* \"#utility.yul\":21861:21924   */\n      tag_574\n        /* \"#utility.yul\":21920:21923   */\n      dup9\n        /* \"#utility.yul\":21905:21918   */\n      dup3\n        /* \"#utility.yul\":21861:21924   */\n      tag_317\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":21854:21924   */\n      swap8\n      pop\n        /* \"#utility.yul\":21947:22007   */\n      tag_575\n        /* \"#utility.yul\":22000:22006   */\n      dup4\n        /* \"#utility.yul\":21947:22007   */\n      tag_318\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":21937:22007   */\n      swap3\n      pop\n        /* \"#utility.yul\":21793:22017   */\n      pop\n        /* \"#utility.yul\":21780:21781   */\n      0x01\n        /* \"#utility.yul\":21777:21778   */\n      dup2\n        /* \"#utility.yul\":21773:21782   */\n      add\n        /* \"#utility.yul\":21768:21782   */\n      swap1\n      pop\n        /* \"#utility.yul\":21733:22017   */\n      jump(tag_571)\n    tag_573:\n        /* \"#utility.yul\":21737:21751   */\n      pop\n        /* \"#utility.yul\":22033:22036   */\n      dup6\n        /* \"#utility.yul\":22026:22036   */\n      swap4\n      pop\n        /* \"#utility.yul\":21434:22042   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21310:22042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22048:22162   */\n    tag_320:\n        /* \"#utility.yul\":22115:22121   */\n      0x00\n        /* \"#utility.yul\":22149:22154   */\n      dup2\n        /* \"#utility.yul\":22143:22155   */\n      mload\n        /* \"#utility.yul\":22133:22155   */\n      swap1\n      pop\n        /* \"#utility.yul\":22048:22162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22168:22352   */\n    tag_321:\n        /* \"#utility.yul\":22267:22278   */\n      0x00\n        /* \"#utility.yul\":22301:22307   */\n      dup3\n        /* \"#utility.yul\":22296:22299   */\n      dup3\n        /* \"#utility.yul\":22289:22308   */\n      mstore\n        /* \"#utility.yul\":22341:22345   */\n      0x20\n        /* \"#utility.yul\":22336:22339   */\n      dup3\n        /* \"#utility.yul\":22332:22346   */\n      add\n        /* \"#utility.yul\":22317:22346   */\n      swap1\n      pop\n        /* \"#utility.yul\":22168:22352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22358:22490   */\n    tag_322:\n        /* \"#utility.yul\":22425:22429   */\n      0x00\n        /* \"#utility.yul\":22448:22451   */\n      dup2\n        /* \"#utility.yul\":22440:22451   */\n      swap1\n      pop\n        /* \"#utility.yul\":22478:22482   */\n      0x20\n        /* \"#utility.yul\":22473:22476   */\n      dup3\n        /* \"#utility.yul\":22469:22483   */\n      add\n        /* \"#utility.yul\":22461:22483   */\n      swap1\n      pop\n        /* \"#utility.yul\":22358:22490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22496:22675   */\n    tag_323:\n        /* \"#utility.yul\":22565:22575   */\n      0x00\n        /* \"#utility.yul\":22586:22632   */\n      tag_580\n        /* \"#utility.yul\":22628:22631   */\n      dup4\n        /* \"#utility.yul\":22620:22626   */\n      dup4\n        /* \"#utility.yul\":22586:22632   */\n      tag_304\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":22664:22668   */\n      0x20\n        /* \"#utility.yul\":22659:22662   */\n      dup4\n        /* \"#utility.yul\":22655:22669   */\n      add\n        /* \"#utility.yul\":22641:22669   */\n      swap1\n      pop\n        /* \"#utility.yul\":22496:22675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22681:22794   */\n    tag_324:\n        /* \"#utility.yul\":22751:22755   */\n      0x00\n        /* \"#utility.yul\":22783:22787   */\n      0x20\n        /* \"#utility.yul\":22778:22781   */\n      dup3\n        /* \"#utility.yul\":22774:22788   */\n      add\n        /* \"#utility.yul\":22766:22788   */\n      swap1\n      pop\n        /* \"#utility.yul\":22681:22794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22830:23562   */\n    tag_325:\n        /* \"#utility.yul\":22949:22952   */\n      0x00\n        /* \"#utility.yul\":22978:23032   */\n      tag_583\n        /* \"#utility.yul\":23026:23031   */\n      dup3\n        /* \"#utility.yul\":22978:23032   */\n      tag_320\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":23048:23134   */\n      tag_584\n        /* \"#utility.yul\":23127:23133   */\n      dup2\n        /* \"#utility.yul\":23122:23125   */\n      dup6\n        /* \"#utility.yul\":23048:23134   */\n      tag_321\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":23041:23134   */\n      swap4\n      pop\n        /* \"#utility.yul\":23158:23214   */\n      tag_585\n        /* \"#utility.yul\":23208:23213   */\n      dup4\n        /* \"#utility.yul\":23158:23214   */\n      tag_322\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":23237:23244   */\n      dup1\n        /* \"#utility.yul\":23268:23269   */\n      0x00\n        /* \"#utility.yul\":23253:23537   */\n    tag_586:\n        /* \"#utility.yul\":23278:23284   */\n      dup4\n        /* \"#utility.yul\":23275:23276   */\n      dup2\n        /* \"#utility.yul\":23272:23285   */\n      lt\n        /* \"#utility.yul\":23253:23537   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":23354:23360   */\n      dup2\n        /* \"#utility.yul\":23348:23361   */\n      mload\n        /* \"#utility.yul\":23381:23444   */\n      tag_589\n        /* \"#utility.yul\":23440:23443   */\n      dup9\n        /* \"#utility.yul\":23425:23438   */\n      dup3\n        /* \"#utility.yul\":23381:23444   */\n      tag_323\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":23374:23444   */\n      swap8\n      pop\n        /* \"#utility.yul\":23467:23527   */\n      tag_590\n        /* \"#utility.yul\":23520:23526   */\n      dup4\n        /* \"#utility.yul\":23467:23527   */\n      tag_324\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":23457:23527   */\n      swap3\n      pop\n        /* \"#utility.yul\":23313:23537   */\n      pop\n        /* \"#utility.yul\":23300:23301   */\n      0x01\n        /* \"#utility.yul\":23297:23298   */\n      dup2\n        /* \"#utility.yul\":23293:23302   */\n      add\n        /* \"#utility.yul\":23288:23302   */\n      swap1\n      pop\n        /* \"#utility.yul\":23253:23537   */\n      jump(tag_586)\n    tag_588:\n        /* \"#utility.yul\":23257:23271   */\n      pop\n        /* \"#utility.yul\":23553:23556   */\n      dup6\n        /* \"#utility.yul\":23546:23556   */\n      swap4\n      pop\n        /* \"#utility.yul\":22954:23562   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22830:23562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23568:24312   */\n    tag_137:\n        /* \"#utility.yul\":23817:23821   */\n      0x00\n        /* \"#utility.yul\":23855:23857   */\n      0x60\n        /* \"#utility.yul\":23844:23853   */\n      dup3\n        /* \"#utility.yul\":23840:23858   */\n      add\n        /* \"#utility.yul\":23832:23858   */\n      swap1\n      pop\n        /* \"#utility.yul\":23904:23913   */\n      dup2\n        /* \"#utility.yul\":23898:23902   */\n      dup2\n        /* \"#utility.yul\":23894:23914   */\n      sub\n        /* \"#utility.yul\":23890:23891   */\n      0x00\n        /* \"#utility.yul\":23879:23888   */\n      dup4\n        /* \"#utility.yul\":23875:23892   */\n      add\n        /* \"#utility.yul\":23868:23915   */\n      mstore\n        /* \"#utility.yul\":23932:24040   */\n      tag_592\n        /* \"#utility.yul\":24035:24039   */\n      dup2\n        /* \"#utility.yul\":24026:24032   */\n      dup7\n        /* \"#utility.yul\":23932:24040   */\n      tag_319\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":23924:24040   */\n      swap1\n      pop\n        /* \"#utility.yul\":24087:24096   */\n      dup2\n        /* \"#utility.yul\":24081:24085   */\n      dup2\n        /* \"#utility.yul\":24077:24097   */\n      sub\n        /* \"#utility.yul\":24072:24074   */\n      0x20\n        /* \"#utility.yul\":24061:24070   */\n      dup4\n        /* \"#utility.yul\":24057:24075   */\n      add\n        /* \"#utility.yul\":24050:24098   */\n      mstore\n        /* \"#utility.yul\":24115:24223   */\n      tag_593\n        /* \"#utility.yul\":24218:24222   */\n      dup2\n        /* \"#utility.yul\":24209:24215   */\n      dup6\n        /* \"#utility.yul\":24115:24223   */\n      tag_325\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":24107:24223   */\n      swap1\n      pop\n        /* \"#utility.yul\":24233:24305   */\n      tag_594\n        /* \"#utility.yul\":24301:24303   */\n      0x40\n        /* \"#utility.yul\":24290:24299   */\n      dup4\n        /* \"#utility.yul\":24286:24304   */\n      add\n        /* \"#utility.yul\":24277:24283   */\n      dup5\n        /* \"#utility.yul\":24233:24305   */\n      tag_285\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":23568:24312   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24318:24498   */\n    tag_159:\n        /* \"#utility.yul\":24366:24443   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24363:24364   */\n      0x00\n        /* \"#utility.yul\":24356:24444   */\n      mstore\n        /* \"#utility.yul\":24463:24467   */\n      0x32\n        /* \"#utility.yul\":24460:24461   */\n      0x04\n        /* \"#utility.yul\":24453:24468   */\n      mstore\n        /* \"#utility.yul\":24487:24491   */\n      0x24\n        /* \"#utility.yul\":24484:24485   */\n      0x00\n        /* \"#utility.yul\":24477:24492   */\n      revert\n        /* \"#utility.yul\":24504:24602   */\n    tag_326:\n        /* \"#utility.yul\":24555:24561   */\n      0x00\n        /* \"#utility.yul\":24589:24594   */\n      dup2\n        /* \"#utility.yul\":24583:24595   */\n      mload\n        /* \"#utility.yul\":24573:24595   */\n      swap1\n      pop\n        /* \"#utility.yul\":24504:24602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24608:24776   */\n    tag_327:\n        /* \"#utility.yul\":24691:24702   */\n      0x00\n        /* \"#utility.yul\":24725:24731   */\n      dup3\n        /* \"#utility.yul\":24720:24723   */\n      dup3\n        /* \"#utility.yul\":24713:24732   */\n      mstore\n        /* \"#utility.yul\":24765:24769   */\n      0x20\n        /* \"#utility.yul\":24760:24763   */\n      dup3\n        /* \"#utility.yul\":24756:24770   */\n      add\n        /* \"#utility.yul\":24741:24770   */\n      swap1\n      pop\n        /* \"#utility.yul\":24608:24776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24782:25028   */\n    tag_328:\n        /* \"#utility.yul\":24863:24864   */\n      0x00\n        /* \"#utility.yul\":24873:24986   */\n    tag_599:\n        /* \"#utility.yul\":24887:24893   */\n      dup4\n        /* \"#utility.yul\":24884:24885   */\n      dup2\n        /* \"#utility.yul\":24881:24894   */\n      lt\n        /* \"#utility.yul\":24873:24986   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":24972:24973   */\n      dup1\n        /* \"#utility.yul\":24967:24970   */\n      dup3\n        /* \"#utility.yul\":24963:24974   */\n      add\n        /* \"#utility.yul\":24957:24975   */\n      mload\n        /* \"#utility.yul\":24953:24954   */\n      dup2\n        /* \"#utility.yul\":24948:24951   */\n      dup5\n        /* \"#utility.yul\":24944:24955   */\n      add\n        /* \"#utility.yul\":24937:24976   */\n      mstore\n        /* \"#utility.yul\":24909:24911   */\n      0x20\n        /* \"#utility.yul\":24906:24907   */\n      dup2\n        /* \"#utility.yul\":24902:24912   */\n      add\n        /* \"#utility.yul\":24897:24912   */\n      swap1\n      pop\n        /* \"#utility.yul\":24873:24986   */\n      jump(tag_599)\n    tag_601:\n        /* \"#utility.yul\":25020:25021   */\n      0x00\n        /* \"#utility.yul\":25011:25017   */\n      dup5\n        /* \"#utility.yul\":25006:25009   */\n      dup5\n        /* \"#utility.yul\":25002:25018   */\n      add\n        /* \"#utility.yul\":24995:25022   */\n      mstore\n        /* \"#utility.yul\":24844:25028   */\n      pop\n        /* \"#utility.yul\":24782:25028   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25034:25407   */\n    tag_329:\n        /* \"#utility.yul\":25120:25123   */\n      0x00\n        /* \"#utility.yul\":25148:25186   */\n      tag_603\n        /* \"#utility.yul\":25180:25185   */\n      dup3\n        /* \"#utility.yul\":25148:25186   */\n      tag_326\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":25202:25272   */\n      tag_604\n        /* \"#utility.yul\":25265:25271   */\n      dup2\n        /* \"#utility.yul\":25260:25263   */\n      dup6\n        /* \"#utility.yul\":25202:25272   */\n      tag_327\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":25195:25272   */\n      swap4\n      pop\n        /* \"#utility.yul\":25281:25346   */\n      tag_605\n        /* \"#utility.yul\":25339:25345   */\n      dup2\n        /* \"#utility.yul\":25334:25337   */\n      dup6\n        /* \"#utility.yul\":25327:25331   */\n      0x20\n        /* \"#utility.yul\":25320:25325   */\n      dup7\n        /* \"#utility.yul\":25316:25332   */\n      add\n        /* \"#utility.yul\":25281:25346   */\n      tag_328\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":25371:25400   */\n      tag_606\n        /* \"#utility.yul\":25393:25399   */\n      dup2\n        /* \"#utility.yul\":25371:25400   */\n      tag_264\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":25366:25369   */\n      dup5\n        /* \"#utility.yul\":25362:25401   */\n      add\n        /* \"#utility.yul\":25355:25401   */\n      swap2\n      pop\n        /* \"#utility.yul\":25124:25407   */\n      pop\n        /* \"#utility.yul\":25034:25407   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25413:25832   */\n    tag_180:\n        /* \"#utility.yul\":25552:25556   */\n      0x00\n        /* \"#utility.yul\":25590:25592   */\n      0x40\n        /* \"#utility.yul\":25579:25588   */\n      dup3\n        /* \"#utility.yul\":25575:25593   */\n      add\n        /* \"#utility.yul\":25567:25593   */\n      swap1\n      pop\n        /* \"#utility.yul\":25603:25674   */\n      tag_608\n        /* \"#utility.yul\":25671:25672   */\n      0x00\n        /* \"#utility.yul\":25660:25669   */\n      dup4\n        /* \"#utility.yul\":25656:25673   */\n      add\n        /* \"#utility.yul\":25647:25653   */\n      dup6\n        /* \"#utility.yul\":25603:25674   */\n      tag_287\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":25721:25730   */\n      dup2\n        /* \"#utility.yul\":25715:25719   */\n      dup2\n        /* \"#utility.yul\":25711:25731   */\n      sub\n        /* \"#utility.yul\":25706:25708   */\n      0x20\n        /* \"#utility.yul\":25695:25704   */\n      dup4\n        /* \"#utility.yul\":25691:25709   */\n      add\n        /* \"#utility.yul\":25684:25732   */\n      mstore\n        /* \"#utility.yul\":25749:25825   */\n      tag_609\n        /* \"#utility.yul\":25820:25824   */\n      dup2\n        /* \"#utility.yul\":25811:25817   */\n      dup5\n        /* \"#utility.yul\":25749:25825   */\n      tag_329\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":25741:25825   */\n      swap1\n      pop\n        /* \"#utility.yul\":25413:25832   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25838:26018   */\n    tag_330:\n        /* \"#utility.yul\":25886:25963   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25883:25884   */\n      0x00\n        /* \"#utility.yul\":25876:25964   */\n      mstore\n        /* \"#utility.yul\":25983:25987   */\n      0x11\n        /* \"#utility.yul\":25980:25981   */\n      0x04\n        /* \"#utility.yul\":25973:25988   */\n      mstore\n        /* \"#utility.yul\":26007:26011   */\n      0x24\n        /* \"#utility.yul\":26004:26005   */\n      0x00\n        /* \"#utility.yul\":25997:26012   */\n      revert\n        /* \"#utility.yul\":26024:26215   */\n    tag_197:\n        /* \"#utility.yul\":26064:26067   */\n      0x00\n        /* \"#utility.yul\":26083:26103   */\n      tag_612\n        /* \"#utility.yul\":26101:26102   */\n      dup3\n        /* \"#utility.yul\":26083:26103   */\n      tag_286\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":26078:26103   */\n      swap2\n      pop\n        /* \"#utility.yul\":26117:26137   */\n      tag_613\n        /* \"#utility.yul\":26135:26136   */\n      dup4\n        /* \"#utility.yul\":26117:26137   */\n      tag_286\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":26112:26137   */\n      swap3\n      pop\n        /* \"#utility.yul\":26160:26161   */\n      dup3\n        /* \"#utility.yul\":26157:26158   */\n      dup3\n        /* \"#utility.yul\":26153:26162   */\n      add\n        /* \"#utility.yul\":26146:26162   */\n      swap1\n      pop\n        /* \"#utility.yul\":26181:26184   */\n      dup1\n        /* \"#utility.yul\":26178:26179   */\n      dup3\n        /* \"#utility.yul\":26175:26185   */\n      gt\n        /* \"#utility.yul\":26172:26208   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":26188:26206   */\n      tag_615\n      tag_330\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":26172:26208   */\n    tag_614:\n        /* \"#utility.yul\":26024:26215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26221:26553   */\n    tag_212:\n        /* \"#utility.yul\":26342:26346   */\n      0x00\n        /* \"#utility.yul\":26380:26382   */\n      0x40\n        /* \"#utility.yul\":26369:26378   */\n      dup3\n        /* \"#utility.yul\":26365:26383   */\n      add\n        /* \"#utility.yul\":26357:26383   */\n      swap1\n      pop\n        /* \"#utility.yul\":26393:26464   */\n      tag_617\n        /* \"#utility.yul\":26461:26462   */\n      0x00\n        /* \"#utility.yul\":26450:26459   */\n      dup4\n        /* \"#utility.yul\":26446:26463   */\n      add\n        /* \"#utility.yul\":26437:26443   */\n      dup6\n        /* \"#utility.yul\":26393:26464   */\n      tag_287\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":26474:26546   */\n      tag_618\n        /* \"#utility.yul\":26542:26544   */\n      0x20\n        /* \"#utility.yul\":26531:26540   */\n      dup4\n        /* \"#utility.yul\":26527:26545   */\n      add\n        /* \"#utility.yul\":26518:26524   */\n      dup5\n        /* \"#utility.yul\":26474:26546   */\n      tag_285\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":26221:26553   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26559:26675   */\n    tag_331:\n        /* \"#utility.yul\":26629:26650   */\n      tag_620\n        /* \"#utility.yul\":26644:26649   */\n      dup2\n        /* \"#utility.yul\":26629:26650   */\n      tag_295\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":26622:26627   */\n      dup2\n        /* \"#utility.yul\":26619:26651   */\n      eq\n        /* \"#utility.yul\":26609:26669   */\n      tag_621\n      jumpi\n        /* \"#utility.yul\":26665:26666   */\n      0x00\n        /* \"#utility.yul\":26662:26663   */\n      dup1\n        /* \"#utility.yul\":26655:26667   */\n      revert\n        /* \"#utility.yul\":26609:26669   */\n    tag_621:\n        /* \"#utility.yul\":26559:26675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26681:26818   */\n    tag_332:\n        /* \"#utility.yul\":26735:26740   */\n      0x00\n        /* \"#utility.yul\":26766:26772   */\n      dup2\n        /* \"#utility.yul\":26760:26773   */\n      mload\n        /* \"#utility.yul\":26751:26773   */\n      swap1\n      pop\n        /* \"#utility.yul\":26782:26812   */\n      tag_623\n        /* \"#utility.yul\":26806:26811   */\n      dup2\n        /* \"#utility.yul\":26782:26812   */\n      tag_331\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":26681:26818   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26824:27169   */\n    tag_216:\n        /* \"#utility.yul\":26891:26897   */\n      0x00\n        /* \"#utility.yul\":26940:26942   */\n      0x20\n        /* \"#utility.yul\":26928:26937   */\n      dup3\n        /* \"#utility.yul\":26919:26926   */\n      dup5\n        /* \"#utility.yul\":26915:26938   */\n      sub\n        /* \"#utility.yul\":26911:26943   */\n      slt\n        /* \"#utility.yul\":26908:27027   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":26946:27025   */\n      tag_626\n      tag_261\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":26908:27027   */\n    tag_625:\n        /* \"#utility.yul\":27066:27067   */\n      0x00\n        /* \"#utility.yul\":27091:27152   */\n      tag_627\n        /* \"#utility.yul\":27144:27151   */\n      dup5\n        /* \"#utility.yul\":27135:27141   */\n      dup3\n        /* \"#utility.yul\":27124:27133   */\n      dup6\n        /* \"#utility.yul\":27120:27142   */\n      add\n        /* \"#utility.yul\":27091:27152   */\n      tag_332\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":27081:27152   */\n      swap2\n      pop\n        /* \"#utility.yul\":27037:27162   */\n      pop\n        /* \"#utility.yul\":26824:27169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27175:27318   */\n    tag_333:\n        /* \"#utility.yul\":27232:27237   */\n      0x00\n        /* \"#utility.yul\":27263:27269   */\n      dup2\n        /* \"#utility.yul\":27257:27270   */\n      mload\n        /* \"#utility.yul\":27248:27270   */\n      swap1\n      pop\n        /* \"#utility.yul\":27279:27312   */\n      tag_629\n        /* \"#utility.yul\":27306:27311   */\n      dup2\n        /* \"#utility.yul\":27279:27312   */\n      tag_271\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":27175:27318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27341:28073   */\n    tag_334:\n        /* \"#utility.yul\":27448:27453   */\n      0x00\n        /* \"#utility.yul\":27473:27554   */\n      tag_631\n        /* \"#utility.yul\":27489:27553   */\n      tag_632\n        /* \"#utility.yul\":27546:27552   */\n      dup5\n        /* \"#utility.yul\":27489:27553   */\n      tag_267\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":27473:27554   */\n      tag_266\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":27464:27554   */\n      swap1\n      pop\n        /* \"#utility.yul\":27574:27579   */\n      dup1\n        /* \"#utility.yul\":27603:27609   */\n      dup4\n        /* \"#utility.yul\":27596:27601   */\n      dup3\n        /* \"#utility.yul\":27589:27610   */\n      mstore\n        /* \"#utility.yul\":27637:27641   */\n      0x20\n        /* \"#utility.yul\":27630:27635   */\n      dup3\n        /* \"#utility.yul\":27626:27642   */\n      add\n        /* \"#utility.yul\":27619:27642   */\n      swap1\n      pop\n        /* \"#utility.yul\":27690:27694   */\n      0x20\n        /* \"#utility.yul\":27682:27688   */\n      dup5\n        /* \"#utility.yul\":27678:27695   */\n      mul\n        /* \"#utility.yul\":27670:27676   */\n      dup4\n        /* \"#utility.yul\":27666:27696   */\n      add\n        /* \"#utility.yul\":27719:27722   */\n      dup6\n        /* \"#utility.yul\":27711:27717   */\n      dup2\n        /* \"#utility.yul\":27708:27723   */\n      gt\n        /* \"#utility.yul\":27705:27827   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":27738:27817   */\n      tag_634\n      tag_268\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":27705:27827   */\n    tag_633:\n        /* \"#utility.yul\":27853:27859   */\n      dup4\n        /* \"#utility.yul\":27836:28067   */\n    tag_635:\n        /* \"#utility.yul\":27870:27876   */\n      dup2\n        /* \"#utility.yul\":27865:27868   */\n      dup2\n        /* \"#utility.yul\":27862:27877   */\n      lt\n        /* \"#utility.yul\":27836:28067   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":27945:27948   */\n      dup1\n        /* \"#utility.yul\":27974:28022   */\n      tag_638\n        /* \"#utility.yul\":28018:28021   */\n      dup9\n        /* \"#utility.yul\":28006:28016   */\n      dup3\n        /* \"#utility.yul\":27974:28022   */\n      tag_333\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":27969:27972   */\n      dup5\n        /* \"#utility.yul\":27962:28023   */\n      mstore\n        /* \"#utility.yul\":28052:28056   */\n      0x20\n        /* \"#utility.yul\":28047:28050   */\n      dup5\n        /* \"#utility.yul\":28043:28057   */\n      add\n        /* \"#utility.yul\":28036:28057   */\n      swap4\n      pop\n        /* \"#utility.yul\":27912:28067   */\n      pop\n        /* \"#utility.yul\":27896:27900   */\n      0x20\n        /* \"#utility.yul\":27891:27894   */\n      dup2\n        /* \"#utility.yul\":27887:27901   */\n      add\n        /* \"#utility.yul\":27880:27901   */\n      swap1\n      pop\n        /* \"#utility.yul\":27836:28067   */\n      jump(tag_635)\n    tag_637:\n        /* \"#utility.yul\":27840:27861   */\n      pop\n        /* \"#utility.yul\":27454:28073   */\n      pop\n      pop\n        /* \"#utility.yul\":27341:28073   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28096:28481   */\n    tag_335:\n        /* \"#utility.yul\":28178:28183   */\n      0x00\n        /* \"#utility.yul\":28227:28230   */\n      dup3\n        /* \"#utility.yul\":28220:28224   */\n      0x1f\n        /* \"#utility.yul\":28212:28218   */\n      dup4\n        /* \"#utility.yul\":28208:28225   */\n      add\n        /* \"#utility.yul\":28204:28231   */\n      slt\n        /* \"#utility.yul\":28194:28316   */\n      tag_640\n      jumpi\n        /* \"#utility.yul\":28235:28314   */\n      tag_641\n      tag_263\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":28194:28316   */\n    tag_640:\n        /* \"#utility.yul\":28345:28351   */\n      dup2\n        /* \"#utility.yul\":28339:28352   */\n      mload\n        /* \"#utility.yul\":28370:28475   */\n      tag_642\n        /* \"#utility.yul\":28471:28474   */\n      dup5\n        /* \"#utility.yul\":28463:28469   */\n      dup3\n        /* \"#utility.yul\":28456:28460   */\n      0x20\n        /* \"#utility.yul\":28448:28454   */\n      dup7\n        /* \"#utility.yul\":28444:28461   */\n      add\n        /* \"#utility.yul\":28370:28475   */\n      tag_334\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":28361:28475   */\n      swap2\n      pop\n        /* \"#utility.yul\":28184:28481   */\n      pop\n        /* \"#utility.yul\":28096:28481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28487:28630   */\n    tag_336:\n        /* \"#utility.yul\":28544:28549   */\n      0x00\n        /* \"#utility.yul\":28575:28581   */\n      dup2\n        /* \"#utility.yul\":28569:28582   */\n      mload\n        /* \"#utility.yul\":28560:28582   */\n      swap1\n      pop\n        /* \"#utility.yul\":28591:28624   */\n      tag_644\n        /* \"#utility.yul\":28618:28623   */\n      dup2\n        /* \"#utility.yul\":28591:28624   */\n      tag_291\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":28487:28630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28653:29385   */\n    tag_337:\n        /* \"#utility.yul\":28760:28765   */\n      0x00\n        /* \"#utility.yul\":28785:28866   */\n      tag_646\n        /* \"#utility.yul\":28801:28865   */\n      tag_647\n        /* \"#utility.yul\":28858:28864   */\n      dup5\n        /* \"#utility.yul\":28801:28865   */\n      tag_290\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":28785:28866   */\n      tag_266\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":28776:28866   */\n      swap1\n      pop\n        /* \"#utility.yul\":28886:28891   */\n      dup1\n        /* \"#utility.yul\":28915:28921   */\n      dup4\n        /* \"#utility.yul\":28908:28913   */\n      dup3\n        /* \"#utility.yul\":28901:28922   */\n      mstore\n        /* \"#utility.yul\":28949:28953   */\n      0x20\n        /* \"#utility.yul\":28942:28947   */\n      dup3\n        /* \"#utility.yul\":28938:28954   */\n      add\n        /* \"#utility.yul\":28931:28954   */\n      swap1\n      pop\n        /* \"#utility.yul\":29002:29006   */\n      0x20\n        /* \"#utility.yul\":28994:29000   */\n      dup5\n        /* \"#utility.yul\":28990:29007   */\n      mul\n        /* \"#utility.yul\":28982:28988   */\n      dup4\n        /* \"#utility.yul\":28978:29008   */\n      add\n        /* \"#utility.yul\":29031:29034   */\n      dup6\n        /* \"#utility.yul\":29023:29029   */\n      dup2\n        /* \"#utility.yul\":29020:29035   */\n      gt\n        /* \"#utility.yul\":29017:29139   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":29050:29129   */\n      tag_649\n      tag_268\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":29017:29139   */\n    tag_648:\n        /* \"#utility.yul\":29165:29171   */\n      dup4\n        /* \"#utility.yul\":29148:29379   */\n    tag_650:\n        /* \"#utility.yul\":29182:29188   */\n      dup2\n        /* \"#utility.yul\":29177:29180   */\n      dup2\n        /* \"#utility.yul\":29174:29189   */\n      lt\n        /* \"#utility.yul\":29148:29379   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":29257:29260   */\n      dup1\n        /* \"#utility.yul\":29286:29334   */\n      tag_653\n        /* \"#utility.yul\":29330:29333   */\n      dup9\n        /* \"#utility.yul\":29318:29328   */\n      dup3\n        /* \"#utility.yul\":29286:29334   */\n      tag_336\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":29281:29284   */\n      dup5\n        /* \"#utility.yul\":29274:29335   */\n      mstore\n        /* \"#utility.yul\":29364:29368   */\n      0x20\n        /* \"#utility.yul\":29359:29362   */\n      dup5\n        /* \"#utility.yul\":29355:29369   */\n      add\n        /* \"#utility.yul\":29348:29369   */\n      swap4\n      pop\n        /* \"#utility.yul\":29224:29379   */\n      pop\n        /* \"#utility.yul\":29208:29212   */\n      0x20\n        /* \"#utility.yul\":29203:29206   */\n      dup2\n        /* \"#utility.yul\":29199:29213   */\n      add\n        /* \"#utility.yul\":29192:29213   */\n      swap1\n      pop\n        /* \"#utility.yul\":29148:29379   */\n      jump(tag_650)\n    tag_652:\n        /* \"#utility.yul\":29152:29173   */\n      pop\n        /* \"#utility.yul\":28766:29385   */\n      pop\n      pop\n        /* \"#utility.yul\":28653:29385   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29408:29793   */\n    tag_338:\n        /* \"#utility.yul\":29490:29495   */\n      0x00\n        /* \"#utility.yul\":29539:29542   */\n      dup3\n        /* \"#utility.yul\":29532:29536   */\n      0x1f\n        /* \"#utility.yul\":29524:29530   */\n      dup4\n        /* \"#utility.yul\":29520:29537   */\n      add\n        /* \"#utility.yul\":29516:29543   */\n      slt\n        /* \"#utility.yul\":29506:29628   */\n      tag_655\n      jumpi\n        /* \"#utility.yul\":29547:29626   */\n      tag_656\n      tag_263\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":29506:29628   */\n    tag_655:\n        /* \"#utility.yul\":29657:29663   */\n      dup2\n        /* \"#utility.yul\":29651:29664   */\n      mload\n        /* \"#utility.yul\":29682:29787   */\n      tag_657\n        /* \"#utility.yul\":29783:29786   */\n      dup5\n        /* \"#utility.yul\":29775:29781   */\n      dup3\n        /* \"#utility.yul\":29768:29772   */\n      0x20\n        /* \"#utility.yul\":29760:29766   */\n      dup7\n        /* \"#utility.yul\":29756:29773   */\n      add\n        /* \"#utility.yul\":29682:29787   */\n      tag_337\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":29673:29787   */\n      swap2\n      pop\n        /* \"#utility.yul\":29496:29793   */\n      pop\n        /* \"#utility.yul\":29408:29793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29799:29903   */\n    tag_339:\n        /* \"#utility.yul\":29844:29851   */\n      0x00\n        /* \"#utility.yul\":29873:29897   */\n      tag_659\n        /* \"#utility.yul\":29891:29896   */\n      dup3\n        /* \"#utility.yul\":29873:29897   */\n      tag_269\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":29862:29897   */\n      swap1\n      pop\n        /* \"#utility.yul\":29799:29903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29909:30047   */\n    tag_340:\n        /* \"#utility.yul\":29990:30022   */\n      tag_661\n        /* \"#utility.yul\":30016:30021   */\n      dup2\n        /* \"#utility.yul\":29990:30022   */\n      tag_339\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":29983:29988   */\n      dup2\n        /* \"#utility.yul\":29980:30023   */\n      eq\n        /* \"#utility.yul\":29970:30041   */\n      tag_662\n      jumpi\n        /* \"#utility.yul\":30037:30038   */\n      0x00\n        /* \"#utility.yul\":30034:30035   */\n      dup1\n        /* \"#utility.yul\":30027:30039   */\n      revert\n        /* \"#utility.yul\":29970:30041   */\n    tag_662:\n        /* \"#utility.yul\":29909:30047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30053:30212   */\n    tag_341:\n        /* \"#utility.yul\":30118:30123   */\n      0x00\n        /* \"#utility.yul\":30149:30155   */\n      dup2\n        /* \"#utility.yul\":30143:30156   */\n      mload\n        /* \"#utility.yul\":30134:30156   */\n      swap1\n      pop\n        /* \"#utility.yul\":30165:30206   */\n      tag_664\n        /* \"#utility.yul\":30200:30205   */\n      dup2\n        /* \"#utility.yul\":30165:30206   */\n      tag_340\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":30053:30212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30218:31303   */\n    tag_222:\n        /* \"#utility.yul\":30364:30370   */\n      0x00\n        /* \"#utility.yul\":30372:30378   */\n      dup1\n        /* \"#utility.yul\":30380:30386   */\n      0x00\n        /* \"#utility.yul\":30429:30431   */\n      0x60\n        /* \"#utility.yul\":30417:30426   */\n      dup5\n        /* \"#utility.yul\":30408:30415   */\n      dup7\n        /* \"#utility.yul\":30404:30427   */\n      sub\n        /* \"#utility.yul\":30400:30432   */\n      slt\n        /* \"#utility.yul\":30397:30516   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":30435:30514   */\n      tag_667\n      tag_261\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":30397:30516   */\n    tag_666:\n        /* \"#utility.yul\":30576:30577   */\n      0x00\n        /* \"#utility.yul\":30565:30574   */\n      dup5\n        /* \"#utility.yul\":30561:30578   */\n      add\n        /* \"#utility.yul\":30555:30579   */\n      mload\n        /* \"#utility.yul\":30606:30624   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30598:30604   */\n      dup2\n        /* \"#utility.yul\":30595:30625   */\n      gt\n        /* \"#utility.yul\":30592:30709   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":30628:30707   */\n      tag_669\n      tag_262\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":30592:30709   */\n    tag_668:\n        /* \"#utility.yul\":30733:30822   */\n      tag_670\n        /* \"#utility.yul\":30814:30821   */\n      dup7\n        /* \"#utility.yul\":30805:30811   */\n      dup3\n        /* \"#utility.yul\":30794:30803   */\n      dup8\n        /* \"#utility.yul\":30790:30812   */\n      add\n        /* \"#utility.yul\":30733:30822   */\n      tag_335\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":30723:30822   */\n      swap4\n      pop\n        /* \"#utility.yul\":30526:30832   */\n      pop\n        /* \"#utility.yul\":30892:30894   */\n      0x20\n        /* \"#utility.yul\":30881:30890   */\n      dup5\n        /* \"#utility.yul\":30877:30895   */\n      add\n        /* \"#utility.yul\":30871:30896   */\n      mload\n        /* \"#utility.yul\":30923:30941   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":30915:30921   */\n      dup2\n        /* \"#utility.yul\":30912:30942   */\n      gt\n        /* \"#utility.yul\":30909:31026   */\n      iszero\n      tag_671\n      jumpi\n        /* \"#utility.yul\":30945:31024   */\n      tag_672\n      tag_262\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":30909:31026   */\n    tag_671:\n        /* \"#utility.yul\":31050:31139   */\n      tag_673\n        /* \"#utility.yul\":31131:31138   */\n      dup7\n        /* \"#utility.yul\":31122:31128   */\n      dup3\n        /* \"#utility.yul\":31111:31120   */\n      dup8\n        /* \"#utility.yul\":31107:31129   */\n      add\n        /* \"#utility.yul\":31050:31139   */\n      tag_338\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":31040:31139   */\n      swap3\n      pop\n        /* \"#utility.yul\":30842:31149   */\n      pop\n        /* \"#utility.yul\":31188:31190   */\n      0x40\n        /* \"#utility.yul\":31214:31286   */\n      tag_674\n        /* \"#utility.yul\":31278:31285   */\n      dup7\n        /* \"#utility.yul\":31269:31275   */\n      dup3\n        /* \"#utility.yul\":31258:31267   */\n      dup8\n        /* \"#utility.yul\":31254:31276   */\n      add\n        /* \"#utility.yul\":31214:31286   */\n      tag_341\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":31204:31286   */\n      swap2\n      pop\n        /* \"#utility.yul\":31159:31296   */\n      pop\n        /* \"#utility.yul\":30218:31303   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":31309:31751   */\n    tag_234:\n        /* \"#utility.yul\":31458:31462   */\n      0x00\n        /* \"#utility.yul\":31496:31498   */\n      0x60\n        /* \"#utility.yul\":31485:31494   */\n      dup3\n        /* \"#utility.yul\":31481:31499   */\n      add\n        /* \"#utility.yul\":31473:31499   */\n      swap1\n      pop\n        /* \"#utility.yul\":31509:31580   */\n      tag_676\n        /* \"#utility.yul\":31577:31578   */\n      0x00\n        /* \"#utility.yul\":31566:31575   */\n      dup4\n        /* \"#utility.yul\":31562:31579   */\n      add\n        /* \"#utility.yul\":31553:31559   */\n      dup7\n        /* \"#utility.yul\":31509:31580   */\n      tag_287\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":31590:31662   */\n      tag_677\n        /* \"#utility.yul\":31658:31660   */\n      0x20\n        /* \"#utility.yul\":31647:31656   */\n      dup4\n        /* \"#utility.yul\":31643:31661   */\n      add\n        /* \"#utility.yul\":31634:31640   */\n      dup6\n        /* \"#utility.yul\":31590:31662   */\n      tag_285\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":31672:31744   */\n      tag_678\n        /* \"#utility.yul\":31740:31742   */\n      0x40\n        /* \"#utility.yul\":31729:31738   */\n      dup4\n        /* \"#utility.yul\":31725:31743   */\n      add\n        /* \"#utility.yul\":31716:31722   */\n      dup5\n        /* \"#utility.yul\":31672:31744   */\n      tag_285\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":31309:31751   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207693d36b316bd35c3cbbbfd1e310897b7db4b795ff1cb46ca437ff959206ab4964736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1088": {
									"entryPoint": null,
									"id": 1088,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1826": {
									"entryPoint": null,
									"id": 1826,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2541:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:10"
															},
															"nodeType": "YulIf",
															"src": "932:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:10",
														"type": ""
													}
												],
												"src": "845:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1272:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:10",
														"type": ""
													}
												],
												"src": "1202:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1403:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1420:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1425:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1413:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1413:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1441:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1460:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1465:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1441:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1375:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1380:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1391:11:10",
														"type": ""
													}
												],
												"src": "1307:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1544:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1554:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1563:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1558:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1623:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1648:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1653:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1644:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1644:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1667:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1672:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1663:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1663:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1657:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1657:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1637:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1584:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1587:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1581:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1581:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1595:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1597:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1606:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1609:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1602:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1602:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1597:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1577:3:10",
																"statements": []
															},
															"src": "1573:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1706:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1702:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1702:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1695:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1526:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1531:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1536:6:10",
														"type": ""
													}
												],
												"src": "1482:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1792:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1810:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1817:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1806:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1806:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1826:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1765:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1775:6:10",
														"type": ""
													}
												],
												"src": "1734:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1934:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1944:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1991:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1958:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1948:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2006:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2072:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2077:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2013:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2006:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2132:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2139:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2128:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2128:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2146:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2151:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2093:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2093:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2167:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2178:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2183:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2167:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1915:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1922:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1930:3:10",
														"type": ""
													}
												],
												"src": "1842:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2343:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2353:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2365:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2376:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2361:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2353:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2400:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2411:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2396:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2419:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2425:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2415:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2389:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2389:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2445:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2517:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2526:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2453:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2453:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2445:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2315:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2327:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2338:4:10",
														"type": ""
													}
												],
												"src": "2225:313:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F72 CODESIZE SUB DUP1 PUSH3 0x1F72 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x145 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5965657465722053747261746567790000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP POP POP POP PUSH3 0x235 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10D DUP3 PUSH3 0xE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x11F DUP2 PUSH3 0x100 JUMP JUMPDEST DUP2 EQ PUSH3 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x13F DUP2 PUSH3 0x114 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x15E JUMPI PUSH3 0x15D PUSH3 0xDB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x16E DUP5 DUP3 DUP6 ADD PUSH3 0x12E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1B3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x196 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DD DUP3 PUSH3 0x177 JUMP JUMPDEST PUSH3 0x1E9 DUP2 DUP6 PUSH3 0x182 JUMP JUMPDEST SWAP4 POP PUSH3 0x1FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x193 JUMP JUMPDEST PUSH3 0x206 DUP2 PUSH3 0x1BF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x22D DUP2 DUP5 PUSH3 0x1D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1D09 PUSH3 0x269 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x479 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x40F ADD MSTORE DUP2 DUP2 PUSH2 0x71A ADD MSTORE PUSH2 0x857 ADD MSTORE PUSH2 0x1D09 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEB11AF93 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xEB11AF93 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xEDD146CC EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xEF2920FC EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF5B0DFB7 EQ PUSH2 0x3AC JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xA0CF0AEA EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB2B878D0 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xDF868ED3 EQ PUSH2 0x2FF JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x42FDA9C7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x42FDA9C7 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x44469F98 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x4AB4BA42 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x4D31D087 EQ PUSH2 0x231 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xA6F0EE9 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x15CC481E EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x2BBE0CAE EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x187 JUMPI PUSH2 0xFE JUMP JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21B PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH2 0x718 JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x3F0 DUP4 DUP4 DUP4 PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x406 DUP4 DUP4 DUP4 PUSH2 0x814 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43D PUSH2 0x718 JUMP JUMPDEST PUSH2 0x445 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x44F DUP4 DUP4 PUSH2 0x819 JUMP JUMPDEST PUSH2 0x459 DUP4 DUP4 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP PUSH2 0x465 DUP4 DUP4 PUSH2 0x851 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x4A7 DUP2 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x4D9 DUP2 CALLER PUSH2 0x92C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 MLOAD SWAP1 POP DUP3 MLOAD DUP2 EQ PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7B49805600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x572 JUMPI PUSH2 0x571 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5AB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x598 PUSH2 0xCB0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x590 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x622 JUMPI PUSH2 0x5F7 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5CF JUMPI PUSH2 0x5CE PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xAC0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60A JUMPI PUSH2 0x609 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5B1 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x638 DUP2 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x643 DUP5 DUP5 DUP5 PUSH2 0xAFA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x653 PUSH2 0xB61 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x673 DUP3 PUSH2 0xBAB JUMP JUMPDEST PUSH32 0x91EFA3D50FECCDE0D0D202F8AE5C41CA0B2BE614CEBCB2BD2F4B019396E6568A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6C0 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x6CA DUP3 DUP3 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x6D4 DUP3 DUP3 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x6DE DUP3 DUP3 PUSH2 0xC37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6EA PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0xC3B JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x19C5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x715 DUP2 PUSH2 0xC3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0x75FD2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DA3F98C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29E40D4B PUSH1 0x1 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP3 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH32 0x75FD2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH2 0x936 DUP2 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB76571500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP2 EQ PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB76571500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA82 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9EF JUMPI PUSH2 0x9EE PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xA23 DUP6 DUP3 DUP5 PUSH2 0xAFA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x463FFC2CF8B1596445C417388ED30E53EB67CF6668CB2BE7F0ADDF8A78C8441B DUP4 DUP8 DUP13 PUSH1 0x40 MLOAD PUSH2 0xA6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0x9D2 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC8 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB50 JUMPI PUSH2 0xB4B DUP3 DUP3 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0xB5C JUMP JUMPDEST PUSH2 0xB5B DUP4 DUP4 DUP4 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB3 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD EQ PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x439A74C900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7FCCE2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP7 GAS CALL PUSH2 0xC5D JUMPI PUSH4 0xB12D13EB PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH1 0x14 MSTORE DUP1 PUSH1 0x34 MSTORE PUSH16 0xA9059CBB000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 PUSH1 0x44 PUSH1 0x10 PUSH1 0x0 DUP8 GAS CALL RETURNDATASIZE ISZERO PUSH1 0x1 PUSH1 0x0 MLOAD EQ OR AND PUSH2 0xCA6 JUMPI PUSH4 0x90B8EC18 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x0 PUSH1 0x34 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD42 DUP3 PUSH2 0xCF9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD61 JUMPI PUSH2 0xD60 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD74 PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP PUSH2 0xD80 DUP3 DUP3 PUSH2 0xD39 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xDA0 JUMPI PUSH2 0xD9F PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE1 DUP3 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDD6 JUMP JUMPDEST DUP2 EQ PUSH2 0xDFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0E DUP2 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE27 PUSH2 0xE22 DUP5 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE73 JUMPI DUP1 PUSH2 0xE5F DUP9 DUP3 PUSH2 0xDFF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE4C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE92 JUMPI PUSH2 0xE91 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xECB JUMPI PUSH2 0xECA PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH2 0xED4 DUP3 PUSH2 0xCF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF03 PUSH2 0xEFE DUP5 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xEAB JUMP JUMPDEST JUMPDEST PUSH2 0xF2A DUP5 DUP3 DUP6 PUSH2 0xEE1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF47 JUMPI PUSH2 0xF46 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF57 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xEF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF78 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF97 JUMPI PUSH2 0xF96 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0xFA3 DUP7 DUP3 DUP8 ADD PUSH2 0xE7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC4 JUMPI PUSH2 0xFC3 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0xFD0 DUP7 DUP3 DUP8 ADD PUSH2 0xF32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFE1 DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1010 PUSH2 0x100B PUSH2 0x1006 DUP5 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0xFEB JUMP JUMPDEST PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1022 DUP3 PUSH2 0xFF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1034 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1044 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x105F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107C JUMPI PUSH2 0x107B PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109A JUMPI PUSH2 0x1099 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x10A6 DUP6 DUP3 DUP7 ADD PUSH2 0xF32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10B7 DUP6 DUP3 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CA DUP2 PUSH2 0xDD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FE DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1132 DUP2 PUSH2 0x111F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x116E JUMPI PUSH2 0x116D PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1188 DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A5 DUP2 PUSH2 0x117F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BE PUSH2 0x11B9 DUP5 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x120A JUMPI DUP1 PUSH2 0x11F6 DUP9 DUP3 PUSH2 0x1196 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11E3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1229 JUMPI PUSH2 0x1228 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1239 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125B JUMPI PUSH2 0x125A PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1279 JUMPI PUSH2 0x1278 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x1285 DUP7 DUP3 DUP8 ADD PUSH2 0xE7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12A6 JUMPI PUSH2 0x12A5 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x12B2 DUP7 DUP3 DUP8 ADD PUSH2 0x1214 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12C3 DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E3 JUMPI PUSH2 0x12E2 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F1 DUP5 DUP3 DUP6 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130F DUP2 PUSH2 0x12FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136F PUSH2 0x136A DUP5 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13D9 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B7 JUMPI PUSH2 0x13B6 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x13C4 DUP10 DUP3 PUSH2 0xF32 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1394 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1408 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x135C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1428 JUMPI PUSH2 0x1427 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1446 JUMPI PUSH2 0x1445 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x1452 DUP6 DUP3 DUP7 ADD PUSH2 0xE7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1473 JUMPI PUSH2 0x1472 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x147F DUP6 DUP3 DUP7 ADD PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BE DUP2 PUSH2 0xDD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14CD DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x14E9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x14B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x14FC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x14C4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150E DUP4 DUP4 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1532 DUP3 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x153C DUP2 DUP6 PUSH2 0x1494 JUMP JUMPDEST SWAP4 POP PUSH2 0x1547 DUP4 PUSH2 0x14A5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1578 JUMPI DUP2 MLOAD PUSH2 0x155F DUP9 DUP3 PUSH2 0x1502 JUMP JUMPDEST SWAP8 POP PUSH2 0x156A DUP4 PUSH2 0x151A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x154B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159F DUP2 DUP5 PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15DF DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15F0 DUP7 DUP3 DUP8 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x15FA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x164B DUP3 PUSH2 0x1629 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165B DUP3 PUSH2 0x163D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166B DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1686 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1662 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH2 0x16D1 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x16DE DUP6 DUP3 DUP7 ADD PUSH2 0xF32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x170C DUP5 DUP3 DUP6 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174D DUP4 DUP4 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1771 DUP3 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x177B DUP2 DUP6 PUSH2 0x1720 JUMP JUMPDEST SWAP4 POP PUSH2 0x1786 DUP4 PUSH2 0x1731 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17B7 JUMPI DUP2 MLOAD PUSH2 0x179E DUP9 DUP3 PUSH2 0x1741 JUMP JUMPDEST SWAP8 POP PUSH2 0x17A9 DUP4 PUSH2 0x1759 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x178A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FC DUP4 DUP4 PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1820 DUP3 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x182A DUP2 DUP6 PUSH2 0x17CF JUMP JUMPDEST SWAP4 POP PUSH2 0x1835 DUP4 PUSH2 0x17E0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1866 JUMPI DUP2 MLOAD PUSH2 0x184D DUP9 DUP3 PUSH2 0x17F0 JUMP JUMPDEST SWAP8 POP PUSH2 0x1858 DUP4 PUSH2 0x1808 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1839 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x188D DUP2 DUP7 PUSH2 0x1766 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x18A1 DUP2 DUP6 PUSH2 0x1815 JUMP JUMPDEST SWAP1 POP PUSH2 0x18B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1921 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1938 DUP3 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x1942 DUP2 DUP6 PUSH2 0x18F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1952 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1903 JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0xCF9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x197B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10F5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x198D DUP2 DUP5 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19D0 DUP3 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0x19DB DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x1996 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A0E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x1A1B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A2B DUP2 PUSH2 0x12FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1A36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A48 DUP2 PUSH2 0x1A22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A72 DUP5 DUP3 DUP6 ADD PUSH2 0x1A39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8A DUP2 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA3 PUSH2 0x1A9E DUP5 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1AC6 JUMPI PUSH2 0x1AC5 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AEF JUMPI DUP1 PUSH2 0x1ADB DUP9 DUP3 PUSH2 0x1A7B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B0E JUMPI PUSH2 0x1B0D PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1B1E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B36 DUP2 PUSH2 0x117F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4F PUSH2 0x1B4A DUP5 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B9B JUMPI DUP1 PUSH2 0x1B87 DUP9 DUP3 PUSH2 0x1B27 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B74 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1BCA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE DUP3 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEE DUP2 PUSH2 0x1BD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C0B DUP2 PUSH2 0x1BE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x1C54 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x1C81 DUP7 DUP3 DUP8 ADD PUSH2 0x1BA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C92 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CB1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x1CBE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x1CCB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x93D36B316BD35C3CBBBFD1E310897B7DB4B795FF1CB46C LOG4 CALLDATACOPY SELFDESTRUCT SWAP6 SWAP3 MOD 0xAB 0x49 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "422:2847:9:-:0;;;522:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;562:5;5210:135:7;;;;;;;;;;;;;;;;;5281:5;5268:19;;;;;;;;;;5331:5;5320:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;5310:28;;;;;;5297:41;;;;;;5210:135;;522:68:9;422:2847;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:169::-;1391:11;1425:6;1420:3;1413:19;1465:4;1460:3;1456:14;1441:29;;1307:169;;;;:::o;1482:246::-;1563:1;1573:113;1587:6;1584:1;1581:13;1573:113;;;1672:1;1667:3;1663:11;1657:18;1653:1;1648:3;1644:11;1637:39;1609:2;1606:1;1602:10;1597:15;;1573:113;;;1720:1;1711:6;1706:3;1702:16;1695:27;1544:184;1482:246;;;:::o;1734:102::-;1775:6;1826:2;1822:7;1817:2;1810:5;1806:14;1802:28;1792:38;;1734:102;;;:::o;1842:377::-;1930:3;1958:39;1991:5;1958:39;:::i;:::-;2013:71;2077:6;2072:3;2013:71;:::i;:::-;2006:78;;2093:65;2151:6;2146:3;2139:4;2132:5;2128:16;2093:65;:::i;:::-;2183:29;2205:6;2183:29;:::i;:::-;2178:3;2174:39;2167:46;;1934:285;1842:377;;;;:::o;2225:313::-;2338:4;2376:2;2365:9;2361:18;2353:26;;2425:9;2419:4;2415:20;2411:1;2400:9;2396:17;2389:47;2453:78;2526:4;2517:6;2453:78;:::i;:::-;2445:86;;2225:313;;;;:::o;422:2847:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_826": {
									"entryPoint": 1276,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1869": {
									"entryPoint": null,
									"id": 1869,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__BaseStrategy_init_1224": {
									"entryPoint": 2987,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterAllocate_1619": {
									"entryPoint": 3127,
									"id": 1619,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterDistribute_1643": {
									"entryPoint": 2068,
									"id": 1643,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_afterIncreasePoolAmount_1583": {
									"entryPoint": 3134,
									"id": 1583,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterRegisterRecipient_1601": {
									"entryPoint": 2129,
									"id": 1601,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_allocate_1965": {
									"entryPoint": 2348,
									"id": 1965,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_beforeAllocate_1610": {
									"entryPoint": 3123,
									"id": 1610,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_beforeDistribute_1631": {
									"entryPoint": 2013,
									"id": 1631,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeIncreasePoolAmount_1576": {
									"entryPoint": 3131,
									"id": 1576,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_beforeRegisterRecipient_1592": {
									"entryPoint": 2073,
									"id": 1592,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOnlyAllo_1438": {
									"entryPoint": 1816,
									"id": 1438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOnlyInitialized_1488": {
									"entryPoint": 1951,
									"id": 1488,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOnlyPoolManager_1455": {
									"entryPoint": 2133,
									"id": 1455,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_distribute_2011": {
									"entryPoint": 2018,
									"id": 2011,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_getPayout_2065": {
									"entryPoint": 2752,
									"id": 2065,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getRecipientStatus_2024": {
									"entryPoint": 2935,
									"id": 2024,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isPoolActive_1512": {
									"entryPoint": 2913,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isValidAllocator_2036": {
									"entryPoint": 2700,
									"id": 2036,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_registerRecipient_2050": {
									"entryPoint": 2077,
									"id": 2050,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferAmount_1008": {
									"entryPoint": 2810,
									"id": 1008,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allocate_1306": {
									"entryPoint": 1712,
									"id": 1306,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allocate_1996": {
									"entryPoint": 1181,
									"id": 1996,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@distribute_1340": {
									"entryPoint": 981,
									"id": 1340,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getAllo_1142": {
									"entryPoint": 1035,
									"id": 1142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPayouts_1408": {
									"entryPoint": 1300,
									"id": 1408,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPoolAmount_1172": {
									"entryPoint": 1248,
									"id": 1172,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPoolId_1152": {
									"entryPoint": 1131,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRecipientStatus_1197": {
									"entryPoint": 1624,
									"id": 1197,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStrategyId_1162": {
									"entryPoint": 1141,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increasePoolAmount_1246": {
									"entryPoint": 1762,
									"id": 1246,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_1844": {
									"entryPoint": 1642,
									"id": 1844,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isPoolActive_1183": {
									"entryPoint": 1609,
									"id": 1183,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isValidAllocator_1422": {
									"entryPoint": 1258,
									"id": 1422,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@registerRecipient_1278": {
									"entryPoint": 1075,
									"id": 1278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferETH_1677": {
									"entryPoint": 3137,
									"id": 1677,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_1753": {
									"entryPoint": 3169,
									"id": 1753,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdraw_1865": {
									"entryPoint": 1582,
									"id": 1865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6800,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6972,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 3824,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 6779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 6905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 7077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 3890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address": {
									"entryPoint": 4674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address_payable_fromMemory": {
									"entryPoint": 7185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bytes_memory_ptrt_address": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptrt_address": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IAllo_$358_to_t_address_fromStack": {
									"entryPoint": 4155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$563_to_t_uint8_fromStack": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr": {
									"entryPoint": 5331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAllo_$358__to_t_address__fromStack_reversed": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$563__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 6649,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7324,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3296,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 3461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 4912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$563": {
									"entryPoint": 5693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IAllo_$358_to_t_address": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Status_$563_to_t_uint8": {
									"entryPoint": 5712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3809,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6403,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3306,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_assert_t_enum$_Status_$563": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 7141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31754:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "515:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "549:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "498:6:10",
														"type": ""
													}
												],
												"src": "457:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "808:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "928:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:62:10"
															},
															"nodeType": "YulIf",
															"src": "907:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "780:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "788:4:10",
														"type": ""
													}
												],
												"src": "751:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1089:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1063:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1072:6:10",
														"type": ""
													}
												],
												"src": "1038:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1255:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1360:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1362:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1340:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1329:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:30:10"
															},
															"nodeType": "YulIf",
															"src": "1326:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1392:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1404:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1412:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1454:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1466:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1462:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1454:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1239:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1250:4:10",
														"type": ""
													}
												],
												"src": "1173:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1490:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1683:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1679:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1668:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1640:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1650:7:10",
														"type": ""
													}
												],
												"src": "1613:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1829:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1811:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1800:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1772:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1782:7:10",
														"type": ""
													}
												],
												"src": "1745:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1890:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1947:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1956:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1949:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1949:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1913:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1938:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1920:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1920:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1910:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:43:10"
															},
															"nodeType": "YulIf",
															"src": "1900:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:10",
														"type": ""
													}
												],
												"src": "1847:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2027:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2037:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2059:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2046:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2046:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2037:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2102:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2075:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2075:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2013:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2021:5:10",
														"type": ""
													}
												],
												"src": "1975:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2239:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2249:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2331:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2274:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2274:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2258:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2249:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2348:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "2359:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2352:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2381:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2388:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2374:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2374:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2374:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2404:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2415:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2422:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2411:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2404:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2437:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2455:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2467:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2475:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2441:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2509:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2523:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2523:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2523:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2496:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2504:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2493:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:15:10"
															},
															"nodeType": "YulIf",
															"src": "2490:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2697:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2712:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "2730:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "2716:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2754:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "2780:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "2792:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "2759:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2759:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2747:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2747:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2747:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2810:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2821:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2826:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2817:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2817:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2810:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2650:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2647:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2647:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2663:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2665:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2676:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2681:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2672:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2672:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2665:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2625:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2627:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "2638:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "2631:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2621:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2209:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2217:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2225:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2233:5:10",
														"type": ""
													}
												],
												"src": "2137:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2947:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2996:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2998:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2998:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2998:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2975:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2983:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2971:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2971:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2990:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2967:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2967:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2960:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2960:35:10"
															},
															"nodeType": "YulIf",
															"src": "2957:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3088:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3115:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3102:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3092:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3131:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3207:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3215:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3203:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3203:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3222:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3230:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3140:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3131:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2925:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2933:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2941:5:10",
														"type": ""
													}
												],
												"src": "2870:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3335:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3352:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3345:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3345:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3246:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3435:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3542:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3512:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3520:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3509:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:30:10"
															},
															"nodeType": "YulIf",
															"src": "3506:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3572:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3580:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3580:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3572:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3646:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3658:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3664:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3646:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3419:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3430:4:10",
														"type": ""
													}
												],
												"src": "3369:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3746:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3769:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3779:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3756:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3756:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3756:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3806:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3811:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3802:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3802:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3820:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3795:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3795:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3728:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3733:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3738:6:10",
														"type": ""
													}
												],
												"src": "3682:146:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3917:340:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3927:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3993:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3952:40:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3952:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3936:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3936:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3927:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4017:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4024:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4010:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4010:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4010:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4040:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4055:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4062:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4044:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4105:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4107:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4107:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4107:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4086:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4091:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4082:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4082:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4100:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4079:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:25:10"
															},
															"nodeType": "YulIf",
															"src": "4076:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4234:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4239:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4244:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4197:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4197:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4197:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3890:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3895:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3903:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3911:5:10",
														"type": ""
													}
												],
												"src": "3834:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4337:277:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4386:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4388:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4388:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4388:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4365:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4373:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4361:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4361:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4380:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4357:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4357:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4350:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4350:35:10"
															},
															"nodeType": "YulIf",
															"src": "4347:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4478:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4505:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4492:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4482:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4521:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4581:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4589:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4596:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4604:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4530:46:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4530:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4521:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4315:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4323:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4331:5:10",
														"type": ""
													}
												],
												"src": "4276:338:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4754:873:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4800:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4802:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4802:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4802:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4775:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4784:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4771:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4796:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4767:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4767:32:10"
															},
															"nodeType": "YulIf",
															"src": "4764:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4893:302:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4908:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4939:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4950:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4935:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4935:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4922:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4922:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4912:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5002:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5002:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5002:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4972:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4980:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4969:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4969:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "4966:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5097:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5157:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5168:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5153:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5153:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5177:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5107:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5107:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5097:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5205:287:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5220:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5251:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5262:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5247:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5247:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5234:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5234:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5224:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5313:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5315:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5315:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5315:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5285:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5293:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5282:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "5279:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5410:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5454:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5465:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5450:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5450:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5474:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5420:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5420:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5410:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5502:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5517:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5531:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5521:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5547:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5582:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5593:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5578:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5578:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5557:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5547:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bytes_memory_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4708:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4719:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4731:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4739:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4747:6:10",
														"type": ""
													}
												],
												"src": "4620:1007:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5665:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5675:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5682:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5675:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5651:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5661:3:10",
														"type": ""
													}
												],
												"src": "5633:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5759:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5769:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5827:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5809:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5809:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5800:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5782:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5782:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5769:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5739:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5749:9:10",
														"type": ""
													}
												],
												"src": "5699:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5907:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5917:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5961:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5930:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5917:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5887:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5897:9:10",
														"type": ""
													}
												],
												"src": "5847:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6052:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6062:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6106:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6075:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6075:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6062:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IAllo_$358_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6032:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6042:9:10",
														"type": ""
													}
												],
												"src": "5979:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6202:79:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6219:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6268:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IAllo_$358_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6224:43:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6224:50:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6212:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6212:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6212:63:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IAllo_$358_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6190:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6197:3:10",
														"type": ""
													}
												],
												"src": "6124:157:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6398:137:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6408:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6420:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6431:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6416:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6416:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6408:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6501:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6514:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6525:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6510:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IAllo_$358_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6444:56:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:84:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6444:84:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAllo_$358__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6370:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6382:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6393:4:10",
														"type": ""
													}
												],
												"src": "6287:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6633:560:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6679:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6681:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6681:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6681:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6654:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6663:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6650:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6675:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6646:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6646:32:10"
															},
															"nodeType": "YulIf",
															"src": "6643:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6772:286:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6787:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6818:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6829:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6814:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6814:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6801:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6801:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6791:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6879:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6881:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6881:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6881:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6851:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6859:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6848:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6848:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "6845:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6976:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7020:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7031:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7016:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7016:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7040:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6986:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6986:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6976:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7068:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7083:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7097:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7087:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7113:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7148:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7159:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7144:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7144:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7168:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7123:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7123:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7113:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6595:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6606:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6618:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6626:6:10",
														"type": ""
													}
												],
												"src": "6541:652:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7264:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7281:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7304:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7286:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7286:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7274:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7274:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7252:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7259:3:10",
														"type": ""
													}
												],
												"src": "7199:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7421:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7431:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7443:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7454:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7439:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7439:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7431:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7511:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7524:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7535:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7520:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7520:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7467:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7467:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7467:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7393:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7405:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7416:4:10",
														"type": ""
													}
												],
												"src": "7323:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7596:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7606:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7617:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7606:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7578:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7588:7:10",
														"type": ""
													}
												],
												"src": "7551:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7699:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7716:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7739:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7721:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7721:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7709:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7709:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7709:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7687:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7694:3:10",
														"type": ""
													}
												],
												"src": "7634:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7856:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7866:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7878:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7889:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7874:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7874:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7866:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7946:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7959:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7970:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7955:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7955:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7902:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7902:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7902:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7828:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7840:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7851:4:10",
														"type": ""
													}
												],
												"src": "7758:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8031:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8041:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8052:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8041:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8013:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8023:7:10",
														"type": ""
													}
												],
												"src": "7986:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8134:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8151:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8174:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "8156:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8156:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8144:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8144:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8122:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8129:3:10",
														"type": ""
													}
												],
												"src": "8069:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8291:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8301:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8313:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8309:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8301:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8381:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8394:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8405:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8390:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8390:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8337:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8337:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8337:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8263:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8275:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8286:4:10",
														"type": ""
													}
												],
												"src": "8193:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8503:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8608:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8610:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8610:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8610:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8580:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8577:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8577:30:10"
															},
															"nodeType": "YulIf",
															"src": "8574:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8640:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8660:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8648:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8648:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8640:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8702:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8714:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8720:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8710:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8710:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8702:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8487:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8498:4:10",
														"type": ""
													}
												],
												"src": "8421:311:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8781:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8838:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8847:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8850:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8840:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8840:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8840:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8804:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8829:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8811:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8811:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8801:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8794:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8794:43:10"
															},
															"nodeType": "YulIf",
															"src": "8791:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8774:5:10",
														"type": ""
													}
												],
												"src": "8738:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8918:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8928:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8950:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8937:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8937:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8928:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8993:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8966:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8966:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8966:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8896:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8904:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8912:5:10",
														"type": ""
													}
												],
												"src": "8866:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9130:608:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9140:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9222:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9165:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9165:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9149:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9149:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "9140:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9239:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "9250:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "9243:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9272:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9279:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9265:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9265:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9295:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9306:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9313:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9302:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9302:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "9295:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9328:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9346:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9358:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9366:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "9354:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9354:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9342:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9342:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "9332:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9400:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "9414:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9414:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9414:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9387:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9395:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9384:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9384:15:10"
															},
															"nodeType": "YulIf",
															"src": "9381:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9588:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9603:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "9621:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "9607:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9645:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "9671:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "9683:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "9650:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9650:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9638:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9638:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9638:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9701:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9712:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9717:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9708:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9708:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9701:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9541:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9546:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9538:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9538:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9554:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9556:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "9567:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9572:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9563:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9563:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9556:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9516:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9518:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "9529:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "9522:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9512:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9100:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9108:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9116:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9124:5:10",
														"type": ""
													}
												],
												"src": "9028:710:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9838:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9887:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "9889:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9889:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9889:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9866:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9874:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9862:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9862:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "9881:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "9858:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9858:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9851:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9851:35:10"
															},
															"nodeType": "YulIf",
															"src": "9848:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9979:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10006:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9993:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9993:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9983:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10022:103:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10098:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10106:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10094:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10094:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10113:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10121:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10031:62:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10031:94:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10022:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9816:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9824:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9832:5:10",
														"type": ""
													}
												],
												"src": "9761:370:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10287:889:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10333:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10335:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10335:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10335:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10308:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10317:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10304:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10304:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10329:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10300:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:32:10"
															},
															"nodeType": "YulIf",
															"src": "10297:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "10426:302:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10441:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10472:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10483:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10468:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10468:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10455:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10455:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10445:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10533:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10535:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10535:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10535:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10505:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10513:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10502:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10502:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "10499:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10630:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10690:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10701:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10686:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10686:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10710:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10640:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10640:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10630:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10738:303:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10753:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10784:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10795:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10780:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10780:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10767:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10767:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10757:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10846:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10848:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10848:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10848:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10818:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10826:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10815:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10815:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "10812:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10943:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11003:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11014:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10999:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10999:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11023:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10953:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10953:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10943:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11051:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11066:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11080:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11070:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11096:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11131:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11142:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11127:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11127:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11151:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11106:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11106:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11096:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10241:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10252:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10264:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10272:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10280:6:10",
														"type": ""
													}
												],
												"src": "10137:1039:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11248:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11294:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11296:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11296:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11296:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11269:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11278:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11265:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11265:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11290:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11261:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11261:32:10"
															},
															"nodeType": "YulIf",
															"src": "11258:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "11387:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11402:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11416:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11406:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11431:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11466:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11477:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11462:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11462:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11486:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11441:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11441:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11431:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11218:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11229:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11241:6:10",
														"type": ""
													}
												],
												"src": "11182:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11559:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11569:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11594:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11587:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11587:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11580:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11580:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11569:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11541:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11551:7:10",
														"type": ""
													}
												],
												"src": "11517:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11672:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11689:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11709:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "11694:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11694:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11682:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11682:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11682:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11660:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11667:3:10",
														"type": ""
													}
												],
												"src": "11613:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11820:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11830:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11842:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11853:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11838:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11838:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11830:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11904:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11917:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11928:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11913:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11913:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11866:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11866:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11866:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11792:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11804:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11815:4:10",
														"type": ""
													}
												],
												"src": "11728:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12035:229:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12140:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12142:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12142:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12142:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12112:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12120:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12109:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:30:10"
															},
															"nodeType": "YulIf",
															"src": "12106:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12172:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12184:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12192:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12180:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12180:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "12172:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12234:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "12246:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12252:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12242:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12242:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "12234:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12019:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12030:4:10",
														"type": ""
													}
												],
												"src": "11944:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12396:831:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12406:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12497:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "12431:65:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12431:73:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "12415:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12415:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12406:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12514:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "12525:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "12518:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12547:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12554:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12540:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12540:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12540:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12570:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12581:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12588:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12577:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12577:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "12570:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12603:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12621:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12633:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12641:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "12629:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12629:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12617:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12617:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "12607:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12675:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "12689:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12689:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12689:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12662:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12670:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12659:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12659:15:10"
															},
															"nodeType": "YulIf",
															"src": "12656:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12863:358:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12878:36:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "12910:3:10"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "12897:12:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12897:17:10"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "12882:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12966:83:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																							"nodeType": "YulIdentifier",
																							"src": "12968:77:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12968:79:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12968:79:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "12933:11:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12946:18:10",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "12930:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12930:35:10"
																		},
																		"nodeType": "YulIf",
																		"src": "12927:122:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13062:42:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "13084:6:10"
																				},
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "13092:11:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13080:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13080:24:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "13066:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "13125:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "13160:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "13172:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_bytes_memory_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "13130:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13130:46:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13118:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13118:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13118:59:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13190:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "13201:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13206:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13197:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13197:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "13190:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12816:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12821:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12813:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12813:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12829:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12831:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "12842:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12847:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12838:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12838:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12831:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12791:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12793:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "12804:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "12797:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12787:434:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12366:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12374:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12382:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12390:5:10",
														"type": ""
													}
												],
												"src": "12285:942:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13334:302:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13383:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "13385:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13385:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13385:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13362:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13370:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13358:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13358:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "13377:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13354:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13354:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13347:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13347:35:10"
															},
															"nodeType": "YulIf",
															"src": "13344:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13475:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "13502:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "13489:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13489:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13479:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13518:112:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13603:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13611:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13599:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13599:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13618:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "13626:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13527:71:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13527:103:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "13518:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "13312:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13320:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "13328:5:10",
														"type": ""
													}
												],
												"src": "13248:388:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13784:770:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13830:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13832:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13832:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13832:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13805:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13814:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13801:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13801:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13826:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13797:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13797:32:10"
															},
															"nodeType": "YulIf",
															"src": "13794:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "13923:302:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13938:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13969:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13980:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13965:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13965:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13952:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13952:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13942:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14030:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "14032:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14032:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14032:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14002:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14010:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13999:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13999:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "13996:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14127:88:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14187:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14198:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14183:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14183:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14207:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14137:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14137:78:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "14127:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "14235:312:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "14250:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14281:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14292:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14277:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14277:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "14264:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14264:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "14254:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "14343:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "14345:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14345:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "14345:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14315:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14323:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14312:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14312:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "14309:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "14440:97:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "14509:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14520:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14505:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14505:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14529:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14450:54:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14450:87:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "14440:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13746:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13757:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13769:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13777:6:10",
														"type": ""
													}
												],
												"src": "13642:912:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14664:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14675:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14691:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14685:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14685:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14675:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14647:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14657:6:10",
														"type": ""
													}
												],
												"src": "14560:144:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14851:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14868:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14873:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14861:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14889:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14908:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14913:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14904:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14904:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14889:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14823:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14828:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14839:11:10",
														"type": ""
													}
												],
												"src": "14710:214:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15032:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15042:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "15050:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15042:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15063:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15075:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15080:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15071:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15071:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15063:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15019:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15027:4:10",
														"type": ""
													}
												],
												"src": "14930:162:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15153:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15170:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15193:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15175:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15175:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15163:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15163:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15163:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15141:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15148:3:10",
														"type": ""
													}
												],
												"src": "15098:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15267:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15284:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15307:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15289:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15289:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15277:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15277:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15277:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15255:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15262:3:10",
														"type": ""
													}
												],
												"src": "15212:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15514:405:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15524:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15540:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15545:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15536:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15536:14:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "15528:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15560:176:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15607:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15637:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15644:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15633:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15633:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15627:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15627:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "15611:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "15697:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "15715:3:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15720:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15711:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15711:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "15663:33:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15663:63:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "15663:63:10"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "15746:166:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15783:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15813:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15820:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15809:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15809:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15803:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15803:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "15787:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "15873:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "15891:3:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15896:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15887:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15887:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15839:33:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15839:63:10"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "15839:63:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15501:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15508:3:10",
														"type": ""
													}
												],
												"src": "15398:521:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16065:159:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16169:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16177:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16075:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16075:106:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16075:106:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16190:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16208:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16213:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16204:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16204:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "16190:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16038:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16046:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "16054:10:10",
														"type": ""
													}
												],
												"src": "15925:299:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16335:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16345:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "16357:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16362:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16353:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16353:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "16345:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "16322:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "16330:4:10",
														"type": ""
													}
												],
												"src": "16230:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16639:788:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16649:98:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16741:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16663:77:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16663:84:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16653:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16756:123:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16867:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16872:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16763:103:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16763:116:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16756:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16888:101:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16983:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16903:79:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16903:86:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "16892:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16998:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "17012:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "17002:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17088:314:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "17102:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "17129:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "17123:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17123:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "17106:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17149:130:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "17260:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "17275:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "17156:103:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17156:123:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17149:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17292:100:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "17385:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "17302:82:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17302:90:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17292:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "17050:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17053:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17047:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17047:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17061:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17063:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "17072:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17075:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17068:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17068:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "17063:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17032:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "17034:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "17043:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "17038:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "17028:374:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17411:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17418:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17411:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16618:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16625:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16634:3:10",
														"type": ""
													}
												],
												"src": "16455:972:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17641:285:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17651:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17663:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17674:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17659:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17659:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17651:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17698:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17709:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17694:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17694:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17717:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17723:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17713:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17713:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17687:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17687:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17687:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17743:176:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17905:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17914:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17751:153:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17751:168:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17743:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17613:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17625:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17636:4:10",
														"type": ""
													}
												],
												"src": "17433:493:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18032:519:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18078:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18080:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18080:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18080:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18053:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18062:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18049:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18049:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18074:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18045:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18045:32:10"
															},
															"nodeType": "YulIf",
															"src": "18042:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "18171:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18186:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18200:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18190:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18215:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18250:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18261:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18246:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18246:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18270:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18225:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18225:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18215:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18298:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18313:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18327:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18317:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18343:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18378:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18389:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18374:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18374:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18398:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18353:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18353:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "18343:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18426:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18441:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18455:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18445:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18471:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18506:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18517:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18502:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18502:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18526:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "18481:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18481:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "18471:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17986:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17997:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18009:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18017:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18025:6:10",
														"type": ""
													}
												],
												"src": "17932:619:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18585:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18602:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18605:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18595:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18595:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18595:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18699:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18702:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18692:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18692:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18692:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18723:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18726:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18716:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18716:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18716:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "18557:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18796:62:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18830:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "18832:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18832:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18832:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18819:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18826:1:10",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18816:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18816:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18809:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18809:20:10"
															},
															"nodeType": "YulIf",
															"src": "18806:46:10"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$563",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18789:5:10",
														"type": ""
													}
												],
												"src": "18743:115:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18919:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18929:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18940:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18929:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18983:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$563",
																	"nodeType": "YulIdentifier",
																	"src": "18946:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18946:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18946:43:10"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$563",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18901:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18911:7:10",
														"type": ""
													}
												],
												"src": "18864:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19069:63:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19079:47:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19120:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$563",
																	"nodeType": "YulIdentifier",
																	"src": "19092:27:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19092:34:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19079:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$563_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19049:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19059:9:10",
														"type": ""
													}
												],
												"src": "19001:131:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19211:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19228:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19272:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$563_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "19233:38:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19233:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19221:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19221:58:10"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$563_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19199:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19206:3:10",
														"type": ""
													}
												],
												"src": "19138:147:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19397:132:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19407:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19419:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19430:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19415:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19415:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19407:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19495:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19508:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19519:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19504:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$563_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19443:51:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19443:79:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19443:79:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$563__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19369:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19381:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19392:4:10",
														"type": ""
													}
												],
												"src": "19291:238:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19627:560:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19673:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19675:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19675:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19675:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19648:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19657:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19644:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19644:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19669:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19640:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19640:32:10"
															},
															"nodeType": "YulIf",
															"src": "19637:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "19766:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19781:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19795:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19785:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19810:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19845:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19856:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19841:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19841:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19865:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19820:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19820:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19810:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19893:287:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19908:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19939:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19950:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19935:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19935:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "19922:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19922:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19912:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20001:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "20003:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20003:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20003:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19973:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19981:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19970:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19970:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "19967:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20098:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20142:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20153:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20138:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20138:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20162:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "20108:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20108:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "20098:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19589:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19600:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19612:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19620:6:10",
														"type": ""
													}
												],
												"src": "19535:652:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20259:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20305:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20307:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20307:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20307:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20280:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20289:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20276:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20276:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20301:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20272:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20272:32:10"
															},
															"nodeType": "YulIf",
															"src": "20269:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "20398:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20413:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20427:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20417:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20442:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20477:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20488:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20473:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20473:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20497:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20452:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20452:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20442:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20229:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20240:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20252:6:10",
														"type": ""
													}
												],
												"src": "20193:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20602:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20613:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20629:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20623:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20623:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20613:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20585:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20595:6:10",
														"type": ""
													}
												],
												"src": "20528:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20759:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20776:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20781:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20769:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20769:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20769:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20797:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20816:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20821:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20812:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20812:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "20797:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20731:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20736:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "20747:11:10",
														"type": ""
													}
												],
												"src": "20648:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20910:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20920:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "20928:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "20920:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20941:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "20953:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20958:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20949:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20949:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "20941:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "20897:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20905:4:10",
														"type": ""
													}
												],
												"src": "20838:132:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21056:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21100:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21108:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "21066:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21066:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21066:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21121:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21139:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21144:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21135:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21135:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "21121:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21029:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21037:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "21045:10:10",
														"type": ""
													}
												],
												"src": "20976:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21236:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21246:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "21258:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21263:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21254:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21254:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "21246:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "21223:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "21231:4:10",
														"type": ""
													}
												],
												"src": "21161:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21434:608:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21444:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21506:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21458:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21458:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21448:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21521:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21602:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21607:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21528:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21528:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21521:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21623:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21688:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21638:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21638:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "21627:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21703:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "21717:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "21707:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21793:224:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "21807:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "21834:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "21828:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21828:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "21811:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "21854:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "21905:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "21920:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "21861:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21861:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "21854:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "21937:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "22000:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "21947:52:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21947:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21937:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21755:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21758:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21752:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21752:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21766:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21768:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "21777:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21780:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "21773:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21773:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "21768:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21737:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "21739:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "21748:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "21743:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "21733:284:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22026:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22033:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22026:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21413:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21420:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21429:3:10",
														"type": ""
													}
												],
												"src": "21310:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22122:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22133:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22149:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22143:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22143:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22133:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22105:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22115:6:10",
														"type": ""
													}
												],
												"src": "22048:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22279:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22296:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22301:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22289:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22289:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22289:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22317:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22336:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22341:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22332:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22332:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22317:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22251:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22256:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22267:11:10",
														"type": ""
													}
												],
												"src": "22168:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22430:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22440:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "22448:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "22440:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22461:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "22473:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22478:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22469:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22469:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "22461:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "22417:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "22425:4:10",
														"type": ""
													}
												],
												"src": "22358:132:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22576:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22620:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22628:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22586:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22586:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22586:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22641:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22659:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22664:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22655:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22655:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "22641:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22549:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22557:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "22565:10:10",
														"type": ""
													}
												],
												"src": "22496:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22756:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22766:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "22778:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22783:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22774:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22774:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "22766:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "22743:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "22751:4:10",
														"type": ""
													}
												],
												"src": "22681:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22954:608:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22964:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23026:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22978:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22978:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22968:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23041:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23122:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23127:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23048:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23048:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23041:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23143:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23208:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23158:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23158:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "23147:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23223:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "23237:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "23227:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23313:224:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "23327:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "23354:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "23348:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23348:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "23331:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "23374:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "23425:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "23440:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "23381:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23381:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "23374:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "23457:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "23520:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "23467:52:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23467:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23457:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "23275:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23278:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "23272:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23272:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "23286:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "23288:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "23297:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23300:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "23293:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23293:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "23288:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "23257:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "23259:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "23268:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "23263:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "23253:284:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23546:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23553:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23546:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22933:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22940:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22949:3:10",
														"type": ""
													}
												],
												"src": "22830:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23822:490:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23832:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23844:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23855:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23840:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23840:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23832:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23879:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23890:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23875:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23875:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23898:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23904:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23894:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23894:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23868:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23868:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23868:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23924:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24026:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24035:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23932:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23932:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23924:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24061:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24072:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24057:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24057:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24081:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24087:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24077:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24077:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24050:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24050:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24050:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24107:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24209:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24218:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24115:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24115:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24107:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24277:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24290:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24301:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24286:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24286:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24233:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24233:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24233:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23778:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23790:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23798:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23806:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23817:4:10",
														"type": ""
													}
												],
												"src": "23568:744:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24346:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24363:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24366:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24356:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24356:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24356:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24460:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24463:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24453:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24453:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24453:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24484:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24487:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "24477:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24477:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24477:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "24318:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24562:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24573:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24589:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24583:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24583:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24573:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24545:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24555:6:10",
														"type": ""
													}
												],
												"src": "24504:98:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24703:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24720:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24725:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24713:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24713:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24741:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24760:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24765:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24756:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24756:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24741:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24675:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24680:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24691:11:10",
														"type": ""
													}
												],
												"src": "24608:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24844:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24854:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "24863:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "24858:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24923:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "24948:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "24953:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "24944:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24944:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "24967:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "24972:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "24963:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "24963:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "24957:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "24957:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24937:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24937:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24937:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "24884:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24887:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24881:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24881:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24895:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24897:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "24906:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24909:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24902:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24902:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "24897:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24877:3:10",
																"statements": []
															},
															"src": "24873:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "25006:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "25011:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25002:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25020:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24995:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24995:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24995:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "24826:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "24831:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24836:6:10",
														"type": ""
													}
												],
												"src": "24782:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25124:283:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25134:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25180:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25148:31:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25148:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25138:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25195:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25260:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25265:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25202:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25202:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25195:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25320:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25327:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25316:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25334:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25339:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "25281:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25281:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25281:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25355:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25366:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "25393:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "25371:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25371:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25362:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25362:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25355:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25105:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25112:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25120:3:10",
														"type": ""
													}
												],
												"src": "25034:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25557:275:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25567:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25579:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25590:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25575:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25575:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25567:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25647:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25660:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25671:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25656:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25656:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25603:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25603:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25603:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25695:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25706:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25691:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25691:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25715:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25721:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25711:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25711:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25684:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25684:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25684:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25741:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25811:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25820:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25749:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25749:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25741:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25521:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25533:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25541:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25552:4:10",
														"type": ""
													}
												],
												"src": "25413:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25866:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25883:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25886:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25876:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25876:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25876:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25980:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25983:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25973:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25973:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25973:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26004:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26007:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25997:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25997:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "25838:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26068:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26078:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26101:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26083:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26083:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26078:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26112:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26135:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26117:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26117:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26112:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26146:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26157:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26160:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26153:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26153:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "26146:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26186:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26188:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26188:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26188:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26178:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "26181:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26175:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26175:10:10"
															},
															"nodeType": "YulIf",
															"src": "26172:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26055:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26058:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "26064:3:10",
														"type": ""
													}
												],
												"src": "26024:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26347:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26357:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26369:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26380:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26365:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26365:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26357:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26437:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26450:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26461:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26446:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26446:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26393:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26393:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26393:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26518:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26531:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26542:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26527:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26527:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26474:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26474:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26474:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26311:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26323:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26331:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26342:4:10",
														"type": ""
													}
												],
												"src": "26221:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26599:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26653:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26662:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26665:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26655:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26655:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26655:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26622:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "26644:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "26629:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26629:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "26619:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26619:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "26612:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26612:40:10"
															},
															"nodeType": "YulIf",
															"src": "26609:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26592:5:10",
														"type": ""
													}
												],
												"src": "26559:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26741:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26751:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "26766:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26760:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26760:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26751:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26806:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "26782:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26782:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26782:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "26719:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26727:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26735:5:10",
														"type": ""
													}
												],
												"src": "26681:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26898:271:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26944:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "26946:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26946:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26946:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "26919:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26928:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26915:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26915:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26940:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "26911:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26911:32:10"
															},
															"nodeType": "YulIf",
															"src": "26908:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "27037:125:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27052:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27066:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "27056:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27081:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "27124:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "27135:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27120:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27144:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "27091:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27091:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "27081:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26868:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "26879:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26891:6:10",
														"type": ""
													}
												],
												"src": "26824:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27238:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27248:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "27263:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27257:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27257:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "27248:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27306:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "27279:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27279:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27279:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "27216:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27224:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27232:5:10",
														"type": ""
													}
												],
												"src": "27175:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27454:619:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27464:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27546:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "27489:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27489:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "27473:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27473:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "27464:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27563:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "27574:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "27567:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "27596:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "27603:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27589:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27589:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27589:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27619:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "27630:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27637:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27626:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27626:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "27619:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27652:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "27670:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "27682:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27690:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "27678:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27678:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27666:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27666:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "27656:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27724:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "27738:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27738:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27738:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "27711:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "27719:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "27708:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27708:15:10"
															},
															"nodeType": "YulIf",
															"src": "27705:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27912:155:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "27927:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "27945:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "27931:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "27969:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "28006:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "28018:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "27974:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27974:48:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "27962:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27962:61:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27962:61:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "28036:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "28047:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "28052:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "28043:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28043:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "28036:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "27865:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "27870:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "27862:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27862:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "27878:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "27880:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "27891:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27896:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "27887:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27887:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "27880:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "27840:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "27842:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "27853:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "27846:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "27836:231:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "27424:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "27432:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27440:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "27448:5:10",
														"type": ""
													}
												],
												"src": "27341:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28184:297:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28233:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "28235:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28235:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28235:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "28212:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "28220:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28208:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28208:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "28227:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "28204:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28204:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "28197:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28197:35:10"
															},
															"nodeType": "YulIf",
															"src": "28194:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28325:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "28345:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28339:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28339:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "28329:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "28361:114:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "28448:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28456:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28444:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28444:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28463:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "28471:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "28370:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28370:105:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "28361:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28162:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28170:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "28178:5:10",
														"type": ""
													}
												],
												"src": "28096:385:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28550:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28560:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "28575:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28569:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28569:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "28560:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "28618:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "28591:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28591:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28591:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28528:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28536:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "28544:5:10",
														"type": ""
													}
												],
												"src": "28487:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28766:619:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28776:90:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28858:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "28801:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28801:64:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "28785:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28785:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "28776:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28875:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "28886:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "28879:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "28908:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28915:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28901:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28901:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28901:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28931:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "28942:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28949:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28938:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28938:16:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "28931:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28964:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "28982:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "28994:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29002:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "28990:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28990:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28978:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28978:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "28968:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29036:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "29050:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29050:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29050:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "29023:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "29031:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29020:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29020:15:10"
															},
															"nodeType": "YulIf",
															"src": "29017:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29224:155:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "29239:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "29257:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "29243:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "29281:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "29318:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "29330:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "29286:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29286:48:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "29274:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29274:61:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29274:61:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "29348:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "29359:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29364:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "29355:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29355:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "29348:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "29177:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "29182:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "29174:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29174:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "29190:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "29192:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "29203:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "29208:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "29199:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29199:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "29192:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "29152:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "29154:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "29165:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "29158:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "29148:231:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "28736:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "28744:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28752:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "28760:5:10",
														"type": ""
													}
												],
												"src": "28653:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29496:297:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29545:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "29547:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29547:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29547:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "29524:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "29532:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "29520:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29520:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "29539:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "29516:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29516:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29509:35:10"
															},
															"nodeType": "YulIf",
															"src": "29506:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "29637:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29657:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29651:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29651:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "29641:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29673:114:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "29760:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29768:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29756:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "29775:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "29783:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "29682:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29682:105:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "29673:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "29474:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29482:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "29490:5:10",
														"type": ""
													}
												],
												"src": "29408:385:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29852:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29862:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29891:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "29873:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29873:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29862:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29834:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29844:7:10",
														"type": ""
													}
												],
												"src": "29799:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29960:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30025:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30034:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30037:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30027:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30027:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30027:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29983:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "30016:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "29990:25:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29990:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "29980:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29980:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "29973:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29973:51:10"
															},
															"nodeType": "YulIf",
															"src": "29970:71:10"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29953:5:10",
														"type": ""
													}
												],
												"src": "29909:138:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30124:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30134:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "30149:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30143:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30143:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "30134:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30200:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "30165:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30165:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30165:41:10"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "30102:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30110:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30118:5:10",
														"type": ""
													}
												],
												"src": "30053:159:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30387:916:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30433:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "30435:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30435:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30435:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "30408:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30417:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30404:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30404:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30429:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "30400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30400:32:10"
															},
															"nodeType": "YulIf",
															"src": "30397:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "30526:306:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "30541:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "30565:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30576:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30561:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30561:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "30555:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30555:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "30545:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "30626:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "30628:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30628:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "30628:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30598:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30606:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30595:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30595:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "30592:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "30723:99:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "30794:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30805:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30790:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30790:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "30814:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "30733:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30733:89:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "30723:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "30842:307:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "30857:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "30881:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "30892:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30877:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30877:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "30871:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30871:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "30861:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "30943:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "30945:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30945:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "30945:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "30915:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30923:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "30912:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30912:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "30909:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "31040:99:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "31111:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "31122:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "31107:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31107:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "31131:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "31050:56:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31050:89:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "31040:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "31159:137:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "31174:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31188:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "31178:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "31204:82:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "31258:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "31269:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "31254:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31254:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "31278:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "31214:39:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31214:72:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "31204:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30341:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "30352:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30364:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "30372:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "30380:6:10",
														"type": ""
													}
												],
												"src": "30218:1085:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31463:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31473:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31485:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31496:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31481:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31481:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31473:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "31553:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31566:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31577:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31562:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31509:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31509:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31509:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "31634:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31647:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31658:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31643:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31643:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31590:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31590:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31590:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "31716:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31729:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31740:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31725:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31725:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31672:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31672:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31672:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31419:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "31431:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "31439:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31447:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31458:4:10",
														"type": ""
													}
												],
												"src": "31309:442:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bytes_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IAllo_$358_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IAllo_$358_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IAllo_$358_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IAllo_$358__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IAllo_$358_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // bytes[]\n    function abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_bytes_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes[]\n    function abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct IStrategy.PayoutSummary -> struct IStrategy.PayoutSummary\n    function abi_encode_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // recipientAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct IStrategy.PayoutSummary[] -> struct IStrategy.PayoutSummary[]\n    function abi_encode_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_PayoutSummary_$568_memory_ptr_to_t_struct$_PayoutSummary_$568_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$563(value) {\n        if iszero(lt(value, 7)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$563(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$563(value)\n    }\n\n    function convert_t_enum$_Status_$563_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$563(value)\n    }\n\n    function abi_encode_t_enum$_Status_$563_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$563_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Status_$563__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Status_$563_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_address_payable_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1056": [
									{
										"length": 32,
										"start": 1039
									},
									{
										"length": 32,
										"start": 1818
									},
									{
										"length": 32,
										"start": 2135
									}
								],
								"1058": [
									{
										"length": 32,
										"start": 1145
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100f75760003560e01c8063a0cf0aea1161008a578063eb11af9311610059578063eb11af931461032a578063edd146cc14610367578063ef2920fc14610390578063f5b0dfb7146103ac576100fe565b8063a0cf0aea1461026e578063b2b878d014610299578063d9caed12146102d6578063df868ed3146102ff576100fe565b806342fda9c7116100c657806342fda9c7146101b257806344469f98146101dd5780634ab4ba42146102065780634d31d08714610231576100fe565b80630a6f0ee91461010357806315cc481e1461012c5780632bbe0cae1461015757806338fff2d014610187576100fe565b366100fe57005b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190610f60565b6103d5565b005b34801561013857600080fd5b5061014161040b565b60405161014e919061104a565b60405180910390f35b610171600480360381019061016c9190611065565b610433565b60405161017e91906110d0565b60405180910390f35b34801561019357600080fd5b5061019c61046b565b6040516101a99190611104565b60405180910390f35b3480156101be57600080fd5b506101c7610475565b6040516101d49190611138565b60405180910390f35b3480156101e957600080fd5b5061020460048036038101906101ff9190611242565b61049d565b005b34801561021257600080fd5b5061021b6104e0565b6040516102289190611104565b60405180910390f35b34801561023d57600080fd5b50610258600480360381019061025391906112cd565b6104ea565b6040516102659190611315565b60405180910390f35b34801561027a57600080fd5b506102836104fc565b60405161029091906110d0565b60405180910390f35b3480156102a557600080fd5b506102c060048036038101906102bb9190611411565b610514565b6040516102cd9190611585565b60405180910390f35b3480156102e257600080fd5b506102fd60048036038101906102f891906115a7565b61062e565b005b34801561030b57600080fd5b50610314610649565b6040516103219190611315565b60405180910390f35b34801561033657600080fd5b50610351600480360381019061034c91906112cd565b610658565b60405161035e9190611671565b60405180910390f35b34801561037357600080fd5b5061038e6004803603810190610389919061168c565b61066a565b005b6103aa60048036038101906103a59190611065565b6106b0565b005b3480156103b857600080fd5b506103d360048036038101906103ce91906116e8565b6106e2565b005b6103dd610718565b6103e561079f565b6103f08383836107dd565b6103fb8383836107e2565b610406838383610814565b505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600061043d610718565b61044561079f565b61044f8383610819565b610459838361081d565b90506104658383610851565b92915050565b6000600154905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b336104a781610855565b60008484846040516020016104be93929190611873565b60405160208183030381529060405290506104d9813361092c565b5050505050565b6000600254905090565b60006104f582610a8c565b9050919050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b606060008351905082518114610556576040517f7b49805600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008167ffffffffffffffff81111561057257610571610d0a565b5b6040519080825280602002602001820160405280156105ab57816020015b610598610cb0565b8152602001906001900390816105905790505b50905060005b82811015610622576105f78682815181106105cf576105ce6118b8565b5b60200260200101518683815181106105ea576105e96118b8565b5b6020026020010151610ac0565b82828151811061060a576106096118b8565b5b602002602001018190525080806001019150506105b1565b50809250505092915050565b3361063881610855565b610643848484610afa565b50505050565b6000610653610b61565b905090565b600061066382610b77565b9050919050565b61067382610bab565b7f91efa3d50feccde0d0d202f8ae5c41ca0b2be614cebcb2bd2f4b019396e6568a82826040516106a4929190611966565b60405180910390a15050565b6106b8610718565b6106c061079f565b6106ca8282610c33565b6106d4828261092c565b6106de8282610c37565b5050565b6106ea610718565b6106f381610c3b565b806002600082825461070591906119c5565b9250508190555061071581610c3e565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079d576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000600154036107db576040517f3da3f98c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b505050565b6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b5050565b60006040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329e40d4b600154836040518363ffffffff1660e01b81526004016108b29291906119f9565b602060405180830381865afa1580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f39190611a4e565b610929576040517f075fd2b100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b8061093681610855565b60008060008580602001905181019061094f9190611c11565b92509250925060008351905060008103610995576040517ffb76571500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825181146109cf576040517ffb76571500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610a825760008482815181106109ef576109ee6118b8565b5b602002602001015190506000868381518110610a0e57610a0d6118b8565b5b60200260200101519050610a23858284610afa565b8073ffffffffffffffffffffffffffffffffffffffff167f463ffc2cf8b1596445c417388ed30e53eb67cf6668cb2be7f0addf8a78c8441b83878c604051610a6d93929190611c9c565b60405180910390a282600101925050506109d2565b5050505050505050565b60006040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ac8610cb0565b6040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5057610b4b8282610c41565b610b5c565b610b5b838383610c61565b5b505050565b60008060009054906101000a900460ff16905090565b60006040517f1569426800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bb3610718565b600060015414610bef576040517f439a74c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008103610c29576040517f7fcce2a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060018190555050565b5050565b5050565b50565b50565b60008060008084865af1610c5d5763b12d13eb6000526004601cfd5b5050565b81601452806034526fa9059cbb00000000000000000000000060005260206000604460106000875af13d156001600051141716610ca6576390b8ec186000526004601cfd5b6000603452505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d4282610cf9565b810181811067ffffffffffffffff82111715610d6157610d60610d0a565b5b80604052505050565b6000610d74610ce0565b9050610d808282610d39565b919050565b600067ffffffffffffffff821115610da057610d9f610d0a565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de182610db6565b9050919050565b610df181610dd6565b8114610dfc57600080fd5b50565b600081359050610e0e81610de8565b92915050565b6000610e27610e2284610d85565b610d6a565b90508083825260208201905060208402830185811115610e4a57610e49610db1565b5b835b81811015610e735780610e5f8882610dff565b845260208401935050602081019050610e4c565b5050509392505050565b600082601f830112610e9257610e91610cf4565b5b8135610ea2848260208601610e14565b91505092915050565b600080fd5b600067ffffffffffffffff821115610ecb57610eca610d0a565b5b610ed482610cf9565b9050602081019050919050565b82818337600083830152505050565b6000610f03610efe84610eb0565b610d6a565b905082815260208101848484011115610f1f57610f1e610eab565b5b610f2a848285610ee1565b509392505050565b600082601f830112610f4757610f46610cf4565b5b8135610f57848260208601610ef0565b91505092915050565b600080600060608486031215610f7957610f78610cea565b5b600084013567ffffffffffffffff811115610f9757610f96610cef565b5b610fa386828701610e7d565b935050602084013567ffffffffffffffff811115610fc457610fc3610cef565b5b610fd086828701610f32565b9250506040610fe186828701610dff565b9150509250925092565b6000819050919050565b600061101061100b61100684610db6565b610feb565b610db6565b9050919050565b600061102282610ff5565b9050919050565b600061103482611017565b9050919050565b61104481611029565b82525050565b600060208201905061105f600083018461103b565b92915050565b6000806040838503121561107c5761107b610cea565b5b600083013567ffffffffffffffff81111561109a57611099610cef565b5b6110a685828601610f32565b92505060206110b785828601610dff565b9150509250929050565b6110ca81610dd6565b82525050565b60006020820190506110e560008301846110c1565b92915050565b6000819050919050565b6110fe816110eb565b82525050565b600060208201905061111960008301846110f5565b92915050565b6000819050919050565b6111328161111f565b82525050565b600060208201905061114d6000830184611129565b92915050565b600067ffffffffffffffff82111561116e5761116d610d0a565b5b602082029050602081019050919050565b611188816110eb565b811461119357600080fd5b50565b6000813590506111a58161117f565b92915050565b60006111be6111b984611153565b610d6a565b905080838252602082019050602084028301858111156111e1576111e0610db1565b5b835b8181101561120a57806111f68882611196565b8452602084019350506020810190506111e3565b5050509392505050565b600082601f83011261122957611228610cf4565b5b81356112398482602086016111ab565b91505092915050565b60008060006060848603121561125b5761125a610cea565b5b600084013567ffffffffffffffff81111561127957611278610cef565b5b61128586828701610e7d565b935050602084013567ffffffffffffffff8111156112a6576112a5610cef565b5b6112b286828701611214565b92505060406112c386828701610dff565b9150509250925092565b6000602082840312156112e3576112e2610cea565b5b60006112f184828501610dff565b91505092915050565b60008115159050919050565b61130f816112fa565b82525050565b600060208201905061132a6000830184611306565b92915050565b600067ffffffffffffffff82111561134b5761134a610d0a565b5b602082029050602081019050919050565b600061136f61136a84611330565b610d6a565b9050808382526020820190506020840283018581111561139257611391610db1565b5b835b818110156113d957803567ffffffffffffffff8111156113b7576113b6610cf4565b5b8086016113c48982610f32565b85526020850194505050602081019050611394565b5050509392505050565b600082601f8301126113f8576113f7610cf4565b5b813561140884826020860161135c565b91505092915050565b6000806040838503121561142857611427610cea565b5b600083013567ffffffffffffffff81111561144657611445610cef565b5b61145285828601610e7d565b925050602083013567ffffffffffffffff81111561147357611472610cef565b5b61147f858286016113e3565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6114be81610dd6565b82525050565b6114cd816110eb565b82525050565b6040820160008201516114e960008501826114b5565b5060208201516114fc60208501826114c4565b50505050565b600061150e83836114d3565b60408301905092915050565b6000602082019050919050565b600061153282611489565b61153c8185611494565b9350611547836114a5565b8060005b8381101561157857815161155f8882611502565b975061156a8361151a565b92505060018101905061154b565b5085935050505092915050565b6000602082019050818103600083015261159f8184611527565b905092915050565b6000806000606084860312156115c0576115bf610cea565b5b60006115ce86828701610dff565b93505060206115df86828701610dff565b92505060406115f086828701611196565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6007811061163a576116396115fa565b5b50565b600081905061164b82611629565b919050565b600061165b8261163d565b9050919050565b61166b81611650565b82525050565b60006020820190506116866000830184611662565b92915050565b600080604083850312156116a3576116a2610cea565b5b60006116b185828601611196565b925050602083013567ffffffffffffffff8111156116d2576116d1610cef565b5b6116de85828601610f32565b9150509250929050565b6000602082840312156116fe576116fd610cea565b5b600061170c84828501611196565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061174d83836114b5565b60208301905092915050565b6000602082019050919050565b600061177182611715565b61177b8185611720565b935061178683611731565b8060005b838110156117b757815161179e8882611741565b97506117a983611759565b92505060018101905061178a565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006117fc83836114c4565b60208301905092915050565b6000602082019050919050565b6000611820826117c4565b61182a81856117cf565b9350611835836117e0565b8060005b8381101561186657815161184d88826117f0565b975061185883611808565b925050600181019050611839565b5085935050505092915050565b6000606082019050818103600083015261188d8186611766565b905081810360208301526118a18185611815565b90506118b060408301846110c1565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60005b83811015611921578082015181840152602081019050611906565b60008484015250505050565b6000611938826118e7565b61194281856118f2565b9350611952818560208601611903565b61195b81610cf9565b840191505092915050565b600060408201905061197b60008301856110f5565b818103602083015261198d818461192d565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119d0826110eb565b91506119db836110eb565b92508282019050808211156119f3576119f2611996565b5b92915050565b6000604082019050611a0e60008301856110f5565b611a1b60208301846110c1565b9392505050565b611a2b816112fa565b8114611a3657600080fd5b50565b600081519050611a4881611a22565b92915050565b600060208284031215611a6457611a63610cea565b5b6000611a7284828501611a39565b91505092915050565b600081519050611a8a81610de8565b92915050565b6000611aa3611a9e84610d85565b610d6a565b90508083825260208201905060208402830185811115611ac657611ac5610db1565b5b835b81811015611aef5780611adb8882611a7b565b845260208401935050602081019050611ac8565b5050509392505050565b600082601f830112611b0e57611b0d610cf4565b5b8151611b1e848260208601611a90565b91505092915050565b600081519050611b368161117f565b92915050565b6000611b4f611b4a84611153565b610d6a565b90508083825260208201905060208402830185811115611b7257611b71610db1565b5b835b81811015611b9b5780611b878882611b27565b845260208401935050602081019050611b74565b5050509392505050565b600082601f830112611bba57611bb9610cf4565b5b8151611bca848260208601611b3c565b91505092915050565b6000611bde82610db6565b9050919050565b611bee81611bd3565b8114611bf957600080fd5b50565b600081519050611c0b81611be5565b92915050565b600080600060608486031215611c2a57611c29610cea565b5b600084015167ffffffffffffffff811115611c4857611c47610cef565b5b611c5486828701611af9565b935050602084015167ffffffffffffffff811115611c7557611c74610cef565b5b611c8186828701611ba5565b9250506040611c9286828701611bfc565b9150509250925092565b6000606082019050611cb160008301866110f5565b611cbe60208301856110c1565b611ccb60408301846110c1565b94935050505056fea26469706673582212207693d36b316bd35c3cbbbfd1e310897b7db4b795ff1cb46ca437ff959206ab4964736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0CF0AEA GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xEB11AF93 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xEB11AF93 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xEDD146CC EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xEF2920FC EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xF5B0DFB7 EQ PUSH2 0x3AC JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xA0CF0AEA EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB2B878D0 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xD9CAED12 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xDF868ED3 EQ PUSH2 0x2FF JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x42FDA9C7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x42FDA9C7 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x44469F98 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x4AB4BA42 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x4D31D087 EQ PUSH2 0x231 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0xA6F0EE9 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x15CC481E EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x2BBE0CAE EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x187 JUMPI PUSH2 0xFE JUMP JUMPDEST CALLDATASIZE PUSH2 0xFE JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xF60 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21B PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x314 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x1315 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x336 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH2 0x658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x66A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH2 0x718 JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x3F0 DUP4 DUP4 DUP4 PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x406 DUP4 DUP4 DUP4 PUSH2 0x814 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43D PUSH2 0x718 JUMP JUMPDEST PUSH2 0x445 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x44F DUP4 DUP4 PUSH2 0x819 JUMP JUMPDEST PUSH2 0x459 DUP4 DUP4 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP PUSH2 0x465 DUP4 DUP4 PUSH2 0x851 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x4A7 DUP2 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1873 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x4D9 DUP2 CALLER PUSH2 0x92C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F5 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 MLOAD SWAP1 POP DUP3 MLOAD DUP2 EQ PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7B49805600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x572 JUMPI PUSH2 0x571 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5AB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x598 PUSH2 0xCB0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x590 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x622 JUMPI PUSH2 0x5F7 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5CF JUMPI PUSH2 0x5CE PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5EA JUMPI PUSH2 0x5E9 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xAC0 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x60A JUMPI PUSH2 0x609 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5B1 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH2 0x638 DUP2 PUSH2 0x855 JUMP JUMPDEST PUSH2 0x643 DUP5 DUP5 DUP5 PUSH2 0xAFA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x653 PUSH2 0xB61 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x663 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x673 DUP3 PUSH2 0xBAB JUMP JUMPDEST PUSH32 0x91EFA3D50FECCDE0D0D202F8AE5C41CA0B2BE614CEBCB2BD2F4B019396E6568A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6C0 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x6CA DUP3 DUP3 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0x6D4 DUP3 DUP3 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x6DE DUP3 DUP3 PUSH2 0xC37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x6EA PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6F3 DUP2 PUSH2 0xC3B JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x19C5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x715 DUP2 PUSH2 0xC3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0x75FD2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SUB PUSH2 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DA3F98C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29E40D4B PUSH1 0x1 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP3 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x929 JUMPI PUSH1 0x40 MLOAD PUSH32 0x75FD2B100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 PUSH2 0x936 DUP2 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x94F SWAP2 SWAP1 PUSH2 0x1C11 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 DUP2 SUB PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB76571500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP2 EQ PUSH2 0x9CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB76571500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA82 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9EF JUMPI PUSH2 0x9EE PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA0E JUMPI PUSH2 0xA0D PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xA23 DUP6 DUP3 DUP5 PUSH2 0xAFA JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x463FFC2CF8B1596445C417388ED30E53EB67CF6668CB2BE7F0ADDF8A78C8441B DUP4 DUP8 DUP13 PUSH1 0x40 MLOAD PUSH2 0xA6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0x9D2 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC8 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB50 JUMPI PUSH2 0xB4B DUP3 DUP3 PUSH2 0xC41 JUMP JUMPDEST PUSH2 0xB5C JUMP JUMPDEST PUSH2 0xB5B DUP4 DUP4 DUP4 PUSH2 0xC61 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1569426800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB3 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD EQ PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x439A74C900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7FCCE2A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP7 GAS CALL PUSH2 0xC5D JUMPI PUSH4 0xB12D13EB PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST POP POP JUMP JUMPDEST DUP2 PUSH1 0x14 MSTORE DUP1 PUSH1 0x34 MSTORE PUSH16 0xA9059CBB000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 PUSH1 0x44 PUSH1 0x10 PUSH1 0x0 DUP8 GAS CALL RETURNDATASIZE ISZERO PUSH1 0x1 PUSH1 0x0 MLOAD EQ OR AND PUSH2 0xCA6 JUMPI PUSH4 0x90B8EC18 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x0 PUSH1 0x34 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xD42 DUP3 PUSH2 0xCF9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD61 JUMPI PUSH2 0xD60 PUSH2 0xD0A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD74 PUSH2 0xCE0 JUMP JUMPDEST SWAP1 POP PUSH2 0xD80 DUP3 DUP3 PUSH2 0xD39 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xDA0 JUMPI PUSH2 0xD9F PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE1 DUP3 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xDD6 JUMP JUMPDEST DUP2 EQ PUSH2 0xDFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0E DUP2 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE27 PUSH2 0xE22 DUP5 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE4A JUMPI PUSH2 0xE49 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE73 JUMPI DUP1 PUSH2 0xE5F DUP9 DUP3 PUSH2 0xDFF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE4C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE92 JUMPI PUSH2 0xE91 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xEA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xE14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xECB JUMPI PUSH2 0xECA PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH2 0xED4 DUP3 PUSH2 0xCF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF03 PUSH2 0xEFE DUP5 PUSH2 0xEB0 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF1F JUMPI PUSH2 0xF1E PUSH2 0xEAB JUMP JUMPDEST JUMPDEST PUSH2 0xF2A DUP5 DUP3 DUP6 PUSH2 0xEE1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF47 JUMPI PUSH2 0xF46 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF57 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xEF0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF78 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF97 JUMPI PUSH2 0xF96 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0xFA3 DUP7 DUP3 DUP8 ADD PUSH2 0xE7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFC4 JUMPI PUSH2 0xFC3 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0xFD0 DUP7 DUP3 DUP8 ADD PUSH2 0xF32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFE1 DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1010 PUSH2 0x100B PUSH2 0x1006 DUP5 PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0xFEB JUMP JUMPDEST PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1022 DUP3 PUSH2 0xFF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1034 DUP3 PUSH2 0x1017 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1044 DUP2 PUSH2 0x1029 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x105F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x103B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107C JUMPI PUSH2 0x107B PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109A JUMPI PUSH2 0x1099 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x10A6 DUP6 DUP3 DUP7 ADD PUSH2 0xF32 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10B7 DUP6 DUP3 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CA DUP2 PUSH2 0xDD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FE DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1119 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1132 DUP2 PUSH2 0x111F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x116E JUMPI PUSH2 0x116D PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1188 DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A5 DUP2 PUSH2 0x117F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BE PUSH2 0x11B9 DUP5 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x120A JUMPI DUP1 PUSH2 0x11F6 DUP9 DUP3 PUSH2 0x1196 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11E3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1229 JUMPI PUSH2 0x1228 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1239 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125B JUMPI PUSH2 0x125A PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1279 JUMPI PUSH2 0x1278 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x1285 DUP7 DUP3 DUP8 ADD PUSH2 0xE7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12A6 JUMPI PUSH2 0x12A5 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x12B2 DUP7 DUP3 DUP8 ADD PUSH2 0x1214 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x12C3 DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E3 JUMPI PUSH2 0x12E2 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F1 DUP5 DUP3 DUP6 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x130F DUP2 PUSH2 0x12FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1306 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0xD0A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136F PUSH2 0x136A DUP5 PUSH2 0x1330 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13D9 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B7 JUMPI PUSH2 0x13B6 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x13C4 DUP10 DUP3 PUSH2 0xF32 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1394 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1408 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x135C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1428 JUMPI PUSH2 0x1427 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1446 JUMPI PUSH2 0x1445 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x1452 DUP6 DUP3 DUP7 ADD PUSH2 0xE7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1473 JUMPI PUSH2 0x1472 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x147F DUP6 DUP3 DUP7 ADD PUSH2 0x13E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BE DUP2 PUSH2 0xDD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14CD DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x14E9 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x14B5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x14FC PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x14C4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150E DUP4 DUP4 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1532 DUP3 PUSH2 0x1489 JUMP JUMPDEST PUSH2 0x153C DUP2 DUP6 PUSH2 0x1494 JUMP JUMPDEST SWAP4 POP PUSH2 0x1547 DUP4 PUSH2 0x14A5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1578 JUMPI DUP2 MLOAD PUSH2 0x155F DUP9 DUP3 PUSH2 0x1502 JUMP JUMPDEST SWAP8 POP PUSH2 0x156A DUP4 PUSH2 0x151A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x154B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159F DUP2 DUP5 PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15CE DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15DF DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15F0 DUP7 DUP3 DUP8 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x15FA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x164B DUP3 PUSH2 0x1629 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x165B DUP3 PUSH2 0x163D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166B DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1686 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1662 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D2 JUMPI PUSH2 0x16D1 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x16DE DUP6 DUP3 DUP7 ADD PUSH2 0xF32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x170C DUP5 DUP3 DUP6 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174D DUP4 DUP4 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1771 DUP3 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x177B DUP2 DUP6 PUSH2 0x1720 JUMP JUMPDEST SWAP4 POP PUSH2 0x1786 DUP4 PUSH2 0x1731 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17B7 JUMPI DUP2 MLOAD PUSH2 0x179E DUP9 DUP3 PUSH2 0x1741 JUMP JUMPDEST SWAP8 POP PUSH2 0x17A9 DUP4 PUSH2 0x1759 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x178A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FC DUP4 DUP4 PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1820 DUP3 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x182A DUP2 DUP6 PUSH2 0x17CF JUMP JUMPDEST SWAP4 POP PUSH2 0x1835 DUP4 PUSH2 0x17E0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1866 JUMPI DUP2 MLOAD PUSH2 0x184D DUP9 DUP3 PUSH2 0x17F0 JUMP JUMPDEST SWAP8 POP PUSH2 0x1858 DUP4 PUSH2 0x1808 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1839 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x188D DUP2 DUP7 PUSH2 0x1766 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x18A1 DUP2 DUP6 PUSH2 0x1815 JUMP JUMPDEST SWAP1 POP PUSH2 0x18B0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1921 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1938 DUP3 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0x1942 DUP2 DUP6 PUSH2 0x18F2 JUMP JUMPDEST SWAP4 POP PUSH2 0x1952 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1903 JUMP JUMPDEST PUSH2 0x195B DUP2 PUSH2 0xCF9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x197B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10F5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x198D DUP2 DUP5 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19D0 DUP3 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0x19DB DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x1996 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A0E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x1A1B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A2B DUP2 PUSH2 0x12FA JUMP JUMPDEST DUP2 EQ PUSH2 0x1A36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A48 DUP2 PUSH2 0x1A22 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A72 DUP5 DUP3 DUP6 ADD PUSH2 0x1A39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A8A DUP2 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA3 PUSH2 0x1A9E DUP5 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1AC6 JUMPI PUSH2 0x1AC5 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AEF JUMPI DUP1 PUSH2 0x1ADB DUP9 DUP3 PUSH2 0x1A7B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1AC8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B0E JUMPI PUSH2 0x1B0D PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1B1E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B36 DUP2 PUSH2 0x117F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B4F PUSH2 0x1B4A DUP5 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0xDB1 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B9B JUMPI DUP1 PUSH2 0x1B87 DUP9 DUP3 PUSH2 0x1B27 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B74 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BBA JUMPI PUSH2 0x1BB9 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1BCA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDE DUP3 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEE DUP2 PUSH2 0x1BD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C0B DUP2 PUSH2 0x1BE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0xCEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x1C54 DUP7 DUP3 DUP8 ADD PUSH2 0x1AF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0xCEF JUMP JUMPDEST JUMPDEST PUSH2 0x1C81 DUP7 DUP3 DUP8 ADD PUSH2 0x1BA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C92 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CB1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x1CBE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x1CCB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x93D36B316BD35C3CBBBFD1E310897B7DB4B795FF1CB46C LOG4 CALLDATACOPY SELFDESTRUCT SWAP6 SWAP3 MOD 0xAB 0x49 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "422:2847:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10705:325:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6785:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9429:344;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6953:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7135:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2388:243:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7326:108:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12395:145;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4412:75:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11367:704:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;954:169:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7566:101:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7823:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;596:170:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10092:220:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8816:197;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10705:325;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10866:48:::2;10884:13;10899:5;10906:7;10866:17;:48::i;:::-;10924:42;10936:13;10951:5;10958:7;10924:11;:42::i;:::-;10976:47;10993:13;11008:5;11015:7;10976:16;:47::i;:::-;10705:325:::0;;;:::o;6785:86::-;6836:5;6860:4;6853:11;;6785:86;:::o;9429:344::-;9584:19;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;9619:40:::2;9644:5;9651:7;9619:24;:40::i;:::-;9683:34;9702:5;9709:7;9683:18;:34::i;:::-;9669:48;;9727:39;9751:5;9758:7;9727:23;:39::i;:::-;9429:344:::0;;;;:::o;6953:92::-;7006:7;7032:6;;7025:13;;6953:92;:::o;7135:100::-;7192:7;7218:10;7211:17;;7135:100;:::o;2388:243:9:-;2506:10;5954:30:7;5976:7;5954:21;:30::i;:::-;2526:17:9::1;2557:13;2572:8;2582:6;2546:43;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2526:63;;2597:27;2607:4;2613:10;2597:9;:27::i;:::-;2518:113;2388:243:::0;;;;:::o;7326:108:7:-;7391:7;7417:10;;7410:17;;7326:108;:::o;12395:145::-;12481:4;12504:29;12522:10;12504:17;:29::i;:::-;12497:36;;12395:145;;;:::o;4412:75:5:-;4445:42;4412:75;:::o;11367:704:7:-;11521:22;11559:23;11585:13;:20;11559:46;;11741:5;:12;11722:15;:31;11718:60;;11762:16;;;;;;;;;;;;;;11718:60;11789:30;11842:15;11822:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11789:69;;11873:9;11868:173;11888:15;11884:1;:19;11868:173;;;11933:38;11944:13;11958:1;11944:16;;;;;;;;:::i;:::-;;;;;;;;11962:5;11968:1;11962:8;;;;;;;;:::i;:::-;;;;;;;;11933:10;:38::i;:::-;11920:7;11928:1;11920:10;;;;;;;;:::i;:::-;;;;;;;:51;;;;12013:3;;;;;;;11868:173;;;;12057:7;12050:14;;;;11367:704;;;;:::o;954:169:9:-;1050:10;5954:30:7;5976:7;5954:21;:30::i;:::-;1072:44:9::1;1088:6;1096:10;1108:7;1072:15;:44::i;:::-;954:169:::0;;;;:::o;7566:101:7:-;7622:4;7645:15;:13;:15::i;:::-;7638:22;;7566:101;:::o;7823:146::-;7904:6;7929:33;7949:12;7929:19;:33::i;:::-;7922:40;;7823:146;;;:::o;596:170:9:-;689:28;709:7;689:19;:28::i;:::-;732:27;744:7;753:5;732:27;;;;;;;:::i;:::-;;;;;;;;596:170;;:::o;10092:220:7:-;5660:16;:14;:16::i;:::-;6532:23:::1;:21;:23::i;:::-;10199:31:::2;10215:5;10222:7;10199:15;:31::i;:::-;10240:25;10250:5;10257:7;10240:9;:25::i;:::-;10275:30;10290:5;10297:7;10275:14;:30::i;:::-;10092:220:::0;;:::o;8816:197::-;5660:16;:14;:16::i;:::-;8898:34:::1;8924:7;8898:25;:34::i;:::-;8956:7;8942:10;;:21;;;;;;;:::i;:::-;;;;;;;;8973:33;8998:7;8973:24;:33::i;:::-;8816:197:::0;:::o;12814:111::-;12890:4;12868:27;;:10;:27;;;12864:54;;12904:14;;;;;;;;;;;;;;12864:54;12814:111::o;13771:105::-;13842:1;13832:6;;:11;13828:41;;13852:17;;;;;;;;;;;;;;13828:41;13771:105::o;18949:115::-;;;;:::o;2637:118:9:-;2742:6;;;;;;;;;;;;;;19320:114:7;;;;:::o;17810:90::-;;;:::o;3001:125:9:-;3087:7;3113:6;;;;;;;;;;;;;;18077:89:7;;;:::o;13122:142::-;13199:4;:18;;;13218:6;;13226:7;13199:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13194:63;;13243:14;;;;;;;;;;;;;;13194:63;13122:142;:::o;1329:1020:9:-;1427:7;5954:30:7;5976:7;5954:21;:30::i;:::-;1474::9::1;1506:25:::0;1533:14:::1;1574:5;1563:50;;;;;;;;;;;;:::i;:::-;1473:140;;;;;;1624:20;1647:13;:20;1624:43;;1739:1;1723:12;:17:::0;1719:78:::1;;1763:23;;;;;;;;;;;;;;1719:78;1884:8;:15;1868:12;:31;1864:92;;1922:23;;;;;;;;;;;;;;1864:92;2018:9;2013:330;2033:12;2029:1;:16;2013:330;;;2062:15;2080:8;2089:1;2080:11;;;;;;;;:::i;:::-;;;;;;;;2062:29;;2105:20;2128:13;2142:1;2128:16;;;;;;;;:::i;:::-;;;;;;;;2105:39;;2159:46;2175:6;2183:12;2197:7;2159:15;:46::i;:::-;2234:12;2224:49;;;2248:7;2257:6;2265:7;2224:49;;;;;;;;:::i;:::-;;;;;;;;2315:3;;;;;2048:295;;2013:330;;;;1436:913;;;;1329:1020:::0;;;:::o;2883:112::-;2959:4;2982:6;;;;;;;;;;;;;;3132:135;3215:20;;:::i;:::-;3254:6;;;;;;;;;;;;;;6761:277:6;4445:42:5;6863:16:6;;:6;:16;;;6859:173;;6895:45;6927:3;6932:7;6895:31;:45::i;:::-;6859:173;;;6971:50;7000:6;7008:3;7013:7;6971:28;:50::i;:::-;6859:173;6761:277;;;:::o;14400:96:7:-;14456:4;14479:10;;;;;;;;;;;14472:17;;14400:96;:::o;2761:116:9:-;2839:6;2864;;;;;;;;;;;;;;8269:350:7;5660:16;:14;:16::i;:::-;8438:1:::1;8428:6;;:11;8424:45;;8448:21;;;;;;;;;;;;;;8424:45;8567:1;8556:7;:12:::0;8552:34:::1;;8577:9;;;;;;;;;;;;;;8552:34;8605:7;8596:6;:16;;;;8269:350:::0;:::o;18349:81::-;;;:::o;18612:80::-;;;:::o;17365:71::-;;:::o;17562:70::-;;:::o;2455:490:8:-;2711:4;2705;2699;2693;2685:6;2681:2;2674:5;2669:47;2659:270;;2822:10;2816:4;2809:24;2910:4;2904;2897:18;2659:270;2455:490;;:::o;11454:1189::-;11617:2;11611:4;11604:16;11674:6;11668:4;11661:20;11814:34;11808:4;11801:48;12272:4;12266;12260;12254;12251:1;12244:5;12237;12232:45;12192:16;12185:24;12181:1;12174:4;12168:11;12165:18;12162:48;11890:405;11863:655;;12411:10;12405:4;12398:24;12499:4;12493;12486:18;11863:655;12625:1;12619:4;12612:15;11454:1189;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:311::-;1250:4;1340:18;1332:6;1329:30;1326:56;;;1362:18;;:::i;:::-;1326:56;1412:4;1404:6;1400:17;1392:25;;1472:4;1466;1462:15;1454:23;;1173:311;;;:::o;1490:117::-;1599:1;1596;1589:12;1613:126;1650:7;1690:42;1683:5;1679:54;1668:65;;1613:126;;;:::o;1745:96::-;1782:7;1811:24;1829:5;1811:24;:::i;:::-;1800:35;;1745:96;;;:::o;1847:122::-;1920:24;1938:5;1920:24;:::i;:::-;1913:5;1910:35;1900:63;;1959:1;1956;1949:12;1900:63;1847:122;:::o;1975:139::-;2021:5;2059:6;2046:20;2037:29;;2075:33;2102:5;2075:33;:::i;:::-;1975:139;;;;:::o;2137:710::-;2233:5;2258:81;2274:64;2331:6;2274:64;:::i;:::-;2258:81;:::i;:::-;2249:90;;2359:5;2388:6;2381:5;2374:21;2422:4;2415:5;2411:16;2404:23;;2475:4;2467:6;2463:17;2455:6;2451:30;2504:3;2496:6;2493:15;2490:122;;;2523:79;;:::i;:::-;2490:122;2638:6;2621:220;2655:6;2650:3;2647:15;2621:220;;;2730:3;2759:37;2792:3;2780:10;2759:37;:::i;:::-;2754:3;2747:50;2826:4;2821:3;2817:14;2810:21;;2697:144;2681:4;2676:3;2672:14;2665:21;;2621:220;;;2625:21;2239:608;;2137:710;;;;;:::o;2870:370::-;2941:5;2990:3;2983:4;2975:6;2971:17;2967:27;2957:122;;2998:79;;:::i;:::-;2957:122;3115:6;3102:20;3140:94;3230:3;3222:6;3215:4;3207:6;3203:17;3140:94;:::i;:::-;3131:103;;2947:293;2870:370;;;;:::o;3246:117::-;3355:1;3352;3345:12;3369:307;3430:4;3520:18;3512:6;3509:30;3506:56;;;3542:18;;:::i;:::-;3506:56;3580:29;3602:6;3580:29;:::i;:::-;3572:37;;3664:4;3658;3654:15;3646:23;;3369:307;;;:::o;3682:146::-;3779:6;3774:3;3769;3756:30;3820:1;3811:6;3806:3;3802:16;3795:27;3682:146;;;:::o;3834:423::-;3911:5;3936:65;3952:48;3993:6;3952:48;:::i;:::-;3936:65;:::i;:::-;3927:74;;4024:6;4017:5;4010:21;4062:4;4055:5;4051:16;4100:3;4091:6;4086:3;4082:16;4079:25;4076:112;;;4107:79;;:::i;:::-;4076:112;4197:54;4244:6;4239:3;4234;4197:54;:::i;:::-;3917:340;3834:423;;;;;:::o;4276:338::-;4331:5;4380:3;4373:4;4365:6;4361:17;4357:27;4347:122;;4388:79;;:::i;:::-;4347:122;4505:6;4492:20;4530:78;4604:3;4596:6;4589:4;4581:6;4577:17;4530:78;:::i;:::-;4521:87;;4337:277;4276:338;;;;:::o;4620:1007::-;4731:6;4739;4747;4796:2;4784:9;4775:7;4771:23;4767:32;4764:119;;;4802:79;;:::i;:::-;4764:119;4950:1;4939:9;4935:17;4922:31;4980:18;4972:6;4969:30;4966:117;;;5002:79;;:::i;:::-;4966:117;5107:78;5177:7;5168:6;5157:9;5153:22;5107:78;:::i;:::-;5097:88;;4893:302;5262:2;5251:9;5247:18;5234:32;5293:18;5285:6;5282:30;5279:117;;;5315:79;;:::i;:::-;5279:117;5420:62;5474:7;5465:6;5454:9;5450:22;5420:62;:::i;:::-;5410:72;;5205:287;5531:2;5557:53;5602:7;5593:6;5582:9;5578:22;5557:53;:::i;:::-;5547:63;;5502:118;4620:1007;;;;;:::o;5633:60::-;5661:3;5682:5;5675:12;;5633:60;;;:::o;5699:142::-;5749:9;5782:53;5800:34;5809:24;5827:5;5809:24;:::i;:::-;5800:34;:::i;:::-;5782:53;:::i;:::-;5769:66;;5699:142;;;:::o;5847:126::-;5897:9;5930:37;5961:5;5930:37;:::i;:::-;5917:50;;5847:126;;;:::o;5979:139::-;6042:9;6075:37;6106:5;6075:37;:::i;:::-;6062:50;;5979:139;;;:::o;6124:157::-;6224:50;6268:5;6224:50;:::i;:::-;6219:3;6212:63;6124:157;;:::o;6287:248::-;6393:4;6431:2;6420:9;6416:18;6408:26;;6444:84;6525:1;6514:9;6510:17;6501:6;6444:84;:::i;:::-;6287:248;;;;:::o;6541:652::-;6618:6;6626;6675:2;6663:9;6654:7;6650:23;6646:32;6643:119;;;6681:79;;:::i;:::-;6643:119;6829:1;6818:9;6814:17;6801:31;6859:18;6851:6;6848:30;6845:117;;;6881:79;;:::i;:::-;6845:117;6986:62;7040:7;7031:6;7020:9;7016:22;6986:62;:::i;:::-;6976:72;;6772:286;7097:2;7123:53;7168:7;7159:6;7148:9;7144:22;7123:53;:::i;:::-;7113:63;;7068:118;6541:652;;;;;:::o;7199:118::-;7286:24;7304:5;7286:24;:::i;:::-;7281:3;7274:37;7199:118;;:::o;7323:222::-;7416:4;7454:2;7443:9;7439:18;7431:26;;7467:71;7535:1;7524:9;7520:17;7511:6;7467:71;:::i;:::-;7323:222;;;;:::o;7551:77::-;7588:7;7617:5;7606:16;;7551:77;;;:::o;7634:118::-;7721:24;7739:5;7721:24;:::i;:::-;7716:3;7709:37;7634:118;;:::o;7758:222::-;7851:4;7889:2;7878:9;7874:18;7866:26;;7902:71;7970:1;7959:9;7955:17;7946:6;7902:71;:::i;:::-;7758:222;;;;:::o;7986:77::-;8023:7;8052:5;8041:16;;7986:77;;;:::o;8069:118::-;8156:24;8174:5;8156:24;:::i;:::-;8151:3;8144:37;8069:118;;:::o;8193:222::-;8286:4;8324:2;8313:9;8309:18;8301:26;;8337:71;8405:1;8394:9;8390:17;8381:6;8337:71;:::i;:::-;8193:222;;;;:::o;8421:311::-;8498:4;8588:18;8580:6;8577:30;8574:56;;;8610:18;;:::i;:::-;8574:56;8660:4;8652:6;8648:17;8640:25;;8720:4;8714;8710:15;8702:23;;8421:311;;;:::o;8738:122::-;8811:24;8829:5;8811:24;:::i;:::-;8804:5;8801:35;8791:63;;8850:1;8847;8840:12;8791:63;8738:122;:::o;8866:139::-;8912:5;8950:6;8937:20;8928:29;;8966:33;8993:5;8966:33;:::i;:::-;8866:139;;;;:::o;9028:710::-;9124:5;9149:81;9165:64;9222:6;9165:64;:::i;:::-;9149:81;:::i;:::-;9140:90;;9250:5;9279:6;9272:5;9265:21;9313:4;9306:5;9302:16;9295:23;;9366:4;9358:6;9354:17;9346:6;9342:30;9395:3;9387:6;9384:15;9381:122;;;9414:79;;:::i;:::-;9381:122;9529:6;9512:220;9546:6;9541:3;9538:15;9512:220;;;9621:3;9650:37;9683:3;9671:10;9650:37;:::i;:::-;9645:3;9638:50;9717:4;9712:3;9708:14;9701:21;;9588:144;9572:4;9567:3;9563:14;9556:21;;9512:220;;;9516:21;9130:608;;9028:710;;;;;:::o;9761:370::-;9832:5;9881:3;9874:4;9866:6;9862:17;9858:27;9848:122;;9889:79;;:::i;:::-;9848:122;10006:6;9993:20;10031:94;10121:3;10113:6;10106:4;10098:6;10094:17;10031:94;:::i;:::-;10022:103;;9838:293;9761:370;;;;:::o;10137:1039::-;10264:6;10272;10280;10329:2;10317:9;10308:7;10304:23;10300:32;10297:119;;;10335:79;;:::i;:::-;10297:119;10483:1;10472:9;10468:17;10455:31;10513:18;10505:6;10502:30;10499:117;;;10535:79;;:::i;:::-;10499:117;10640:78;10710:7;10701:6;10690:9;10686:22;10640:78;:::i;:::-;10630:88;;10426:302;10795:2;10784:9;10780:18;10767:32;10826:18;10818:6;10815:30;10812:117;;;10848:79;;:::i;:::-;10812:117;10953:78;11023:7;11014:6;11003:9;10999:22;10953:78;:::i;:::-;10943:88;;10738:303;11080:2;11106:53;11151:7;11142:6;11131:9;11127:22;11106:53;:::i;:::-;11096:63;;11051:118;10137:1039;;;;;:::o;11182:329::-;11241:6;11290:2;11278:9;11269:7;11265:23;11261:32;11258:119;;;11296:79;;:::i;:::-;11258:119;11416:1;11441:53;11486:7;11477:6;11466:9;11462:22;11441:53;:::i;:::-;11431:63;;11387:117;11182:329;;;;:::o;11517:90::-;11551:7;11594:5;11587:13;11580:21;11569:32;;11517:90;;;:::o;11613:109::-;11694:21;11709:5;11694:21;:::i;:::-;11689:3;11682:34;11613:109;;:::o;11728:210::-;11815:4;11853:2;11842:9;11838:18;11830:26;;11866:65;11928:1;11917:9;11913:17;11904:6;11866:65;:::i;:::-;11728:210;;;;:::o;11944:320::-;12030:4;12120:18;12112:6;12109:30;12106:56;;;12142:18;;:::i;:::-;12106:56;12192:4;12184:6;12180:17;12172:25;;12252:4;12246;12242:15;12234:23;;11944:320;;;:::o;12285:942::-;12390:5;12415:90;12431:73;12497:6;12431:73;:::i;:::-;12415:90;:::i;:::-;12406:99;;12525:5;12554:6;12547:5;12540:21;12588:4;12581:5;12577:16;12570:23;;12641:4;12633:6;12629:17;12621:6;12617:30;12670:3;12662:6;12659:15;12656:122;;;12689:79;;:::i;:::-;12656:122;12804:6;12787:434;12821:6;12816:3;12813:15;12787:434;;;12910:3;12897:17;12946:18;12933:11;12930:35;12927:122;;;12968:79;;:::i;:::-;12927:122;13092:11;13084:6;13080:24;13130:46;13172:3;13160:10;13130:46;:::i;:::-;13125:3;13118:59;13206:4;13201:3;13197:14;13190:21;;12863:358;;12847:4;12842:3;12838:14;12831:21;;12787:434;;;12791:21;12396:831;;12285:942;;;;;:::o;13248:388::-;13328:5;13377:3;13370:4;13362:6;13358:17;13354:27;13344:122;;13385:79;;:::i;:::-;13344:122;13502:6;13489:20;13527:103;13626:3;13618:6;13611:4;13603:6;13599:17;13527:103;:::i;:::-;13518:112;;13334:302;13248:388;;;;:::o;13642:912::-;13769:6;13777;13826:2;13814:9;13805:7;13801:23;13797:32;13794:119;;;13832:79;;:::i;:::-;13794:119;13980:1;13969:9;13965:17;13952:31;14010:18;14002:6;13999:30;13996:117;;;14032:79;;:::i;:::-;13996:117;14137:78;14207:7;14198:6;14187:9;14183:22;14137:78;:::i;:::-;14127:88;;13923:302;14292:2;14281:9;14277:18;14264:32;14323:18;14315:6;14312:30;14309:117;;;14345:79;;:::i;:::-;14309:117;14450:87;14529:7;14520:6;14509:9;14505:22;14450:87;:::i;:::-;14440:97;;14235:312;13642:912;;;;;:::o;14560:144::-;14657:6;14691:5;14685:12;14675:22;;14560:144;;;:::o;14710:214::-;14839:11;14873:6;14868:3;14861:19;14913:4;14908:3;14904:14;14889:29;;14710:214;;;;:::o;14930:162::-;15027:4;15050:3;15042:11;;15080:4;15075:3;15071:14;15063:22;;14930:162;;;:::o;15098:108::-;15175:24;15193:5;15175:24;:::i;:::-;15170:3;15163:37;15098:108;;:::o;15212:::-;15289:24;15307:5;15289:24;:::i;:::-;15284:3;15277:37;15212:108;;:::o;15398:521::-;15545:4;15540:3;15536:14;15644:4;15637:5;15633:16;15627:23;15663:63;15720:4;15715:3;15711:14;15697:12;15663:63;:::i;:::-;15560:176;15820:4;15813:5;15809:16;15803:23;15839:63;15896:4;15891:3;15887:14;15873:12;15839:63;:::i;:::-;15746:166;15514:405;15398:521;;:::o;15925:299::-;16054:10;16075:106;16177:3;16169:6;16075:106;:::i;:::-;16213:4;16208:3;16204:14;16190:28;;15925:299;;;;:::o;16230:143::-;16330:4;16362;16357:3;16353:14;16345:22;;16230:143;;;:::o;16455:972::-;16634:3;16663:84;16741:5;16663:84;:::i;:::-;16763:116;16872:6;16867:3;16763:116;:::i;:::-;16756:123;;16903:86;16983:5;16903:86;:::i;:::-;17012:7;17043:1;17028:374;17053:6;17050:1;17047:13;17028:374;;;17129:6;17123:13;17156:123;17275:3;17260:13;17156:123;:::i;:::-;17149:130;;17302:90;17385:6;17302:90;:::i;:::-;17292:100;;17088:314;17075:1;17072;17068:9;17063:14;;17028:374;;;17032:14;17418:3;17411:10;;16639:788;;;16455:972;;;;:::o;17433:493::-;17636:4;17674:2;17663:9;17659:18;17651:26;;17723:9;17717:4;17713:20;17709:1;17698:9;17694:17;17687:47;17751:168;17914:4;17905:6;17751:168;:::i;:::-;17743:176;;17433:493;;;;:::o;17932:619::-;18009:6;18017;18025;18074:2;18062:9;18053:7;18049:23;18045:32;18042:119;;;18080:79;;:::i;:::-;18042:119;18200:1;18225:53;18270:7;18261:6;18250:9;18246:22;18225:53;:::i;:::-;18215:63;;18171:117;18327:2;18353:53;18398:7;18389:6;18378:9;18374:22;18353:53;:::i;:::-;18343:63;;18298:118;18455:2;18481:53;18526:7;18517:6;18506:9;18502:22;18481:53;:::i;:::-;18471:63;;18426:118;17932:619;;;;;:::o;18557:180::-;18605:77;18602:1;18595:88;18702:4;18699:1;18692:15;18726:4;18723:1;18716:15;18743:115;18826:1;18819:5;18816:12;18806:46;;18832:18;;:::i;:::-;18806:46;18743:115;:::o;18864:131::-;18911:7;18940:5;18929:16;;18946:43;18983:5;18946:43;:::i;:::-;18864:131;;;:::o;19001:::-;19059:9;19092:34;19120:5;19092:34;:::i;:::-;19079:47;;19001:131;;;:::o;19138:147::-;19233:45;19272:5;19233:45;:::i;:::-;19228:3;19221:58;19138:147;;:::o;19291:238::-;19392:4;19430:2;19419:9;19415:18;19407:26;;19443:79;19519:1;19508:9;19504:17;19495:6;19443:79;:::i;:::-;19291:238;;;;:::o;19535:652::-;19612:6;19620;19669:2;19657:9;19648:7;19644:23;19640:32;19637:119;;;19675:79;;:::i;:::-;19637:119;19795:1;19820:53;19865:7;19856:6;19845:9;19841:22;19820:53;:::i;:::-;19810:63;;19766:117;19950:2;19939:9;19935:18;19922:32;19981:18;19973:6;19970:30;19967:117;;;20003:79;;:::i;:::-;19967:117;20108:62;20162:7;20153:6;20142:9;20138:22;20108:62;:::i;:::-;20098:72;;19893:287;19535:652;;;;;:::o;20193:329::-;20252:6;20301:2;20289:9;20280:7;20276:23;20272:32;20269:119;;;20307:79;;:::i;:::-;20269:119;20427:1;20452:53;20497:7;20488:6;20477:9;20473:22;20452:53;:::i;:::-;20442:63;;20398:117;20193:329;;;;:::o;20528:114::-;20595:6;20629:5;20623:12;20613:22;;20528:114;;;:::o;20648:184::-;20747:11;20781:6;20776:3;20769:19;20821:4;20816:3;20812:14;20797:29;;20648:184;;;;:::o;20838:132::-;20905:4;20928:3;20920:11;;20958:4;20953:3;20949:14;20941:22;;20838:132;;;:::o;20976:179::-;21045:10;21066:46;21108:3;21100:6;21066:46;:::i;:::-;21144:4;21139:3;21135:14;21121:28;;20976:179;;;;:::o;21161:113::-;21231:4;21263;21258:3;21254:14;21246:22;;21161:113;;;:::o;21310:732::-;21429:3;21458:54;21506:5;21458:54;:::i;:::-;21528:86;21607:6;21602:3;21528:86;:::i;:::-;21521:93;;21638:56;21688:5;21638:56;:::i;:::-;21717:7;21748:1;21733:284;21758:6;21755:1;21752:13;21733:284;;;21834:6;21828:13;21861:63;21920:3;21905:13;21861:63;:::i;:::-;21854:70;;21947:60;22000:6;21947:60;:::i;:::-;21937:70;;21793:224;21780:1;21777;21773:9;21768:14;;21733:284;;;21737:14;22033:3;22026:10;;21434:608;;;21310:732;;;;:::o;22048:114::-;22115:6;22149:5;22143:12;22133:22;;22048:114;;;:::o;22168:184::-;22267:11;22301:6;22296:3;22289:19;22341:4;22336:3;22332:14;22317:29;;22168:184;;;;:::o;22358:132::-;22425:4;22448:3;22440:11;;22478:4;22473:3;22469:14;22461:22;;22358:132;;;:::o;22496:179::-;22565:10;22586:46;22628:3;22620:6;22586:46;:::i;:::-;22664:4;22659:3;22655:14;22641:28;;22496:179;;;;:::o;22681:113::-;22751:4;22783;22778:3;22774:14;22766:22;;22681:113;;;:::o;22830:732::-;22949:3;22978:54;23026:5;22978:54;:::i;:::-;23048:86;23127:6;23122:3;23048:86;:::i;:::-;23041:93;;23158:56;23208:5;23158:56;:::i;:::-;23237:7;23268:1;23253:284;23278:6;23275:1;23272:13;23253:284;;;23354:6;23348:13;23381:63;23440:3;23425:13;23381:63;:::i;:::-;23374:70;;23467:60;23520:6;23467:60;:::i;:::-;23457:70;;23313:224;23300:1;23297;23293:9;23288:14;;23253:284;;;23257:14;23553:3;23546:10;;22954:608;;;22830:732;;;;:::o;23568:744::-;23817:4;23855:2;23844:9;23840:18;23832:26;;23904:9;23898:4;23894:20;23890:1;23879:9;23875:17;23868:47;23932:108;24035:4;24026:6;23932:108;:::i;:::-;23924:116;;24087:9;24081:4;24077:20;24072:2;24061:9;24057:18;24050:48;24115:108;24218:4;24209:6;24115:108;:::i;:::-;24107:116;;24233:72;24301:2;24290:9;24286:18;24277:6;24233:72;:::i;:::-;23568:744;;;;;;:::o;24318:180::-;24366:77;24363:1;24356:88;24463:4;24460:1;24453:15;24487:4;24484:1;24477:15;24504:98;24555:6;24589:5;24583:12;24573:22;;24504:98;;;:::o;24608:168::-;24691:11;24725:6;24720:3;24713:19;24765:4;24760:3;24756:14;24741:29;;24608:168;;;;:::o;24782:246::-;24863:1;24873:113;24887:6;24884:1;24881:13;24873:113;;;24972:1;24967:3;24963:11;24957:18;24953:1;24948:3;24944:11;24937:39;24909:2;24906:1;24902:10;24897:15;;24873:113;;;25020:1;25011:6;25006:3;25002:16;24995:27;24844:184;24782:246;;;:::o;25034:373::-;25120:3;25148:38;25180:5;25148:38;:::i;:::-;25202:70;25265:6;25260:3;25202:70;:::i;:::-;25195:77;;25281:65;25339:6;25334:3;25327:4;25320:5;25316:16;25281:65;:::i;:::-;25371:29;25393:6;25371:29;:::i;:::-;25366:3;25362:39;25355:46;;25124:283;25034:373;;;;:::o;25413:419::-;25552:4;25590:2;25579:9;25575:18;25567:26;;25603:71;25671:1;25660:9;25656:17;25647:6;25603:71;:::i;:::-;25721:9;25715:4;25711:20;25706:2;25695:9;25691:18;25684:48;25749:76;25820:4;25811:6;25749:76;:::i;:::-;25741:84;;25413:419;;;;;:::o;25838:180::-;25886:77;25883:1;25876:88;25983:4;25980:1;25973:15;26007:4;26004:1;25997:15;26024:191;26064:3;26083:20;26101:1;26083:20;:::i;:::-;26078:25;;26117:20;26135:1;26117:20;:::i;:::-;26112:25;;26160:1;26157;26153:9;26146:16;;26181:3;26178:1;26175:10;26172:36;;;26188:18;;:::i;:::-;26172:36;26024:191;;;;:::o;26221:332::-;26342:4;26380:2;26369:9;26365:18;26357:26;;26393:71;26461:1;26450:9;26446:17;26437:6;26393:71;:::i;:::-;26474:72;26542:2;26531:9;26527:18;26518:6;26474:72;:::i;:::-;26221:332;;;;;:::o;26559:116::-;26629:21;26644:5;26629:21;:::i;:::-;26622:5;26619:32;26609:60;;26665:1;26662;26655:12;26609:60;26559:116;:::o;26681:137::-;26735:5;26766:6;26760:13;26751:22;;26782:30;26806:5;26782:30;:::i;:::-;26681:137;;;;:::o;26824:345::-;26891:6;26940:2;26928:9;26919:7;26915:23;26911:32;26908:119;;;26946:79;;:::i;:::-;26908:119;27066:1;27091:61;27144:7;27135:6;27124:9;27120:22;27091:61;:::i;:::-;27081:71;;27037:125;26824:345;;;;:::o;27175:143::-;27232:5;27263:6;27257:13;27248:22;;27279:33;27306:5;27279:33;:::i;:::-;27175:143;;;;:::o;27341:732::-;27448:5;27473:81;27489:64;27546:6;27489:64;:::i;:::-;27473:81;:::i;:::-;27464:90;;27574:5;27603:6;27596:5;27589:21;27637:4;27630:5;27626:16;27619:23;;27690:4;27682:6;27678:17;27670:6;27666:30;27719:3;27711:6;27708:15;27705:122;;;27738:79;;:::i;:::-;27705:122;27853:6;27836:231;27870:6;27865:3;27862:15;27836:231;;;27945:3;27974:48;28018:3;28006:10;27974:48;:::i;:::-;27969:3;27962:61;28052:4;28047:3;28043:14;28036:21;;27912:155;27896:4;27891:3;27887:14;27880:21;;27836:231;;;27840:21;27454:619;;27341:732;;;;;:::o;28096:385::-;28178:5;28227:3;28220:4;28212:6;28208:17;28204:27;28194:122;;28235:79;;:::i;:::-;28194:122;28345:6;28339:13;28370:105;28471:3;28463:6;28456:4;28448:6;28444:17;28370:105;:::i;:::-;28361:114;;28184:297;28096:385;;;;:::o;28487:143::-;28544:5;28575:6;28569:13;28560:22;;28591:33;28618:5;28591:33;:::i;:::-;28487:143;;;;:::o;28653:732::-;28760:5;28785:81;28801:64;28858:6;28801:64;:::i;:::-;28785:81;:::i;:::-;28776:90;;28886:5;28915:6;28908:5;28901:21;28949:4;28942:5;28938:16;28931:23;;29002:4;28994:6;28990:17;28982:6;28978:30;29031:3;29023:6;29020:15;29017:122;;;29050:79;;:::i;:::-;29017:122;29165:6;29148:231;29182:6;29177:3;29174:15;29148:231;;;29257:3;29286:48;29330:3;29318:10;29286:48;:::i;:::-;29281:3;29274:61;29364:4;29359:3;29355:14;29348:21;;29224:155;29208:4;29203:3;29199:14;29192:21;;29148:231;;;29152:21;28766:619;;28653:732;;;;;:::o;29408:385::-;29490:5;29539:3;29532:4;29524:6;29520:17;29516:27;29506:122;;29547:79;;:::i;:::-;29506:122;29657:6;29651:13;29682:105;29783:3;29775:6;29768:4;29760:6;29756:17;29682:105;:::i;:::-;29673:114;;29496:297;29408:385;;;;:::o;29799:104::-;29844:7;29873:24;29891:5;29873:24;:::i;:::-;29862:35;;29799:104;;;:::o;29909:138::-;29990:32;30016:5;29990:32;:::i;:::-;29983:5;29980:43;29970:71;;30037:1;30034;30027:12;29970:71;29909:138;:::o;30053:159::-;30118:5;30149:6;30143:13;30134:22;;30165:41;30200:5;30165:41;:::i;:::-;30053:159;;;;:::o;30218:1085::-;30364:6;30372;30380;30429:2;30417:9;30408:7;30404:23;30400:32;30397:119;;;30435:79;;:::i;:::-;30397:119;30576:1;30565:9;30561:17;30555:24;30606:18;30598:6;30595:30;30592:117;;;30628:79;;:::i;:::-;30592:117;30733:89;30814:7;30805:6;30794:9;30790:22;30733:89;:::i;:::-;30723:99;;30526:306;30892:2;30881:9;30877:18;30871:25;30923:18;30915:6;30912:30;30909:117;;;30945:79;;:::i;:::-;30909:117;31050:89;31131:7;31122:6;31111:9;31107:22;31050:89;:::i;:::-;31040:99;;30842:307;31188:2;31214:72;31278:7;31269:6;31258:9;31254:22;31214:72;:::i;:::-;31204:82;;31159:137;30218:1085;;;;;:::o;31309:442::-;31458:4;31496:2;31485:9;31481:18;31473:26;;31509:71;31577:1;31566:9;31562:17;31553:6;31509:71;:::i;:::-;31590:72;31658:2;31647:9;31643:18;31634:6;31590:72;:::i;:::-;31672;31740:2;31729:9;31725:18;31716:6;31672:72;:::i;:::-;31309:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1486600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NATIVE()": "401",
								"allocate(address[],uint256[],address)": "infinite",
								"allocate(bytes,address)": "infinite",
								"distribute(address[],bytes,address)": "infinite",
								"getAllo()": "infinite",
								"getPayouts(address[],bytes[])": "infinite",
								"getPoolAmount()": "2504",
								"getPoolId()": "2527",
								"getRecipientStatus(address)": "535",
								"getStrategyId()": "infinite",
								"increasePoolAmount(uint256)": "infinite",
								"initialize(uint256,bytes)": "infinite",
								"isPoolActive()": "2603",
								"isValidAllocator(address)": "602",
								"registerRecipient(bytes,address)": "infinite",
								"withdraw(address,address,uint256)": "infinite"
							},
							"internal": {
								"_allocate(bytes memory,address)": "infinite",
								"_distribute(address[] memory,bytes memory,address)": "infinite",
								"_getPayout(address,bytes memory)": "infinite",
								"_getRecipientStatus(address)": "infinite",
								"_isValidAllocator(address)": "infinite",
								"_registerRecipient(bytes memory,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 522,
									"end": 590,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 590,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 522,
									"end": 590,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 522,
									"end": 590,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 522,
									"end": 590,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 522,
									"end": 590,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 522,
									"end": 590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 522,
									"end": 590,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 522,
									"end": 590,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 562,
									"end": 567,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "PUSH",
									"source": 7,
									"value": "5965657465722053747261746567790000000000000000000000000000000000"
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5281,
									"end": 5286,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5268,
									"end": 5287,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5331,
									"end": 5336,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5320,
									"end": 5337,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5320,
									"end": 5337,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5310,
									"end": 5338,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5297,
									"end": 5338,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5210,
									"end": 5345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 522,
									"end": 590,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1476,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1307,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 1402,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1425,
									"end": 1431,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1420,
									"end": 1423,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1413,
									"end": 1432,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1465,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1460,
									"end": 1463,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1456,
									"end": 1470,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1441,
									"end": 1470,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1441,
									"end": 1470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1476,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1476,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1476,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1476,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1728,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 1728,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1563,
									"end": 1564,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1573,
									"end": 1686,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1573,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1587,
									"end": 1593,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1584,
									"end": 1585,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1581,
									"end": 1594,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1573,
									"end": 1686,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1573,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1573,
									"end": 1686,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1673,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1667,
									"end": 1670,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1663,
									"end": 1674,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1657,
									"end": 1675,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1653,
									"end": 1654,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1651,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1644,
									"end": 1655,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1637,
									"end": 1676,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1609,
									"end": 1611,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1606,
									"end": 1607,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1602,
									"end": 1612,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1573,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1573,
									"end": 1686,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1573,
									"end": 1686,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1573,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1720,
									"end": 1721,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1711,
									"end": 1717,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1706,
									"end": 1709,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1702,
									"end": 1718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1695,
									"end": 1722,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1544,
									"end": 1728,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1728,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1728,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1728,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1482,
									"end": 1728,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1734,
									"end": 1836,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1734,
									"end": 1836,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1775,
									"end": 1781,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1826,
									"end": 1828,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1822,
									"end": 1829,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1817,
									"end": 1819,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1810,
									"end": 1815,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1806,
									"end": 1820,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1802,
									"end": 1830,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 1830,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1792,
									"end": 1830,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1734,
									"end": 1836,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1734,
									"end": 1836,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1734,
									"end": 1836,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1734,
									"end": 1836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2219,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1842,
									"end": 2219,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1930,
									"end": 1933,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 1997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1991,
									"end": 1996,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 1997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1958,
									"end": 1997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 1997,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1958,
									"end": 1997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2013,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2077,
									"end": 2083,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2072,
									"end": 2075,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2013,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 2013,
									"end": 2084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2013,
									"end": 2084,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 2013,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2006,
									"end": 2084,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2006,
									"end": 2084,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2158,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2151,
									"end": 2157,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2146,
									"end": 2149,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2139,
									"end": 2143,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2132,
									"end": 2137,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2128,
									"end": 2144,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2158,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2093,
									"end": 2158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2093,
									"end": 2158,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2093,
									"end": 2158,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2183,
									"end": 2212,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 2205,
									"end": 2211,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2183,
									"end": 2212,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2183,
									"end": 2212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2183,
									"end": 2212,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 2183,
									"end": 2212,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2178,
									"end": 2181,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2174,
									"end": 2213,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2167,
									"end": 2213,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2167,
									"end": 2213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1934,
									"end": 2219,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2219,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2219,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2219,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2219,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1842,
									"end": 2219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2538,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2225,
									"end": 2538,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2338,
									"end": 2342,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2376,
									"end": 2378,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2365,
									"end": 2374,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2361,
									"end": 2379,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2379,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2379,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2434,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2419,
									"end": 2423,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2415,
									"end": 2435,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2411,
									"end": 2412,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2400,
									"end": 2409,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2396,
									"end": 2413,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2436,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2453,
									"end": 2531,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2526,
									"end": 2530,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2517,
									"end": 2523,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2453,
									"end": 2531,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2453,
									"end": 2531,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2453,
									"end": 2531,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2453,
									"end": 2531,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2445,
									"end": 2531,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2445,
									"end": 2531,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2538,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2538,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2538,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2538,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2538,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1058"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1056"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 3269,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207693d36b316bd35c3cbbbfd1e310897b7db4b795ff1cb46ca437ff959206ab4964736f6c63430008130033",
									".code": [
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "A0CF0AEA"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "EB11AF93"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "EB11AF93"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "EDD146CC"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "EF2920FC"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "F5B0DFB7"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "A0CF0AEA"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "B2B878D0"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "D9CAED12"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "DF868ED3"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "42FDA9C7"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "42FDA9C7"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "44469F98"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "4AB4BA42"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "4D31D087"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "A6F0EE9"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "15CC481E"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "2BBE0CAE"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "38FFF2D0"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 422,
											"end": 3269,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 10705,
											"end": 11030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 10705,
											"end": 11030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6785,
											"end": 6871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 6785,
											"end": 6871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 9429,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 9429,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 9429,
											"end": 9773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6953,
											"end": 7045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6953,
											"end": 7045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 7135,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 7135,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2388,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2388,
											"end": 2631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7326,
											"end": 7434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7326,
											"end": 7434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 12395,
											"end": 12540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 12395,
											"end": 12540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 12395,
											"end": 12540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 4412,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 4412,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 11367,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 11367,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 11367,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 954,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 954,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7566,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 7566,
											"end": 7667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 7823,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 7823,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7823,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 596,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 596,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 596,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 10092,
											"end": 10312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 10092,
											"end": 10312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 8816,
											"end": 9013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 8816,
											"end": 9013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6532,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6532,
											"end": 6555,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10914,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 10884,
											"end": 10897,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10899,
											"end": 10904,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 10913,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10883,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 10866,
											"end": 10914,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10914,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 10866,
											"end": 10914,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10966,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 10936,
											"end": 10949,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10951,
											"end": 10956,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10958,
											"end": 10965,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10935,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 10924,
											"end": 10966,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10966,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 10924,
											"end": 10966,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10976,
											"end": 11023,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 10993,
											"end": 11006,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11008,
											"end": 11013,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11015,
											"end": 11022,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10976,
											"end": 10992,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 10976,
											"end": 11023,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10976,
											"end": 11023,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 10976,
											"end": 11023,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10705,
											"end": 11030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6836,
											"end": 6841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6864,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1056"
										},
										{
											"begin": 6853,
											"end": 6864,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6853,
											"end": 6864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9584,
											"end": 9603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6532,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6532,
											"end": 6555,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9659,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 9644,
											"end": 9649,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9658,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9643,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 9619,
											"end": 9659,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9619,
											"end": 9659,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 9619,
											"end": 9659,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9717,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 9702,
											"end": 9707,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9709,
											"end": 9716,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9701,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9683,
											"end": 9717,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9717,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 9683,
											"end": 9717,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9717,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9717,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9727,
											"end": 9766,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9751,
											"end": 9756,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9758,
											"end": 9765,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9727,
											"end": 9750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 9727,
											"end": 9766,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9727,
											"end": 9766,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9727,
											"end": 9766,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7038,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7032,
											"end": 7038,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 7045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7228,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1058"
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7135,
											"end": 7235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2506,
											"end": 2516,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5976,
											"end": 5983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5954,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2570,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2580,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2546,
											"end": 2589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2546,
											"end": 2589,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2526,
											"end": 2589,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2607,
											"end": 2611,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2623,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2597,
											"end": 2624,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2597,
											"end": 2624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2518,
											"end": 2631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7391,
											"end": 7398,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7417,
											"end": 7427,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7417,
											"end": 7427,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7326,
											"end": 7434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12481,
											"end": 12485,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 12522,
											"end": 12532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 12504,
											"end": 12533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12504,
											"end": 12533,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 12504,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12497,
											"end": 12533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12395,
											"end": 12540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4445,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11521,
											"end": 11543,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11559,
											"end": 11582,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11598,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11585,
											"end": 11605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11559,
											"end": 11605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11559,
											"end": 11605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 11746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11741,
											"end": 11753,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11722,
											"end": 11753,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11718,
											"end": 11778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 11718,
											"end": 11778,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "PUSH",
											"source": 7,
											"value": "7B49805600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11762,
											"end": 11778,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11718,
											"end": 11778,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 11718,
											"end": 11778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11789,
											"end": 11819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11842,
											"end": 11857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 11822,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 11822,
											"end": 11858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11789,
											"end": 11858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11789,
											"end": 11858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11873,
											"end": 11882,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11888,
											"end": 11903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11884,
											"end": 11885,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11884,
											"end": 11903,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11933,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 11944,
											"end": 11957,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11958,
											"end": 11959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 11944,
											"end": 11960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11944,
											"end": 11960,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11967,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11968,
											"end": 11969,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 11962,
											"end": 11970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11962,
											"end": 11970,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11933,
											"end": 11943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 11933,
											"end": 11971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11933,
											"end": 11971,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 11933,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11928,
											"end": 11929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 11920,
											"end": 11930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11930,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11971,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11971,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11920,
											"end": 11971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11868,
											"end": 12041,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12057,
											"end": 12064,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12064,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12050,
											"end": 12064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11367,
											"end": 12071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1060,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5976,
											"end": 5983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5954,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1088,
											"end": 1094,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1096,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1108,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1072,
											"end": 1116,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1072,
											"end": 1116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 954,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7645,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 7645,
											"end": 7660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7645,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7904,
											"end": 7910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7949,
											"end": 7961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7929,
											"end": 7962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 7929,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 7962,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7922,
											"end": 7962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 596,
											"end": 766,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 596,
											"end": 766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 689,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 709,
											"end": 716,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 689,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 689,
											"end": 717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 689,
											"end": 717,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 689,
											"end": 717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "PUSH",
											"source": 9,
											"value": "91EFA3D50FECCDE0D0D202F8AE5C41CA0B2BE614CEBCB2BD2F4B019396E6568A"
										},
										{
											"begin": 744,
											"end": 751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 753,
											"end": 758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 759,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 732,
											"end": 759,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 732,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 732,
											"end": 759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 759,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 732,
											"end": 759,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 596,
											"end": 766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6532,
											"end": 6553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6532,
											"end": 6555,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10230,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 10215,
											"end": 10220,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10222,
											"end": 10229,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 10199,
											"end": 10230,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10230,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 10199,
											"end": 10230,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 10265,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10250,
											"end": 10255,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10264,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 10249,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 10240,
											"end": 10265,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10240,
											"end": 10265,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10240,
											"end": 10265,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10305,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 10290,
											"end": 10295,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10297,
											"end": 10304,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 10275,
											"end": 10305,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10305,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 10275,
											"end": 10305,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10092,
											"end": 10312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8932,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 8924,
											"end": 8931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 8898,
											"end": 8932,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8898,
											"end": 8932,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 8898,
											"end": 8932,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8963,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8942,
											"end": 8952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 8942,
											"end": 8963,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8963,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 9006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 8998,
											"end": 9005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 8997,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 8973,
											"end": 9006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 9006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 8973,
											"end": 9006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12814,
											"end": 12925,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 12814,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12890,
											"end": 12894,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1056"
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12868,
											"end": 12878,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12868,
											"end": 12895,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 12864,
											"end": 12918,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "75FD2B100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12904,
											"end": 12918,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12864,
											"end": 12918,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 12864,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12814,
											"end": 12925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13771,
											"end": 13876,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 13771,
											"end": 13876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13842,
											"end": 13843,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13832,
											"end": 13838,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13832,
											"end": 13838,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13832,
											"end": 13843,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 13869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13828,
											"end": 13869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "PUSH",
											"source": 7,
											"value": "3DA3F98C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13828,
											"end": 13869,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 13828,
											"end": 13869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13771,
											"end": 13876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18949,
											"end": 19064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2637,
											"end": 2755,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2637,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2748,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19434,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19320,
											"end": 19434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17900,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 17810,
											"end": 17900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17810,
											"end": 17900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3126,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3001,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3119,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 18077,
											"end": 18166,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 18077,
											"end": 18166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18077,
											"end": 18166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18077,
											"end": 18166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18077,
											"end": 18166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13122,
											"end": 13264,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 13122,
											"end": 13264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13203,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "1056"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13217,
											"name": "PUSH",
											"source": 7,
											"value": "29E40D4B"
										},
										{
											"begin": 13218,
											"end": 13224,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13218,
											"end": 13224,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 13226,
											"end": 13233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 13199,
											"end": 13234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 13199,
											"end": 13234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 13199,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13194,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 13194,
											"end": 13257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "PUSH",
											"source": 7,
											"value": "75FD2B100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13243,
											"end": 13257,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13194,
											"end": 13257,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 13194,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13122,
											"end": 13264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13122,
											"end": 13264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 2349,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1329,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1434,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5976,
											"end": 5983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 5954,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5954,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1531,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1533,
											"end": 1547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1579,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 1563,
											"end": 1613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 1563,
											"end": 1613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1613,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1613,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1613,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1613,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1723,
											"end": 1735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1740,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1719,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1719,
											"end": 1797,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FB76571500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1763,
											"end": 1786,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1719,
											"end": 1797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1719,
											"end": 1797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 1892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 1899,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1868,
											"end": 1880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1868,
											"end": 1899,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1864,
											"end": 1956,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FB76571500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1922,
											"end": 1945,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1864,
											"end": 1956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1864,
											"end": 1956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2045,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2045,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2080,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2089,
											"end": 2090,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2080,
											"end": 2091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2080,
											"end": 2091,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2141,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2128,
											"end": 2144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2175,
											"end": 2181,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2195,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2204,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2159,
											"end": 2205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2159,
											"end": 2205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2234,
											"end": 2246,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "463FFC2CF8B1596445C417388ED30E53EB67CF6668CB2BE7F0ADDF8A78C8441B"
										},
										{
											"begin": 2248,
											"end": 2255,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2257,
											"end": 2263,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2272,
											"modifierDepth": 1,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2224,
											"end": 2273,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2224,
											"end": 2273,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2315,
											"end": 2318,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2315,
											"end": 2318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2315,
											"end": 2318,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2315,
											"end": 2318,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2315,
											"end": 2318,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2048,
											"end": 2343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2048,
											"end": 2343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2013,
											"end": 2343,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 2349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 2349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 2349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1436,
											"end": 2349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1329,
											"end": 2349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1329,
											"end": 2349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1329,
											"end": 2349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1329,
											"end": 2349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2995,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2883,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 2963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 3267,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3132,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3215,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3215,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3215,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3215,
											"end": 3235,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3215,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6761,
											"end": 7038,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6761,
											"end": 7038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4445,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": 6863,
											"end": 6879,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6863,
											"end": 6879,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6869,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6879,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6863,
											"end": 6879,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6879,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6859,
											"end": 7032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6927,
											"end": 6930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 6939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6895,
											"end": 6940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6940,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6895,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6859,
											"end": 7032,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 7032,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6859,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7000,
											"end": 7006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7011,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7013,
											"end": 7020,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6971,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 7021,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6971,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 7032,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6859,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 7038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 7038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 7038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 7038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14400,
											"end": 14496,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 14400,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14456,
											"end": 14460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 14472,
											"end": 14489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14472,
											"end": 14489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14400,
											"end": 14496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2877,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 2761,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "PUSH",
											"source": 9,
											"value": "1569426800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8269,
											"end": 8619,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 8269,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5660,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5660,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8438,
											"end": 8439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8428,
											"end": 8434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8428,
											"end": 8434,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8439,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8424,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8424,
											"end": 8469,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "439A74C900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8469,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8424,
											"end": 8469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 8424,
											"end": 8469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8567,
											"end": 8568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8563,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8556,
											"end": 8568,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8552,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8552,
											"end": 8586,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7FCCE2A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8586,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8552,
											"end": 8586,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 8552,
											"end": 8586,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8605,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8596,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18349,
											"end": 18430,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 18349,
											"end": 18430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18349,
											"end": 18430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18349,
											"end": 18430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18349,
											"end": 18430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18612,
											"end": 18692,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 18612,
											"end": 18692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18612,
											"end": 18692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18612,
											"end": 18692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18612,
											"end": 18692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17365,
											"end": 17436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17365,
											"end": 17436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17632,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 17562,
											"end": 17632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2945,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2455,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2703,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2683,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2679,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2669,
											"end": 2716,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2659,
											"end": 2929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2832,
											"name": "PUSH",
											"source": 8,
											"value": "B12D13EB"
										},
										{
											"begin": 2816,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2833,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 2897,
											"end": 2915,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2929,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2659,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11617,
											"end": 11619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11611,
											"end": 11615,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 11604,
											"end": 11620,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11674,
											"end": 11680,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11668,
											"end": 11672,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 11661,
											"end": 11681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11814,
											"end": 11848,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB000000000000000000000000"
										},
										{
											"begin": 11808,
											"end": 11812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11801,
											"end": 11849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12272,
											"end": 12276,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12266,
											"end": 12270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12254,
											"end": 12258,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 12251,
											"end": 12252,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12244,
											"end": 12249,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12237,
											"end": 12242,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 12232,
											"end": 12277,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 12192,
											"end": 12208,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12181,
											"end": 12182,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12174,
											"end": 12178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12179,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12165,
											"end": 12183,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12162,
											"end": 12210,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11890,
											"end": 12295,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 11863,
											"end": 12518,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12411,
											"end": 12421,
											"name": "PUSH",
											"source": 8,
											"value": "90B8EC18"
										},
										{
											"begin": 12405,
											"end": 12409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12398,
											"end": 12422,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12499,
											"end": 12503,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12493,
											"end": 12497,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 12486,
											"end": 12504,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 12518,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 11863,
											"end": 12518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12619,
											"end": 12623,
											"name": "PUSH",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 12612,
											"end": 12627,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11454,
											"end": 12643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "152"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 457,
											"end": 559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 498,
											"end": 504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 545,
											"end": 552,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 529,
											"end": 543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 525,
											"end": 553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 515,
											"end": 553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 457,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 565,
											"end": 745,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 613,
											"end": 690,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 739,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 856,
											"end": 860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 834,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 834,
											"end": 861,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 834,
											"end": 861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 822,
											"end": 862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 952,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 949,
											"end": 971,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 913,
											"end": 947,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 910,
											"end": 972,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 975,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 975,
											"end": 993,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 907,
											"end": 995,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 794,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 751,
											"end": 1032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1099,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1038,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1359,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1362,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 1326,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1404,
											"end": 1410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1417,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1466,
											"end": 1470,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1462,
											"end": 1477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1454,
											"end": 1477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1454,
											"end": 1477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1173,
											"end": 1484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1607,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1490,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1732,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1613,
											"end": 1739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1782,
											"end": 1789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1811,
											"end": 1835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1938,
											"end": 1943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 1920,
											"end": 1944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 1920,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 1945,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1949,
											"end": 1961,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 1900,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1969,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1847,
											"end": 1969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2037,
											"end": 2066,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 2102,
											"end": 2107,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2075,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 2075,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2331,
											"end": 2337,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2274,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2274,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2258,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 2258,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2249,
											"end": 2339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2381,
											"end": 2386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2374,
											"end": 2395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2411,
											"end": 2427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2480,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2493,
											"end": 2508,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2523,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 2523,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 2490,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2662,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2792,
											"end": 2795,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2780,
											"end": 2790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 2759,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2747,
											"end": 2797,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2830,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2824,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2817,
											"end": 2831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2831,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2685,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2665,
											"end": 2686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 2621,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2975,
											"end": 2981,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2971,
											"end": 2988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2967,
											"end": 2994,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 2998,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 2998,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 2957,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3122,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3222,
											"end": 3228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 3140,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 3140,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3234,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 3240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2870,
											"end": 3240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3246,
											"end": 3363,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 3246,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 3356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3357,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3430,
											"end": 3434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3539,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3542,
											"end": 3560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 3542,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3506,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3658,
											"end": 3662,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 3669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3646,
											"end": 3669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3828,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 3682,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3786,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3817,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3802,
											"end": 3818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3682,
											"end": 3828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4257,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 3834,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3911,
											"end": 3916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 3952,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3993,
											"end": 3999,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3952,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 3952,
											"end": 4000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3952,
											"end": 4000,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 3952,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3936,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3936,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3936,
											"end": 4001,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 3936,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 4001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 4001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4024,
											"end": 4030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4062,
											"end": 4066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4051,
											"end": 4067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4100,
											"end": 4103,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4082,
											"end": 4098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4079,
											"end": 4104,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4188,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 4076,
											"end": 4188,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4107,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4107,
											"end": 4186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4107,
											"end": 4186,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4107,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4188,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 4076,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4197,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4244,
											"end": 4250,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4242,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4237,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4197,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4197,
											"end": 4251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4197,
											"end": 4251,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4197,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3917,
											"end": 4257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4257,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4257,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 4257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4614,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4276,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4336,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4383,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4377,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4365,
											"end": 4371,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4361,
											"end": 4378,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4384,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 4347,
											"end": 4469,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 4388,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4388,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4467,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 4388,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4469,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 4347,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4505,
											"end": 4511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4512,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 4604,
											"end": 4607,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4596,
											"end": 4602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4589,
											"end": 4593,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4581,
											"end": 4587,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4577,
											"end": 4594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4530,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4608,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 4530,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4608,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4608,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4337,
											"end": 4614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4614,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4614,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 5627,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4620,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4745,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4798,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4784,
											"end": 4793,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4782,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4771,
											"end": 4794,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4767,
											"end": 4799,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4764,
											"end": 4883,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4764,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4764,
											"end": 4883,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4802,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 4802,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 4802,
											"end": 4881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4802,
											"end": 4881,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 4802,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4764,
											"end": 4883,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 4764,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4939,
											"end": 4948,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4935,
											"end": 4952,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4922,
											"end": 4953,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4972,
											"end": 4978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4969,
											"end": 4999,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 5083,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4966,
											"end": 5083,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 5002,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 5002,
											"end": 5081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5081,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 5002,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 5083,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 4966,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5107,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 5177,
											"end": 5184,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5166,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5153,
											"end": 5175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5107,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 5107,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5107,
											"end": 5185,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 5107,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5185,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4893,
											"end": 5195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5262,
											"end": 5264,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5251,
											"end": 5260,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5247,
											"end": 5265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5266,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5396,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 5279,
											"end": 5396,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5315,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 5315,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 5315,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5315,
											"end": 5394,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 5315,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5396,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 5279,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 5474,
											"end": 5481,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5465,
											"end": 5471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5450,
											"end": 5472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5420,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5420,
											"end": 5482,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 5420,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5482,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5410,
											"end": 5482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5205,
											"end": 5492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5531,
											"end": 5533,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5593,
											"end": 5599,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5591,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5557,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 5627,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 5627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 5627,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 5627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 5627,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 5627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5693,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5633,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5661,
											"end": 5664,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5675,
											"end": 5687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5693,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5693,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5693,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5699,
											"end": 5841,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5699,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 5758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5800,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5809,
											"end": 5833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5827,
											"end": 5832,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 5833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5809,
											"end": 5833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 5833,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5809,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 5800,
											"end": 5834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5834,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5800,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5782,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 5782,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5769,
											"end": 5835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5699,
											"end": 5841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5699,
											"end": 5841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5699,
											"end": 5841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5699,
											"end": 5841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5897,
											"end": 5906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5961,
											"end": 5966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5930,
											"end": 5967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5930,
											"end": 5967,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 5930,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5967,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5917,
											"end": 5967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5847,
											"end": 5973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6118,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5979,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6042,
											"end": 6051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 6106,
											"end": 6111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 6075,
											"end": 6112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6112,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 6075,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6062,
											"end": 6112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5979,
											"end": 6118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6124,
											"end": 6281,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6124,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 6268,
											"end": 6273,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 6224,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6224,
											"end": 6274,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 6224,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6222,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6275,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6124,
											"end": 6281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6124,
											"end": 6281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6124,
											"end": 6281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6535,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 6287,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6433,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6416,
											"end": 6434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6525,
											"end": 6526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6510,
											"end": 6527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6501,
											"end": 6507,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 6444,
											"end": 6528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6528,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 6444,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6535,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6287,
											"end": 6535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 7193,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 6541,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 6624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6677,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6663,
											"end": 6672,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6654,
											"end": 6661,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6650,
											"end": 6673,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6678,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6762,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6643,
											"end": 6762,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 6681,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 6681,
											"end": 6760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6760,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 6681,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6762,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 6643,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6829,
											"end": 6830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6827,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6814,
											"end": 6831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6801,
											"end": 6832,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6859,
											"end": 6877,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6851,
											"end": 6857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6848,
											"end": 6878,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6845,
											"end": 6962,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6845,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 6845,
											"end": 6962,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6881,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 6881,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 6881,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6881,
											"end": 6960,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 6881,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6845,
											"end": 6962,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 6845,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 7040,
											"end": 7047,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7031,
											"end": 7037,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7016,
											"end": 7038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 6986,
											"end": 7048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7048,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6986,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6976,
											"end": 7048,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6976,
											"end": 7048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 7058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 7099,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7123,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 7168,
											"end": 7175,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7159,
											"end": 7165,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7148,
											"end": 7157,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7144,
											"end": 7166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7123,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 7123,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7123,
											"end": 7176,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 7123,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7113,
											"end": 7176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7113,
											"end": 7176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7068,
											"end": 7186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 7193,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 7193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 7193,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 7193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 7193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6541,
											"end": 7193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7199,
											"end": 7317,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7199,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 7304,
											"end": 7309,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 7286,
											"end": 7310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7286,
											"end": 7310,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 7286,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7281,
											"end": 7284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7274,
											"end": 7311,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7199,
											"end": 7317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7199,
											"end": 7317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7199,
											"end": 7317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7545,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 7323,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7416,
											"end": 7420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7456,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7443,
											"end": 7452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 7535,
											"end": 7536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7533,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7520,
											"end": 7537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7511,
											"end": 7517,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7467,
											"end": 7538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7538,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 7467,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7545,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7545,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7628,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7551,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7588,
											"end": 7595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 7622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7628,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7628,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7628,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7752,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7634,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7739,
											"end": 7744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7721,
											"end": 7745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7721,
											"end": 7745,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7721,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7716,
											"end": 7719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7634,
											"end": 7752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7980,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7758,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7851,
											"end": 7855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7891,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7878,
											"end": 7887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7874,
											"end": 7892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7955,
											"end": 7972,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7946,
											"end": 7952,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7902,
											"end": 7973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 7973,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 7902,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7980,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7980,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7986,
											"end": 8063,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7986,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8052,
											"end": 8057,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8041,
											"end": 8057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8041,
											"end": 8057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7986,
											"end": 8063,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7986,
											"end": 8063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7986,
											"end": 8063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7986,
											"end": 8063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8187,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 8069,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8156,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 8174,
											"end": 8179,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8156,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 8156,
											"end": 8180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8156,
											"end": 8180,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 8156,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8415,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 8193,
											"end": 8415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8286,
											"end": 8290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8326,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8322,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8327,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8327,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 8405,
											"end": 8406,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8403,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8390,
											"end": 8407,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8387,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 8337,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8408,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 8337,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8415,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8193,
											"end": 8415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8732,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 8421,
											"end": 8732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8502,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8606,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8580,
											"end": 8586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8577,
											"end": 8607,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8574,
											"end": 8630,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8574,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 8574,
											"end": 8630,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 8610,
											"end": 8628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8574,
											"end": 8630,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 8574,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8660,
											"end": 8664,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8648,
											"end": 8665,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8640,
											"end": 8665,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8640,
											"end": 8665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8720,
											"end": 8724,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8714,
											"end": 8718,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8702,
											"end": 8725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8702,
											"end": 8725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8860,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 8738,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 8829,
											"end": 8834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8811,
											"end": 8835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8835,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 8811,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8804,
											"end": 8809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8801,
											"end": 8836,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8791,
											"end": 8854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 8791,
											"end": 8854,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8840,
											"end": 8852,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8791,
											"end": 8854,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 8791,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8860,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 9005,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 8866,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8912,
											"end": 8917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8956,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8937,
											"end": 8957,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8928,
											"end": 8957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8928,
											"end": 8957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 8993,
											"end": 8998,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 8966,
											"end": 8999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8966,
											"end": 8999,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 8966,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 9005,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 9005,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 9005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 9005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8866,
											"end": 9005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9738,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 9028,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9124,
											"end": 9129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 9165,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 9222,
											"end": 9228,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 9165,
											"end": 9229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9165,
											"end": 9229,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 9165,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 9149,
											"end": 9230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9149,
											"end": 9230,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 9149,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9230,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9140,
											"end": 9230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9250,
											"end": 9255,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9279,
											"end": 9285,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9265,
											"end": 9286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9313,
											"end": 9317,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9306,
											"end": 9311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9302,
											"end": 9318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9295,
											"end": 9318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9295,
											"end": 9318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9366,
											"end": 9370,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9358,
											"end": 9364,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9354,
											"end": 9371,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9346,
											"end": 9352,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9342,
											"end": 9372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9395,
											"end": 9398,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9384,
											"end": 9399,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9503,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 9381,
											"end": 9503,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9414,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 9414,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 9414,
											"end": 9493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9414,
											"end": 9493,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 9414,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9503,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 9381,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9529,
											"end": 9535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9512,
											"end": 9732,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 9512,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9546,
											"end": 9552,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9541,
											"end": 9544,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9538,
											"end": 9553,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9512,
											"end": 9732,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9512,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 9512,
											"end": 9732,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9621,
											"end": 9624,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9650,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 9683,
											"end": 9686,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9671,
											"end": 9681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9650,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 9650,
											"end": 9687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9650,
											"end": 9687,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 9650,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9648,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9638,
											"end": 9688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9717,
											"end": 9721,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9712,
											"end": 9715,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9708,
											"end": 9722,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9701,
											"end": 9722,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9701,
											"end": 9722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9588,
											"end": 9732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9572,
											"end": 9576,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9567,
											"end": 9570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9577,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9556,
											"end": 9577,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9556,
											"end": 9577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9512,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 9512,
											"end": 9732,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9512,
											"end": 9732,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 9512,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9516,
											"end": 9537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9738,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 10131,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 9761,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9832,
											"end": 9837,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9884,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9874,
											"end": 9878,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9866,
											"end": 9872,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9858,
											"end": 9885,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9848,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 9848,
											"end": 9970,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 9889,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 9889,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9848,
											"end": 9970,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 9848,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9993,
											"end": 10013,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10031,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 10121,
											"end": 10124,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10113,
											"end": 10119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10106,
											"end": 10110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10098,
											"end": 10104,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10094,
											"end": 10111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10031,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 10031,
											"end": 10125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10031,
											"end": 10125,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 10031,
											"end": 10125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10125,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10022,
											"end": 10125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9838,
											"end": 10131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 10131,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 10131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 10131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 10131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 10131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 11176,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 10137,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10264,
											"end": 10270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10272,
											"end": 10278,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10280,
											"end": 10286,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10329,
											"end": 10331,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10308,
											"end": 10315,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10304,
											"end": 10327,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10300,
											"end": 10332,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10416,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 10297,
											"end": 10416,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10335,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 10335,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 10335,
											"end": 10414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10335,
											"end": 10414,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 10335,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10416,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 10297,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10483,
											"end": 10484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10472,
											"end": 10481,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10468,
											"end": 10485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10486,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10513,
											"end": 10531,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10505,
											"end": 10511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10502,
											"end": 10532,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10499,
											"end": 10616,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10499,
											"end": 10616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 10499,
											"end": 10616,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10535,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 10535,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 10535,
											"end": 10614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10535,
											"end": 10614,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 10535,
											"end": 10614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10499,
											"end": 10616,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 10499,
											"end": 10616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 10710,
											"end": 10717,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10690,
											"end": 10699,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10686,
											"end": 10708,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 10640,
											"end": 10718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10718,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 10640,
											"end": 10718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10630,
											"end": 10718,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10630,
											"end": 10718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10426,
											"end": 10728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10795,
											"end": 10797,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10780,
											"end": 10798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10799,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10845,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 10929,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 10812,
											"end": 10929,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10848,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 10848,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 10848,
											"end": 10927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10848,
											"end": 10927,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 10848,
											"end": 10927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 10929,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 10812,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10953,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 11023,
											"end": 11030,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11014,
											"end": 11020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11003,
											"end": 11012,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10999,
											"end": 11021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10953,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 10953,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10953,
											"end": 11031,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 10953,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 11031,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 11031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10738,
											"end": 11041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11080,
											"end": 11082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11106,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 11151,
											"end": 11158,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11142,
											"end": 11148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11131,
											"end": 11140,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 11127,
											"end": 11149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11106,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 11106,
											"end": 11159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11106,
											"end": 11159,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 11106,
											"end": 11159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11096,
											"end": 11159,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11096,
											"end": 11159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11051,
											"end": 11169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 11176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 11176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 11176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 11176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 11176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10137,
											"end": 11176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11511,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 11182,
											"end": 11511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11241,
											"end": 11247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11290,
											"end": 11292,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11276,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11265,
											"end": 11288,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11261,
											"end": 11293,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 11258,
											"end": 11377,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11296,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 11296,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 11296,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11296,
											"end": 11375,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 11296,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11377,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 11258,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 11486,
											"end": 11493,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11466,
											"end": 11475,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 11441,
											"end": 11494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11494,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 11441,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11431,
											"end": 11494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11431,
											"end": 11494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11387,
											"end": 11504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11511,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11511,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11517,
											"end": 11607,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 11517,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11551,
											"end": 11558,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11594,
											"end": 11599,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11587,
											"end": 11600,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11580,
											"end": 11601,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11569,
											"end": 11601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11569,
											"end": 11601,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11517,
											"end": 11607,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11517,
											"end": 11607,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11517,
											"end": 11607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11517,
											"end": 11607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11722,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 11613,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11694,
											"end": 11715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 11709,
											"end": 11714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11694,
											"end": 11715,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 11694,
											"end": 11715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11694,
											"end": 11715,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 11694,
											"end": 11715,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11689,
											"end": 11692,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11682,
											"end": 11716,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11613,
											"end": 11722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11938,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 11728,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11815,
											"end": 11819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11853,
											"end": 11855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11842,
											"end": 11851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11838,
											"end": 11856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11830,
											"end": 11856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11830,
											"end": 11856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11866,
											"end": 11931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 11928,
											"end": 11929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11917,
											"end": 11926,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11913,
											"end": 11930,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 11910,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11866,
											"end": 11931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 11866,
											"end": 11931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11866,
											"end": 11931,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 11866,
											"end": 11931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11938,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11938,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11728,
											"end": 11938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11944,
											"end": 12264,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 11944,
											"end": 12264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12030,
											"end": 12034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12120,
											"end": 12138,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12112,
											"end": 12118,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12109,
											"end": 12139,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12106,
											"end": 12162,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12106,
											"end": 12162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 12106,
											"end": 12162,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 12142,
											"end": 12160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12106,
											"end": 12162,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 12106,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12192,
											"end": 12196,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12184,
											"end": 12190,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12180,
											"end": 12197,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 12172,
											"end": 12197,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12172,
											"end": 12197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12252,
											"end": 12256,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12246,
											"end": 12250,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12242,
											"end": 12257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12234,
											"end": 12257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11944,
											"end": 12264,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11944,
											"end": 12264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11944,
											"end": 12264,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11944,
											"end": 12264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 13227,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 12285,
											"end": 13227,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12390,
											"end": 12395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 12431,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 12497,
											"end": 12503,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 12431,
											"end": 12504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12431,
											"end": 12504,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 12431,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12415,
											"end": 12505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 12415,
											"end": 12505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12415,
											"end": 12505,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 12415,
											"end": 12505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12406,
											"end": 12505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12406,
											"end": 12505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12525,
											"end": 12530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12554,
											"end": 12560,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12547,
											"end": 12552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12540,
											"end": 12561,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12588,
											"end": 12592,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12581,
											"end": 12586,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12577,
											"end": 12593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12593,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12570,
											"end": 12593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12641,
											"end": 12645,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12633,
											"end": 12639,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12629,
											"end": 12646,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 12621,
											"end": 12627,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 12647,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12670,
											"end": 12673,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12662,
											"end": 12668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12659,
											"end": 12674,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12778,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 12656,
											"end": 12778,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12689,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 12689,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 12689,
											"end": 12768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12689,
											"end": 12768,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 12689,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12656,
											"end": 12778,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 12656,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12804,
											"end": 12810,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 13221,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 12787,
											"end": 13221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 12827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12816,
											"end": 12819,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12813,
											"end": 12828,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 13221,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 13221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 12787,
											"end": 13221,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12910,
											"end": 12913,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12914,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 12946,
											"end": 12964,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12933,
											"end": 12944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12930,
											"end": 12965,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12927,
											"end": 13049,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12927,
											"end": 13049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 12927,
											"end": 13049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 12968,
											"end": 13047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12927,
											"end": 13049,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 12927,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13092,
											"end": 13103,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13084,
											"end": 13090,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13080,
											"end": 13104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13130,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 13172,
											"end": 13175,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13130,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 13130,
											"end": 13176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13130,
											"end": 13176,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 13130,
											"end": 13176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13128,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13118,
											"end": 13177,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13206,
											"end": 13210,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13201,
											"end": 13204,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13197,
											"end": 13211,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 13190,
											"end": 13211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12863,
											"end": 13221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12863,
											"end": 13221,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12847,
											"end": 12851,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12838,
											"end": 12852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12831,
											"end": 12852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12831,
											"end": 12852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 13221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 12787,
											"end": 13221,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12787,
											"end": 13221,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 12787,
											"end": 13221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12791,
											"end": 12812,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 13227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 13227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 13227,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 13227,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 13227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 13227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 13227,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 13227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13248,
											"end": 13636,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 13248,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13328,
											"end": 13333,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13377,
											"end": 13380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13370,
											"end": 13374,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 13362,
											"end": 13368,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13358,
											"end": 13375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13354,
											"end": 13381,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13344,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 13344,
											"end": 13466,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 13385,
											"end": 13464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 13385,
											"end": 13464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13385,
											"end": 13464,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 13385,
											"end": 13464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13344,
											"end": 13466,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 13344,
											"end": 13466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13502,
											"end": 13508,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13489,
											"end": 13509,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 13527,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 13626,
											"end": 13629,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13618,
											"end": 13624,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13611,
											"end": 13615,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13603,
											"end": 13609,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13599,
											"end": 13616,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13527,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 13527,
											"end": 13630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13527,
											"end": 13630,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 13527,
											"end": 13630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13518,
											"end": 13630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13518,
											"end": 13630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13334,
											"end": 13636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13248,
											"end": 13636,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13248,
											"end": 13636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13248,
											"end": 13636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13248,
											"end": 13636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13248,
											"end": 13636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 14554,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 13642,
											"end": 14554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13769,
											"end": 13775,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13783,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13826,
											"end": 13828,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13814,
											"end": 13823,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13805,
											"end": 13812,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13801,
											"end": 13824,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 13829,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13913,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 13794,
											"end": 13913,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13832,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 13832,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 13832,
											"end": 13911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13832,
											"end": 13911,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 13832,
											"end": 13911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13913,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 13794,
											"end": 13913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13980,
											"end": 13981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13969,
											"end": 13978,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13965,
											"end": 13982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 13983,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 14010,
											"end": 14028,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14002,
											"end": 14008,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13999,
											"end": 14029,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13996,
											"end": 14113,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13996,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 13996,
											"end": 14113,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14032,
											"end": 14111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 14032,
											"end": 14111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 14032,
											"end": 14111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14032,
											"end": 14111,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 14032,
											"end": 14111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13996,
											"end": 14113,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 13996,
											"end": 14113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14137,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 14207,
											"end": 14214,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14198,
											"end": 14204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14187,
											"end": 14196,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14183,
											"end": 14205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14137,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 14137,
											"end": 14215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14137,
											"end": 14215,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 14137,
											"end": 14215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14127,
											"end": 14215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13923,
											"end": 14225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14292,
											"end": 14294,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14277,
											"end": 14295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14264,
											"end": 14296,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 14323,
											"end": 14341,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14315,
											"end": 14321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14312,
											"end": 14342,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14426,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 14309,
											"end": 14426,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14345,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 14345,
											"end": 14424,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 14345,
											"end": 14424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14345,
											"end": 14424,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 14345,
											"end": 14424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14426,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 14309,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14450,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 14529,
											"end": 14536,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14520,
											"end": 14526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14509,
											"end": 14518,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 14505,
											"end": 14527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14450,
											"end": 14537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 14450,
											"end": 14537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14450,
											"end": 14537,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 14450,
											"end": 14537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14440,
											"end": 14537,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14440,
											"end": 14537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14235,
											"end": 14547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 14554,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 14554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 14554,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 14554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 14554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 14554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14560,
											"end": 14704,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 14560,
											"end": 14704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14691,
											"end": 14696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14685,
											"end": 14697,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 14675,
											"end": 14697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14675,
											"end": 14697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14560,
											"end": 14704,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14560,
											"end": 14704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14560,
											"end": 14704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14560,
											"end": 14704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14924,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 14710,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14839,
											"end": 14850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14873,
											"end": 14879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14861,
											"end": 14880,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14913,
											"end": 14917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14908,
											"end": 14911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14904,
											"end": 14918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14889,
											"end": 14918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14889,
											"end": 14918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14924,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14924,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14710,
											"end": 14924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 15092,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 14930,
											"end": 15092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15027,
											"end": 15031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15050,
											"end": 15053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15042,
											"end": 15053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15042,
											"end": 15053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15080,
											"end": 15084,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15075,
											"end": 15078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15071,
											"end": 15085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15063,
											"end": 15085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15063,
											"end": 15085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 15092,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 15092,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 15092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 15092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15098,
											"end": 15206,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 15098,
											"end": 15206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15175,
											"end": 15199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 15193,
											"end": 15198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15175,
											"end": 15199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 15175,
											"end": 15199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15175,
											"end": 15199,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 15175,
											"end": 15199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15170,
											"end": 15173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15163,
											"end": 15200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15098,
											"end": 15206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15098,
											"end": 15206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15098,
											"end": 15206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15212,
											"end": 15320,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 15212,
											"end": 15320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15289,
											"end": 15313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 15307,
											"end": 15312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15289,
											"end": 15313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 15289,
											"end": 15313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15289,
											"end": 15313,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 15289,
											"end": 15313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15284,
											"end": 15287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15277,
											"end": 15314,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15212,
											"end": 15320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15212,
											"end": 15320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15212,
											"end": 15320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15398,
											"end": 15919,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 15398,
											"end": 15919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15545,
											"end": 15549,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15540,
											"end": 15543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 15550,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15644,
											"end": 15648,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15637,
											"end": 15642,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15633,
											"end": 15649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15627,
											"end": 15650,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15663,
											"end": 15726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 15720,
											"end": 15724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15715,
											"end": 15718,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15711,
											"end": 15725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15697,
											"end": 15709,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15663,
											"end": 15726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 15663,
											"end": 15726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15663,
											"end": 15726,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 15663,
											"end": 15726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15560,
											"end": 15736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15820,
											"end": 15824,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15809,
											"end": 15825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15803,
											"end": 15826,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 15896,
											"end": 15900,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15891,
											"end": 15894,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15901,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15873,
											"end": 15885,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 15839,
											"end": 15902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15839,
											"end": 15902,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 15839,
											"end": 15902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15746,
											"end": 15912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15514,
											"end": 15919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15398,
											"end": 15919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15398,
											"end": 15919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15398,
											"end": 15919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15925,
											"end": 16224,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 15925,
											"end": 16224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16054,
											"end": 16064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16075,
											"end": 16181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 16177,
											"end": 16180,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16169,
											"end": 16175,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16075,
											"end": 16181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 16075,
											"end": 16181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16075,
											"end": 16181,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 16075,
											"end": 16181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16213,
											"end": 16217,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16208,
											"end": 16211,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16204,
											"end": 16218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16190,
											"end": 16218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16190,
											"end": 16218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15925,
											"end": 16224,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15925,
											"end": 16224,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15925,
											"end": 16224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15925,
											"end": 16224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15925,
											"end": 16224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16373,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 16230,
											"end": 16373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16330,
											"end": 16334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16362,
											"end": 16366,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16357,
											"end": 16360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16353,
											"end": 16367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16345,
											"end": 16367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16345,
											"end": 16367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16373,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16373,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16373,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16230,
											"end": 16373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 17427,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 16455,
											"end": 17427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16634,
											"end": 16637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16663,
											"end": 16747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 16741,
											"end": 16746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16663,
											"end": 16747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 16663,
											"end": 16747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16663,
											"end": 16747,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 16663,
											"end": 16747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16763,
											"end": 16879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 16872,
											"end": 16878,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16867,
											"end": 16870,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16763,
											"end": 16879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 16763,
											"end": 16879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16763,
											"end": 16879,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 16763,
											"end": 16879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16756,
											"end": 16879,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16756,
											"end": 16879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16903,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 16983,
											"end": 16988,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16903,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 16903,
											"end": 16989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16903,
											"end": 16989,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 16903,
											"end": 16989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17012,
											"end": 17019,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17043,
											"end": 17044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17028,
											"end": 17402,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 17028,
											"end": 17402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17053,
											"end": 17059,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17050,
											"end": 17051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17047,
											"end": 17060,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17028,
											"end": 17402,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17028,
											"end": 17402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 17028,
											"end": 17402,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17129,
											"end": 17135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17123,
											"end": 17136,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17156,
											"end": 17279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 17275,
											"end": 17278,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 17260,
											"end": 17273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17156,
											"end": 17279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 17156,
											"end": 17279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17156,
											"end": 17279,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 17156,
											"end": 17279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17149,
											"end": 17279,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 17149,
											"end": 17279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17302,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 17385,
											"end": 17391,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17302,
											"end": 17392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 17302,
											"end": 17392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17302,
											"end": 17392,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 17302,
											"end": 17392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17292,
											"end": 17392,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17292,
											"end": 17392,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17088,
											"end": 17402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17075,
											"end": 17076,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17073,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17068,
											"end": 17077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17063,
											"end": 17077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17063,
											"end": 17077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17028,
											"end": 17402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 17028,
											"end": 17402,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17028,
											"end": 17402,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 17028,
											"end": 17402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17032,
											"end": 17046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17418,
											"end": 17421,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17411,
											"end": 17421,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17411,
											"end": 17421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16639,
											"end": 17427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16639,
											"end": 17427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16639,
											"end": 17427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 17427,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 17427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 17427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 17427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16455,
											"end": 17427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17433,
											"end": 17926,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 17433,
											"end": 17926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17636,
											"end": 17640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17674,
											"end": 17676,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17663,
											"end": 17672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17659,
											"end": 17677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17651,
											"end": 17677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17651,
											"end": 17677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17723,
											"end": 17732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17717,
											"end": 17721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17713,
											"end": 17733,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17709,
											"end": 17710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17698,
											"end": 17707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17694,
											"end": 17711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17687,
											"end": 17734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 17919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 17914,
											"end": 17918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17905,
											"end": 17911,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 17919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 17751,
											"end": 17919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17751,
											"end": 17919,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 17751,
											"end": 17919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17743,
											"end": 17919,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17743,
											"end": 17919,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17433,
											"end": 17926,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17433,
											"end": 17926,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17433,
											"end": 17926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17433,
											"end": 17926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17433,
											"end": 17926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 18551,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17932,
											"end": 18551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18009,
											"end": 18015,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18017,
											"end": 18023,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18025,
											"end": 18031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18074,
											"end": 18076,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 18062,
											"end": 18071,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18053,
											"end": 18060,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18049,
											"end": 18072,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18045,
											"end": 18077,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18161,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 18042,
											"end": 18161,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18080,
											"end": 18159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 18080,
											"end": 18159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 18080,
											"end": 18159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18080,
											"end": 18159,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 18080,
											"end": 18159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18161,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 18042,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18200,
											"end": 18201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18225,
											"end": 18278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 18270,
											"end": 18277,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18261,
											"end": 18267,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18250,
											"end": 18259,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 18246,
											"end": 18268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18225,
											"end": 18278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 18225,
											"end": 18278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18225,
											"end": 18278,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 18225,
											"end": 18278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18215,
											"end": 18278,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18215,
											"end": 18278,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18171,
											"end": 18288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18327,
											"end": 18329,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18353,
											"end": 18406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 18398,
											"end": 18405,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18389,
											"end": 18395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18378,
											"end": 18387,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 18374,
											"end": 18396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18353,
											"end": 18406,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 18353,
											"end": 18406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18353,
											"end": 18406,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 18353,
											"end": 18406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18343,
											"end": 18406,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18343,
											"end": 18406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18298,
											"end": 18416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18455,
											"end": 18457,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18481,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 18526,
											"end": 18533,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18517,
											"end": 18523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18506,
											"end": 18515,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 18502,
											"end": 18524,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18481,
											"end": 18534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 18481,
											"end": 18534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18481,
											"end": 18534,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 18481,
											"end": 18534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18471,
											"end": 18534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18471,
											"end": 18534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18426,
											"end": 18544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 18551,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 18551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 18551,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 18551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 18551,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 18551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18557,
											"end": 18737,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 18557,
											"end": 18737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18605,
											"end": 18682,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18602,
											"end": 18603,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18595,
											"end": 18683,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18702,
											"end": 18706,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 18699,
											"end": 18700,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18692,
											"end": 18707,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18726,
											"end": 18730,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18723,
											"end": 18724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18716,
											"end": 18731,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 18858,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 18743,
											"end": 18858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18826,
											"end": 18827,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 18819,
											"end": 18824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18816,
											"end": 18828,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 18806,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 18806,
											"end": 18852,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18832,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 18832,
											"end": 18850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 18832,
											"end": 18850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18832,
											"end": 18850,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 18832,
											"end": 18850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18806,
											"end": 18852,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 18806,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 18858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 18858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18864,
											"end": 18995,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 18864,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18911,
											"end": 18918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18940,
											"end": 18945,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18929,
											"end": 18945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18929,
											"end": 18945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18946,
											"end": 18989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 18983,
											"end": 18988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18946,
											"end": 18989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 18946,
											"end": 18989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18946,
											"end": 18989,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 18946,
											"end": 18989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18864,
											"end": 18995,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18864,
											"end": 18995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18864,
											"end": 18995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18864,
											"end": 18995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19132,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 19001,
											"end": 19132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19059,
											"end": 19068,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19092,
											"end": 19126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 19120,
											"end": 19125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19092,
											"end": 19126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 19092,
											"end": 19126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19092,
											"end": 19126,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 19092,
											"end": 19126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19079,
											"end": 19126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19079,
											"end": 19126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19001,
											"end": 19132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19138,
											"end": 19285,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 19138,
											"end": 19285,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19233,
											"end": 19278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 19272,
											"end": 19277,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19233,
											"end": 19278,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 19233,
											"end": 19278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19233,
											"end": 19278,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 19233,
											"end": 19278,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19221,
											"end": 19279,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19138,
											"end": 19285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19138,
											"end": 19285,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19138,
											"end": 19285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19291,
											"end": 19529,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 19291,
											"end": 19529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19392,
											"end": 19396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19430,
											"end": 19432,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19419,
											"end": 19428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19415,
											"end": 19433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19407,
											"end": 19433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19407,
											"end": 19433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19443,
											"end": 19522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 19519,
											"end": 19520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19508,
											"end": 19517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19504,
											"end": 19521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19495,
											"end": 19501,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19443,
											"end": 19522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 19443,
											"end": 19522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19443,
											"end": 19522,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 19443,
											"end": 19522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19291,
											"end": 19529,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19291,
											"end": 19529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19291,
											"end": 19529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19291,
											"end": 19529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19291,
											"end": 19529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19535,
											"end": 20187,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 19535,
											"end": 20187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19612,
											"end": 19618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19620,
											"end": 19626,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19669,
											"end": 19671,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19657,
											"end": 19666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19648,
											"end": 19655,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19644,
											"end": 19667,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19640,
											"end": 19672,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 19756,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 19756,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 19637,
											"end": 19756,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19675,
											"end": 19754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 19675,
											"end": 19754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 19675,
											"end": 19754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19675,
											"end": 19754,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 19675,
											"end": 19754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19637,
											"end": 19756,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 19637,
											"end": 19756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19795,
											"end": 19796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19820,
											"end": 19873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 19865,
											"end": 19872,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19856,
											"end": 19862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19845,
											"end": 19854,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19841,
											"end": 19863,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19820,
											"end": 19873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 19820,
											"end": 19873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19820,
											"end": 19873,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 19820,
											"end": 19873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19810,
											"end": 19873,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19810,
											"end": 19873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19766,
											"end": 19883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19950,
											"end": 19952,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19939,
											"end": 19948,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19935,
											"end": 19953,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19922,
											"end": 19954,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 19981,
											"end": 19999,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19973,
											"end": 19979,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19970,
											"end": 20000,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20084,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 19967,
											"end": 20084,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20003,
											"end": 20082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 20003,
											"end": 20082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 20003,
											"end": 20082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20003,
											"end": 20082,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 20003,
											"end": 20082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20084,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 19967,
											"end": 20084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 20162,
											"end": 20169,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20153,
											"end": 20159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20142,
											"end": 20151,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20138,
											"end": 20160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 20108,
											"end": 20170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20108,
											"end": 20170,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 20108,
											"end": 20170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20098,
											"end": 20170,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20098,
											"end": 20170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19893,
											"end": 20180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19535,
											"end": 20187,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19535,
											"end": 20187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19535,
											"end": 20187,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19535,
											"end": 20187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19535,
											"end": 20187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19535,
											"end": 20187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20193,
											"end": 20522,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 20193,
											"end": 20522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20252,
											"end": 20258,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20301,
											"end": 20303,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20289,
											"end": 20298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20280,
											"end": 20287,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20276,
											"end": 20299,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20272,
											"end": 20304,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 20269,
											"end": 20388,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20269,
											"end": 20388,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 20269,
											"end": 20388,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20307,
											"end": 20386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 20307,
											"end": 20386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 20307,
											"end": 20386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20307,
											"end": 20386,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 20307,
											"end": 20386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20269,
											"end": 20388,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 20269,
											"end": 20388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20427,
											"end": 20428,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20452,
											"end": 20505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 20497,
											"end": 20504,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20488,
											"end": 20494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20477,
											"end": 20486,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20473,
											"end": 20495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20452,
											"end": 20505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 20452,
											"end": 20505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20452,
											"end": 20505,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 20452,
											"end": 20505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20442,
											"end": 20505,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20442,
											"end": 20505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20398,
											"end": 20515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20193,
											"end": 20522,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20193,
											"end": 20522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20193,
											"end": 20522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20193,
											"end": 20522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20193,
											"end": 20522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20528,
											"end": 20642,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 20528,
											"end": 20642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20595,
											"end": 20601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20629,
											"end": 20634,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20623,
											"end": 20635,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 20613,
											"end": 20635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20613,
											"end": 20635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20528,
											"end": 20642,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20528,
											"end": 20642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20528,
											"end": 20642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20528,
											"end": 20642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20648,
											"end": 20832,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 20648,
											"end": 20832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20747,
											"end": 20758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20781,
											"end": 20787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20776,
											"end": 20779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20769,
											"end": 20788,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20821,
											"end": 20825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20816,
											"end": 20819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20812,
											"end": 20826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20797,
											"end": 20826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20797,
											"end": 20826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20648,
											"end": 20832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20648,
											"end": 20832,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20648,
											"end": 20832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20648,
											"end": 20832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20648,
											"end": 20832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20838,
											"end": 20970,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 20838,
											"end": 20970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20905,
											"end": 20909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20928,
											"end": 20931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20920,
											"end": 20931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20920,
											"end": 20931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20958,
											"end": 20962,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20953,
											"end": 20956,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20949,
											"end": 20963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20941,
											"end": 20963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20941,
											"end": 20963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20838,
											"end": 20970,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20838,
											"end": 20970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20838,
											"end": 20970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20838,
											"end": 20970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 21155,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 20976,
											"end": 21155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21045,
											"end": 21055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21066,
											"end": 21112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 21108,
											"end": 21111,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21100,
											"end": 21106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21066,
											"end": 21112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 21066,
											"end": 21112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21066,
											"end": 21112,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 21066,
											"end": 21112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21144,
											"end": 21148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21139,
											"end": 21142,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21135,
											"end": 21149,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21121,
											"end": 21149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21121,
											"end": 21149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 21155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 21155,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 21155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 21155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 21155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21161,
											"end": 21274,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 21161,
											"end": 21274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21231,
											"end": 21235,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21263,
											"end": 21267,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21258,
											"end": 21261,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21254,
											"end": 21268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21246,
											"end": 21268,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21246,
											"end": 21268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21161,
											"end": 21274,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21161,
											"end": 21274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21161,
											"end": 21274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21161,
											"end": 21274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21310,
											"end": 22042,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 21310,
											"end": 22042,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21429,
											"end": 21432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21458,
											"end": 21512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 21506,
											"end": 21511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21458,
											"end": 21512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 21458,
											"end": 21512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21458,
											"end": 21512,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 21458,
											"end": 21512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21528,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 21607,
											"end": 21613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21602,
											"end": 21605,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21528,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 21528,
											"end": 21614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21528,
											"end": 21614,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 21528,
											"end": 21614,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21521,
											"end": 21614,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21521,
											"end": 21614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21638,
											"end": 21694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 21688,
											"end": 21693,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21638,
											"end": 21694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 21638,
											"end": 21694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21638,
											"end": 21694,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 21638,
											"end": 21694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21717,
											"end": 21724,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21748,
											"end": 21749,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21733,
											"end": 22017,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 21733,
											"end": 22017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21758,
											"end": 21764,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21755,
											"end": 21756,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21752,
											"end": 21765,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 21733,
											"end": 22017,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21733,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 21733,
											"end": 22017,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21834,
											"end": 21840,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21828,
											"end": 21841,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21861,
											"end": 21924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 21920,
											"end": 21923,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 21905,
											"end": 21918,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21861,
											"end": 21924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 21861,
											"end": 21924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21861,
											"end": 21924,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 21861,
											"end": 21924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21854,
											"end": 21924,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 21854,
											"end": 21924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21947,
											"end": 22007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 22000,
											"end": 22006,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21947,
											"end": 22007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 21947,
											"end": 22007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21947,
											"end": 22007,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 21947,
											"end": 22007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21937,
											"end": 22007,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21937,
											"end": 22007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21793,
											"end": 22017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21780,
											"end": 21781,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 21777,
											"end": 21778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21773,
											"end": 21782,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21768,
											"end": 21782,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21768,
											"end": 21782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21733,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 21733,
											"end": 22017,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21733,
											"end": 22017,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 21733,
											"end": 22017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21737,
											"end": 21751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22033,
											"end": 22036,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22026,
											"end": 22036,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22026,
											"end": 22036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 22042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 22042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21434,
											"end": 22042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21310,
											"end": 22042,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21310,
											"end": 22042,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21310,
											"end": 22042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21310,
											"end": 22042,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21310,
											"end": 22042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22048,
											"end": 22162,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 22048,
											"end": 22162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22115,
											"end": 22121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22149,
											"end": 22154,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22143,
											"end": 22155,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22133,
											"end": 22155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22133,
											"end": 22155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22048,
											"end": 22162,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22048,
											"end": 22162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22048,
											"end": 22162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22048,
											"end": 22162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22168,
											"end": 22352,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 22168,
											"end": 22352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22267,
											"end": 22278,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22301,
											"end": 22307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22296,
											"end": 22299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22289,
											"end": 22308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22341,
											"end": 22345,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22336,
											"end": 22339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22332,
											"end": 22346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22317,
											"end": 22346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22317,
											"end": 22346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22168,
											"end": 22352,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22168,
											"end": 22352,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22168,
											"end": 22352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22168,
											"end": 22352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22168,
											"end": 22352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22358,
											"end": 22490,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 22358,
											"end": 22490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22425,
											"end": 22429,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22448,
											"end": 22451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22440,
											"end": 22451,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22440,
											"end": 22451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22478,
											"end": 22482,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22473,
											"end": 22476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22469,
											"end": 22483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22461,
											"end": 22483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22461,
											"end": 22483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22358,
											"end": 22490,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22358,
											"end": 22490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22358,
											"end": 22490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22358,
											"end": 22490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22496,
											"end": 22675,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 22496,
											"end": 22675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22565,
											"end": 22575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22586,
											"end": 22632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 22628,
											"end": 22631,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22620,
											"end": 22626,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22586,
											"end": 22632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 22586,
											"end": 22632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22586,
											"end": 22632,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 22586,
											"end": 22632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22664,
											"end": 22668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22659,
											"end": 22662,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22655,
											"end": 22669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22641,
											"end": 22669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22641,
											"end": 22669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22496,
											"end": 22675,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22496,
											"end": 22675,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22496,
											"end": 22675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22496,
											"end": 22675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22496,
											"end": 22675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22681,
											"end": 22794,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 22681,
											"end": 22794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22751,
											"end": 22755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22783,
											"end": 22787,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22778,
											"end": 22781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22774,
											"end": 22788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22766,
											"end": 22788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22766,
											"end": 22788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22681,
											"end": 22794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22681,
											"end": 22794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22681,
											"end": 22794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22681,
											"end": 22794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 23562,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 22830,
											"end": 23562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22949,
											"end": 22952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22978,
											"end": 23032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 23026,
											"end": 23031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22978,
											"end": 23032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 22978,
											"end": 23032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22978,
											"end": 23032,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 22978,
											"end": 23032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23048,
											"end": 23134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 23127,
											"end": 23133,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23122,
											"end": 23125,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23048,
											"end": 23134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 23048,
											"end": 23134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23048,
											"end": 23134,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 23048,
											"end": 23134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23041,
											"end": 23134,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23041,
											"end": 23134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23158,
											"end": 23214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 23208,
											"end": 23213,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23158,
											"end": 23214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 23158,
											"end": 23214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23158,
											"end": 23214,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 23158,
											"end": 23214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23237,
											"end": 23244,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 23268,
											"end": 23269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23253,
											"end": 23537,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 23253,
											"end": 23537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23278,
											"end": 23284,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23275,
											"end": 23276,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23272,
											"end": 23285,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 23253,
											"end": 23537,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 23253,
											"end": 23537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 23253,
											"end": 23537,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 23354,
											"end": 23360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23348,
											"end": 23361,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 23381,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 23440,
											"end": 23443,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 23425,
											"end": 23438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23381,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 23381,
											"end": 23444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23381,
											"end": 23444,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 23381,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23374,
											"end": 23444,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 23374,
											"end": 23444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23467,
											"end": 23527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 23520,
											"end": 23526,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23467,
											"end": 23527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 23467,
											"end": 23527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23467,
											"end": 23527,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 23467,
											"end": 23527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23457,
											"end": 23527,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23457,
											"end": 23527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23313,
											"end": 23537,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23300,
											"end": 23301,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 23297,
											"end": 23298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23293,
											"end": 23302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23288,
											"end": 23302,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23288,
											"end": 23302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23253,
											"end": 23537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 23253,
											"end": 23537,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23253,
											"end": 23537,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 23253,
											"end": 23537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23257,
											"end": 23271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23553,
											"end": 23556,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23546,
											"end": 23556,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23546,
											"end": 23556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22954,
											"end": 23562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22954,
											"end": 23562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22954,
											"end": 23562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 23562,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 23562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 23562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 23562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 23562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23568,
											"end": 24312,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 23568,
											"end": 24312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23817,
											"end": 23821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23855,
											"end": 23857,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 23844,
											"end": 23853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23840,
											"end": 23858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23832,
											"end": 23858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23832,
											"end": 23858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23904,
											"end": 23913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23898,
											"end": 23902,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23894,
											"end": 23914,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23890,
											"end": 23891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23879,
											"end": 23888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23875,
											"end": 23892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23868,
											"end": 23915,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23932,
											"end": 24040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 24035,
											"end": 24039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24026,
											"end": 24032,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 23932,
											"end": 24040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 23932,
											"end": 24040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23932,
											"end": 24040,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 23932,
											"end": 24040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23924,
											"end": 24040,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23924,
											"end": 24040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24087,
											"end": 24096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24081,
											"end": 24085,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24077,
											"end": 24097,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24072,
											"end": 24074,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24061,
											"end": 24070,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24057,
											"end": 24075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24050,
											"end": 24098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24115,
											"end": 24223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 24218,
											"end": 24222,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24209,
											"end": 24215,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24115,
											"end": 24223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 24115,
											"end": 24223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24115,
											"end": 24223,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 24115,
											"end": 24223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24107,
											"end": 24223,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24107,
											"end": 24223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24233,
											"end": 24305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 24301,
											"end": 24303,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24290,
											"end": 24299,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24286,
											"end": 24304,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24277,
											"end": 24283,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24233,
											"end": 24305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 24233,
											"end": 24305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24233,
											"end": 24305,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 24233,
											"end": 24305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23568,
											"end": 24312,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 23568,
											"end": 24312,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23568,
											"end": 24312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23568,
											"end": 24312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23568,
											"end": 24312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23568,
											"end": 24312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23568,
											"end": 24312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24318,
											"end": 24498,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 24318,
											"end": 24498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24366,
											"end": 24443,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24363,
											"end": 24364,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24356,
											"end": 24444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24463,
											"end": 24467,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 24460,
											"end": 24461,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 24453,
											"end": 24468,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24487,
											"end": 24491,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 24484,
											"end": 24485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24477,
											"end": 24492,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 24504,
											"end": 24602,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 24504,
											"end": 24602,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24555,
											"end": 24561,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24589,
											"end": 24594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24583,
											"end": 24595,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 24573,
											"end": 24595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24573,
											"end": 24595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24504,
											"end": 24602,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24504,
											"end": 24602,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24504,
											"end": 24602,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24504,
											"end": 24602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24608,
											"end": 24776,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 24608,
											"end": 24776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24691,
											"end": 24702,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24725,
											"end": 24731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24720,
											"end": 24723,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24713,
											"end": 24732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24765,
											"end": 24769,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24760,
											"end": 24763,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24756,
											"end": 24770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24741,
											"end": 24770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24741,
											"end": 24770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24608,
											"end": 24776,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24608,
											"end": 24776,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24608,
											"end": 24776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24608,
											"end": 24776,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24608,
											"end": 24776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24782,
											"end": 25028,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 24782,
											"end": 25028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24863,
											"end": 24864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24873,
											"end": 24986,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 24873,
											"end": 24986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24887,
											"end": 24893,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24884,
											"end": 24885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24881,
											"end": 24894,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 24873,
											"end": 24986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24873,
											"end": 24986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 24873,
											"end": 24986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24972,
											"end": 24973,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 24967,
											"end": 24970,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24963,
											"end": 24974,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24957,
											"end": 24975,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 24953,
											"end": 24954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24948,
											"end": 24951,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24944,
											"end": 24955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24937,
											"end": 24976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24909,
											"end": 24911,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24906,
											"end": 24907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24902,
											"end": 24912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24897,
											"end": 24912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24897,
											"end": 24912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24873,
											"end": 24986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 24873,
											"end": 24986,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24873,
											"end": 24986,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 24873,
											"end": 24986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25020,
											"end": 25021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25011,
											"end": 25017,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25006,
											"end": 25009,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25002,
											"end": 25018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24995,
											"end": 25022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24844,
											"end": 25028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24782,
											"end": 25028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24782,
											"end": 25028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24782,
											"end": 25028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24782,
											"end": 25028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25034,
											"end": 25407,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 25034,
											"end": 25407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25120,
											"end": 25123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25148,
											"end": 25186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 25180,
											"end": 25185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25148,
											"end": 25186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 25148,
											"end": 25186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25148,
											"end": 25186,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 25148,
											"end": 25186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25202,
											"end": 25272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 25265,
											"end": 25271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25260,
											"end": 25263,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25202,
											"end": 25272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 25202,
											"end": 25272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25202,
											"end": 25272,
											"name": "tag",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 25202,
											"end": 25272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25195,
											"end": 25272,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 25195,
											"end": 25272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25281,
											"end": 25346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 25339,
											"end": 25345,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25334,
											"end": 25337,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25327,
											"end": 25331,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25320,
											"end": 25325,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 25316,
											"end": 25332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25281,
											"end": 25346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 25281,
											"end": 25346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25281,
											"end": 25346,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 25281,
											"end": 25346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25371,
											"end": 25400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 25393,
											"end": 25399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25371,
											"end": 25400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 25371,
											"end": 25400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25371,
											"end": 25400,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 25371,
											"end": 25400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25366,
											"end": 25369,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25362,
											"end": 25401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25355,
											"end": 25401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25355,
											"end": 25401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25124,
											"end": 25407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25034,
											"end": 25407,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25034,
											"end": 25407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25034,
											"end": 25407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25034,
											"end": 25407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25034,
											"end": 25407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25832,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 25413,
											"end": 25832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25552,
											"end": 25556,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25590,
											"end": 25592,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 25579,
											"end": 25588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25575,
											"end": 25593,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25567,
											"end": 25593,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25567,
											"end": 25593,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25603,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 25671,
											"end": 25672,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25660,
											"end": 25669,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25656,
											"end": 25673,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25647,
											"end": 25653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25603,
											"end": 25674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 25603,
											"end": 25674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25603,
											"end": 25674,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 25603,
											"end": 25674,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25721,
											"end": 25730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25715,
											"end": 25719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25711,
											"end": 25731,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25706,
											"end": 25708,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25695,
											"end": 25704,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25691,
											"end": 25709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25684,
											"end": 25732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25749,
											"end": 25825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 25820,
											"end": 25824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25811,
											"end": 25817,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25749,
											"end": 25825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 25749,
											"end": 25825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25749,
											"end": 25825,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 25749,
											"end": 25825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25741,
											"end": 25825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25741,
											"end": 25825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25832,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25832,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25413,
											"end": 25832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25838,
											"end": 26018,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 25838,
											"end": 26018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25886,
											"end": 25963,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25883,
											"end": 25884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25876,
											"end": 25964,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25983,
											"end": 25987,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 25980,
											"end": 25981,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 25973,
											"end": 25988,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26007,
											"end": 26011,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 26004,
											"end": 26005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25997,
											"end": 26012,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 26024,
											"end": 26215,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 26024,
											"end": 26215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26064,
											"end": 26067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26083,
											"end": 26103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 26101,
											"end": 26102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26083,
											"end": 26103,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 26083,
											"end": 26103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26083,
											"end": 26103,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 26083,
											"end": 26103,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26078,
											"end": 26103,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26078,
											"end": 26103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26117,
											"end": 26137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 26135,
											"end": 26136,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26117,
											"end": 26137,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 26117,
											"end": 26137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26117,
											"end": 26137,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 26117,
											"end": 26137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26112,
											"end": 26137,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26112,
											"end": 26137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26160,
											"end": 26161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26157,
											"end": 26158,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26153,
											"end": 26162,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26146,
											"end": 26162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26146,
											"end": 26162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26181,
											"end": 26184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 26178,
											"end": 26179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26175,
											"end": 26185,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 26172,
											"end": 26208,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 26172,
											"end": 26208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 26172,
											"end": 26208,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 26188,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 26188,
											"end": 26206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 26188,
											"end": 26206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26188,
											"end": 26206,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 26188,
											"end": 26206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26172,
											"end": 26208,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 26172,
											"end": 26208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26024,
											"end": 26215,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26024,
											"end": 26215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26024,
											"end": 26215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26024,
											"end": 26215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26024,
											"end": 26215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26221,
											"end": 26553,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 26221,
											"end": 26553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26342,
											"end": 26346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26380,
											"end": 26382,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 26369,
											"end": 26378,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26365,
											"end": 26383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26357,
											"end": 26383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26357,
											"end": 26383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26393,
											"end": 26464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 26461,
											"end": 26462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26450,
											"end": 26459,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26446,
											"end": 26463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26437,
											"end": 26443,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26393,
											"end": 26464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 26393,
											"end": 26464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26393,
											"end": 26464,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 26393,
											"end": 26464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26474,
											"end": 26546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 26542,
											"end": 26544,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26531,
											"end": 26540,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26527,
											"end": 26545,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26518,
											"end": 26524,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26474,
											"end": 26546,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 26474,
											"end": 26546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26474,
											"end": 26546,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 26474,
											"end": 26546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26221,
											"end": 26553,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 26221,
											"end": 26553,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26221,
											"end": 26553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26221,
											"end": 26553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26221,
											"end": 26553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26221,
											"end": 26553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26559,
											"end": 26675,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 26559,
											"end": 26675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26629,
											"end": 26650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 26644,
											"end": 26649,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26629,
											"end": 26650,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 26629,
											"end": 26650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26629,
											"end": 26650,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 26629,
											"end": 26650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26622,
											"end": 26627,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26619,
											"end": 26651,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 26609,
											"end": 26669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 26609,
											"end": 26669,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 26665,
											"end": 26666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26662,
											"end": 26663,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 26655,
											"end": 26667,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 26609,
											"end": 26669,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 26609,
											"end": 26669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26559,
											"end": 26675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26559,
											"end": 26675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26681,
											"end": 26818,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 26681,
											"end": 26818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26735,
											"end": 26740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26766,
											"end": 26772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26760,
											"end": 26773,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 26751,
											"end": 26773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26751,
											"end": 26773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26782,
											"end": 26812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 26806,
											"end": 26811,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26782,
											"end": 26812,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 26782,
											"end": 26812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26782,
											"end": 26812,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 26782,
											"end": 26812,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26681,
											"end": 26818,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26681,
											"end": 26818,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26681,
											"end": 26818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26681,
											"end": 26818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26681,
											"end": 26818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26824,
											"end": 27169,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 26824,
											"end": 27169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26891,
											"end": 26897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26940,
											"end": 26942,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26928,
											"end": 26937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26919,
											"end": 26926,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26915,
											"end": 26938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26911,
											"end": 26943,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 26908,
											"end": 27027,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 26908,
											"end": 27027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 26908,
											"end": 27027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 26946,
											"end": 27025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 26946,
											"end": 27025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 26946,
											"end": 27025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26946,
											"end": 27025,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 26946,
											"end": 27025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26908,
											"end": 27027,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 26908,
											"end": 27027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27066,
											"end": 27067,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27091,
											"end": 27152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 27144,
											"end": 27151,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27135,
											"end": 27141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27124,
											"end": 27133,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 27120,
											"end": 27142,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27091,
											"end": 27152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 27091,
											"end": 27152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27091,
											"end": 27152,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 27091,
											"end": 27152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27081,
											"end": 27152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27081,
											"end": 27152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27037,
											"end": 27162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26824,
											"end": 27169,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26824,
											"end": 27169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26824,
											"end": 27169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26824,
											"end": 27169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26824,
											"end": 27169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27175,
											"end": 27318,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 27175,
											"end": 27318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27232,
											"end": 27237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27263,
											"end": 27269,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27257,
											"end": 27270,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 27248,
											"end": 27270,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27248,
											"end": 27270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27279,
											"end": 27312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 27306,
											"end": 27311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27279,
											"end": 27312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 27279,
											"end": 27312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27279,
											"end": 27312,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 27279,
											"end": 27312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27175,
											"end": 27318,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 27175,
											"end": 27318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27175,
											"end": 27318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27175,
											"end": 27318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27175,
											"end": 27318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27341,
											"end": 28073,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 27341,
											"end": 28073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27448,
											"end": 27453,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27473,
											"end": 27554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 27489,
											"end": 27553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 27546,
											"end": 27552,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27489,
											"end": 27553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 27489,
											"end": 27553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27489,
											"end": 27553,
											"name": "tag",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 27489,
											"end": 27553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27473,
											"end": 27554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 27473,
											"end": 27554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27473,
											"end": 27554,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 27473,
											"end": 27554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27464,
											"end": 27554,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27464,
											"end": 27554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27574,
											"end": 27579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 27603,
											"end": 27609,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27596,
											"end": 27601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27589,
											"end": 27610,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27637,
											"end": 27641,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27630,
											"end": 27635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27626,
											"end": 27642,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27619,
											"end": 27642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27619,
											"end": 27642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27690,
											"end": 27694,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27682,
											"end": 27688,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27678,
											"end": 27695,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 27670,
											"end": 27676,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27666,
											"end": 27696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27719,
											"end": 27722,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 27711,
											"end": 27717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27708,
											"end": 27723,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 27705,
											"end": 27827,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 27705,
											"end": 27827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 27705,
											"end": 27827,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 27738,
											"end": 27817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 27738,
											"end": 27817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 27738,
											"end": 27817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27738,
											"end": 27817,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 27738,
											"end": 27817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27705,
											"end": 27827,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 27705,
											"end": 27827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27853,
											"end": 27859,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27836,
											"end": 28067,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 27836,
											"end": 28067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27870,
											"end": 27876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27865,
											"end": 27868,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27862,
											"end": 27877,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 27836,
											"end": 28067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 27836,
											"end": 28067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 27836,
											"end": 28067,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 27945,
											"end": 27948,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 27974,
											"end": 28022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 28018,
											"end": 28021,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 28006,
											"end": 28016,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27974,
											"end": 28022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 27974,
											"end": 28022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27974,
											"end": 28022,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 27974,
											"end": 28022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27969,
											"end": 27972,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27962,
											"end": 28023,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28052,
											"end": 28056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28047,
											"end": 28050,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28043,
											"end": 28057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28036,
											"end": 28057,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 28036,
											"end": 28057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27912,
											"end": 28067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27896,
											"end": 27900,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27891,
											"end": 27894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27887,
											"end": 27901,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27880,
											"end": 27901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27880,
											"end": 27901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27836,
											"end": 28067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 27836,
											"end": 28067,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27836,
											"end": 28067,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 27836,
											"end": 28067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27840,
											"end": 27861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27454,
											"end": 28073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27454,
											"end": 28073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27341,
											"end": 28073,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 27341,
											"end": 28073,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 27341,
											"end": 28073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27341,
											"end": 28073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27341,
											"end": 28073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27341,
											"end": 28073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28096,
											"end": 28481,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 28096,
											"end": 28481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28178,
											"end": 28183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28227,
											"end": 28230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28220,
											"end": 28224,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 28212,
											"end": 28218,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28208,
											"end": 28225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28204,
											"end": 28231,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 28194,
											"end": 28316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 28194,
											"end": 28316,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 28235,
											"end": 28314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 28235,
											"end": 28314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 28235,
											"end": 28314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28235,
											"end": 28314,
											"name": "tag",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 28235,
											"end": 28314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28194,
											"end": 28316,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 28194,
											"end": 28316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28345,
											"end": 28351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28339,
											"end": 28352,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 28370,
											"end": 28475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 28471,
											"end": 28474,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28463,
											"end": 28469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28456,
											"end": 28460,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28448,
											"end": 28454,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 28444,
											"end": 28461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28370,
											"end": 28475,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 28370,
											"end": 28475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28370,
											"end": 28475,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 28370,
											"end": 28475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28361,
											"end": 28475,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28361,
											"end": 28475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28184,
											"end": 28481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28096,
											"end": 28481,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28096,
											"end": 28481,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28096,
											"end": 28481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28096,
											"end": 28481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28096,
											"end": 28481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28487,
											"end": 28630,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 28487,
											"end": 28630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28544,
											"end": 28549,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28575,
											"end": 28581,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28569,
											"end": 28582,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 28560,
											"end": 28582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28560,
											"end": 28582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28591,
											"end": 28624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 28618,
											"end": 28623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 28591,
											"end": 28624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 28591,
											"end": 28624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28591,
											"end": 28624,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 28591,
											"end": 28624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28487,
											"end": 28630,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28487,
											"end": 28630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28487,
											"end": 28630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28487,
											"end": 28630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28487,
											"end": 28630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28653,
											"end": 29385,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 28653,
											"end": 29385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28760,
											"end": 28765,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28785,
											"end": 28866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 28801,
											"end": 28865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 28858,
											"end": 28864,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28801,
											"end": 28865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 28801,
											"end": 28865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28801,
											"end": 28865,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 28801,
											"end": 28865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28785,
											"end": 28866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 28785,
											"end": 28866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28785,
											"end": 28866,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 28785,
											"end": 28866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28776,
											"end": 28866,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28776,
											"end": 28866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28886,
											"end": 28891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 28915,
											"end": 28921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28908,
											"end": 28913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28901,
											"end": 28922,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28949,
											"end": 28953,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28942,
											"end": 28947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28938,
											"end": 28954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28931,
											"end": 28954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28931,
											"end": 28954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29002,
											"end": 29006,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28994,
											"end": 29000,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28990,
											"end": 29007,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 28982,
											"end": 28988,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28978,
											"end": 29008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29031,
											"end": 29034,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 29023,
											"end": 29029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29020,
											"end": 29035,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 29017,
											"end": 29139,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 29017,
											"end": 29139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 29017,
											"end": 29139,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29050,
											"end": 29129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 29050,
											"end": 29129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 29050,
											"end": 29129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29050,
											"end": 29129,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 29050,
											"end": 29129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29017,
											"end": 29139,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 29017,
											"end": 29139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29165,
											"end": 29171,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29148,
											"end": 29379,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 29148,
											"end": 29379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29182,
											"end": 29188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29177,
											"end": 29180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29174,
											"end": 29189,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 29148,
											"end": 29379,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 29148,
											"end": 29379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 29148,
											"end": 29379,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29257,
											"end": 29260,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 29286,
											"end": 29334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 29330,
											"end": 29333,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 29318,
											"end": 29328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29286,
											"end": 29334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 29286,
											"end": 29334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29286,
											"end": 29334,
											"name": "tag",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 29286,
											"end": 29334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29281,
											"end": 29284,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 29274,
											"end": 29335,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29364,
											"end": 29368,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29359,
											"end": 29362,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 29355,
											"end": 29369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29348,
											"end": 29369,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 29348,
											"end": 29369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29224,
											"end": 29379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29208,
											"end": 29212,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29203,
											"end": 29206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29199,
											"end": 29213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29192,
											"end": 29213,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29192,
											"end": 29213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29148,
											"end": 29379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 29148,
											"end": 29379,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29148,
											"end": 29379,
											"name": "tag",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 29148,
											"end": 29379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29152,
											"end": 29173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28766,
											"end": 29385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28766,
											"end": 29385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28653,
											"end": 29385,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 28653,
											"end": 29385,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28653,
											"end": 29385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28653,
											"end": 29385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28653,
											"end": 29385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28653,
											"end": 29385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29408,
											"end": 29793,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 29408,
											"end": 29793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29490,
											"end": 29495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29539,
											"end": 29542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29532,
											"end": 29536,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 29524,
											"end": 29530,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29520,
											"end": 29537,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29516,
											"end": 29543,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 29506,
											"end": 29628,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 29506,
											"end": 29628,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 29547,
											"end": 29626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 29547,
											"end": 29626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 29547,
											"end": 29626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29547,
											"end": 29626,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 29547,
											"end": 29626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29506,
											"end": 29628,
											"name": "tag",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 29506,
											"end": 29628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29657,
											"end": 29663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29651,
											"end": 29664,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 29682,
											"end": 29787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 29783,
											"end": 29786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 29775,
											"end": 29781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29768,
											"end": 29772,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29760,
											"end": 29766,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 29756,
											"end": 29773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29682,
											"end": 29787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 29682,
											"end": 29787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29682,
											"end": 29787,
											"name": "tag",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 29682,
											"end": 29787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29673,
											"end": 29787,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29673,
											"end": 29787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29496,
											"end": 29793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29408,
											"end": 29793,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 29408,
											"end": 29793,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29408,
											"end": 29793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29408,
											"end": 29793,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29408,
											"end": 29793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29799,
											"end": 29903,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 29799,
											"end": 29903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29844,
											"end": 29851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29873,
											"end": 29897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 29891,
											"end": 29896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29873,
											"end": 29897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 29873,
											"end": 29897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29873,
											"end": 29897,
											"name": "tag",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 29873,
											"end": 29897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29862,
											"end": 29897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29862,
											"end": 29897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29799,
											"end": 29903,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29799,
											"end": 29903,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29799,
											"end": 29903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29799,
											"end": 29903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29909,
											"end": 30047,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 29909,
											"end": 30047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29990,
											"end": 30022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 30016,
											"end": 30021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29990,
											"end": 30022,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 29990,
											"end": 30022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29990,
											"end": 30022,
											"name": "tag",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 29990,
											"end": 30022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29983,
											"end": 29988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29980,
											"end": 30023,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 29970,
											"end": 30041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 29970,
											"end": 30041,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30037,
											"end": 30038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30034,
											"end": 30035,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 30027,
											"end": 30039,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 29970,
											"end": 30041,
											"name": "tag",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 29970,
											"end": 30041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29909,
											"end": 30047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29909,
											"end": 30047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30053,
											"end": 30212,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 30053,
											"end": 30212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30118,
											"end": 30123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30149,
											"end": 30155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30143,
											"end": 30156,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 30134,
											"end": 30156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30134,
											"end": 30156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30165,
											"end": 30206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "664"
										},
										{
											"begin": 30200,
											"end": 30205,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30165,
											"end": 30206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 30165,
											"end": 30206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30165,
											"end": 30206,
											"name": "tag",
											"source": 10,
											"value": "664"
										},
										{
											"begin": 30165,
											"end": 30206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30053,
											"end": 30212,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30053,
											"end": 30212,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30053,
											"end": 30212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30053,
											"end": 30212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30053,
											"end": 30212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30218,
											"end": 31303,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 30218,
											"end": 31303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30364,
											"end": 30370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30372,
											"end": 30378,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 30380,
											"end": 30386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30429,
											"end": 30431,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 30417,
											"end": 30426,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30408,
											"end": 30415,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 30404,
											"end": 30427,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 30400,
											"end": 30432,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 30397,
											"end": 30516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 30397,
											"end": 30516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 30397,
											"end": 30516,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30435,
											"end": 30514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 30435,
											"end": 30514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 30435,
											"end": 30514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30435,
											"end": 30514,
											"name": "tag",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 30435,
											"end": 30514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30397,
											"end": 30516,
											"name": "tag",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 30397,
											"end": 30516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30576,
											"end": 30577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30565,
											"end": 30574,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30561,
											"end": 30578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30555,
											"end": 30579,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 30606,
											"end": 30624,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30598,
											"end": 30604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30595,
											"end": 30625,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 30592,
											"end": 30709,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 30592,
											"end": 30709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 30592,
											"end": 30709,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30628,
											"end": 30707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 30628,
											"end": 30707,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 30628,
											"end": 30707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30628,
											"end": 30707,
											"name": "tag",
											"source": 10,
											"value": "669"
										},
										{
											"begin": 30628,
											"end": 30707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30592,
											"end": 30709,
											"name": "tag",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 30592,
											"end": 30709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30733,
											"end": 30822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 30814,
											"end": 30821,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 30805,
											"end": 30811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30794,
											"end": 30803,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 30790,
											"end": 30812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30733,
											"end": 30822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 30733,
											"end": 30822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30733,
											"end": 30822,
											"name": "tag",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 30733,
											"end": 30822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30723,
											"end": 30822,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 30723,
											"end": 30822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30526,
											"end": 30832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30892,
											"end": 30894,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30881,
											"end": 30890,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 30877,
											"end": 30895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30871,
											"end": 30896,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 30923,
											"end": 30941,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30915,
											"end": 30921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30912,
											"end": 30942,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 30909,
											"end": 31026,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 30909,
											"end": 31026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 30909,
											"end": 31026,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 30945,
											"end": 31024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 30945,
											"end": 31024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 30945,
											"end": 31024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30945,
											"end": 31024,
											"name": "tag",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 30945,
											"end": 31024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30909,
											"end": 31026,
											"name": "tag",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 30909,
											"end": 31026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31050,
											"end": 31139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 31131,
											"end": 31138,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 31122,
											"end": 31128,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31111,
											"end": 31120,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 31107,
											"end": 31129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31050,
											"end": 31139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 31050,
											"end": 31139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31050,
											"end": 31139,
											"name": "tag",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 31050,
											"end": 31139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31040,
											"end": 31139,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 31040,
											"end": 31139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30842,
											"end": 31149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31188,
											"end": 31190,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 31278,
											"end": 31285,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 31269,
											"end": 31275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31258,
											"end": 31267,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 31254,
											"end": 31276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 31214,
											"end": 31286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "tag",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 31214,
											"end": 31286,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31204,
											"end": 31286,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31204,
											"end": 31286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31159,
											"end": 31296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30218,
											"end": 31303,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30218,
											"end": 31303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30218,
											"end": 31303,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30218,
											"end": 31303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30218,
											"end": 31303,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 30218,
											"end": 31303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31309,
											"end": 31751,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 31309,
											"end": 31751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31458,
											"end": 31462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31496,
											"end": 31498,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 31485,
											"end": 31494,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31481,
											"end": 31499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31473,
											"end": 31499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31473,
											"end": 31499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31509,
											"end": 31580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 31577,
											"end": 31578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31566,
											"end": 31575,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31562,
											"end": 31579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31553,
											"end": 31559,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 31509,
											"end": 31580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 31509,
											"end": 31580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31509,
											"end": 31580,
											"name": "tag",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 31509,
											"end": 31580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31590,
											"end": 31662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 31658,
											"end": 31660,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 31647,
											"end": 31656,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31643,
											"end": 31661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31634,
											"end": 31640,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 31590,
											"end": 31662,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 31590,
											"end": 31662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31590,
											"end": 31662,
											"name": "tag",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 31590,
											"end": 31662,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31672,
											"end": 31744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 31740,
											"end": 31742,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 31729,
											"end": 31738,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31725,
											"end": 31743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31716,
											"end": 31722,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 31672,
											"end": 31744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 31672,
											"end": 31744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31672,
											"end": 31744,
											"name": "tag",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 31672,
											"end": 31744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31309,
											"end": 31751,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 31309,
											"end": 31751,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 31309,
											"end": 31751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31309,
											"end": 31751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31309,
											"end": 31751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31309,
											"end": 31751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31309,
											"end": 31751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"lib/allo-v2/contracts/core/interfaces/IAllo.sol",
								"lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
								"lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
								"lib/allo-v2/contracts/core/libraries/Errors.sol",
								"lib/allo-v2/contracts/core/libraries/Metadata.sol",
								"lib/allo-v2/contracts/core/libraries/Native.sol",
								"lib/allo-v2/contracts/core/libraries/Transfer.sol",
								"lib/allo-v2/contracts/strategies/BaseStrategy.sol",
								"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
								"src/YeeterStrategy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE()": "a0cf0aea",
							"allocate(address[],uint256[],address)": "44469f98",
							"allocate(bytes,address)": "ef2920fc",
							"distribute(address[],bytes,address)": "0a6f0ee9",
							"getAllo()": "15cc481e",
							"getPayouts(address[],bytes[])": "b2b878d0",
							"getPoolAmount()": "4ab4ba42",
							"getPoolId()": "38fff2d0",
							"getRecipientStatus(address)": "eb11af93",
							"getStrategyId()": "42fda9c7",
							"increasePoolAmount(uint256)": "f5b0dfb7",
							"initialize(uint256,bytes)": "edd146cc",
							"isPoolActive()": "df868ed3",
							"isValidAllocator(address)": "4d31d087",
							"registerRecipient(bytes,address)": "2bbe0cae",
							"withdraw(address,address,uint256)": "d9caed12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allo\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALLOCATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALLOCATION_NOT_ENDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ALREADY_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AMOUNT_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ANCHOR_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ARRAY_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INPUT_LENGTH_MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_FEE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_METADATA\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_REGISTRATION\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IS_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MISMATCH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NONCE_NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NON_ZERO_VALUE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOOP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_APPROVED_STRATEGY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IMPLEMENTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_INITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PENDING_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"POOL_INACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_ALREADY_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"name\":\"RECIPIENT_ERROR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RECIPIENT_NOT_ACCEPTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REGISTRATION_NOT_ACTIVE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UNAUTHORIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ANCHOR_ERROR()\":[{\"details\":\"Thrown if the anchor creation fails\"}],\"NONCE_NOT_AVAILABLE()\":[{\"details\":\"Thrown when the nonce passed has been used or not available\"}],\"NOT_PENDING_OWNER()\":[{\"details\":\"Thrown when the 'msg.sender' is not the pending owner on ownership transfer\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to get the payout summary for the recipients\",\"_recipientIds\":\"The IDs of the recipients\"},\"returns\":{\"_0\":\"The payout summary for the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}},\"withdraw(address,address,uint256)\":{\"params\":{\"_amount\":\"Amount to withdraw\",\"_recipient\":\"Address to send the funds to\",\"_token\":\"Token address\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ALLOCATION_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is active.\"}],\"ALLOCATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when the allocation is not active.\"}],\"ALLOCATION_NOT_ENDED()\":[{\"notice\":\"Thrown when the allocation is not ended.\"}],\"ALREADY_INITIALIZED()\":[{\"notice\":\"Thrown when data is already intialized\"}],\"AMOUNT_MISMATCH()\":[{\"notice\":\"Thrown when the amount of tokens sent does not match the amount of tokens expected\"}],\"ARRAY_MISMATCH()\":[{\"notice\":\"Thrown when two arrays length are not equal\"}],\"INVALID()\":[{\"notice\":\"Thrown as a general error when input / data is invalid\"}],\"INVALID_ADDRESS()\":[{\"notice\":\"Thrown when an invalid address is used\"}],\"INVALID_FEE()\":[{\"notice\":\"Thrown when the fee is below 1e18 which is the fee percentage denominator\"}],\"INVALID_METADATA()\":[{\"notice\":\"Thrown when the metadata is invalid.\"}],\"INVALID_REGISTRATION()\":[{\"notice\":\"Thrown when the registration is invalid.\"}],\"IS_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is approved and should be cloned\"}],\"MISMATCH()\":[{\"notice\":\"Thrown when mismatch in decoding data\"}],\"NON_ZERO_VALUE()\":[{\"notice\":\"Thrown when the value is non-zero\"}],\"NOT_APPROVED_STRATEGY()\":[{\"notice\":\"Thrown when the strategy is not approved\"}],\"NOT_ENOUGH_FUNDS()\":[{\"notice\":\"Thrown when not enough funds are available\"}],\"NOT_IMPLEMENTED()\":[{\"notice\":\"Thrown when the function is not implemented\"}],\"NOT_INITIALIZED()\":[{\"notice\":\"Thrown when data is yet to be initialized\"}],\"POOL_ACTIVE()\":[{\"notice\":\"Thrown when a pool is already active\"}],\"POOL_INACTIVE()\":[{\"notice\":\"Thrown when a pool is inactive\"}],\"RECIPIENT_ALREADY_ACCEPTED()\":[{\"notice\":\"Thrown when recipient is already accepted.\"}],\"RECIPIENT_ERROR(address)\":[{\"notice\":\"Thrown when there is an error in recipient.\"}],\"RECIPIENT_NOT_ACCEPTED()\":[{\"notice\":\"Thrown when the recipient is not accepted.\"}],\"REGISTRATION_ACTIVE()\":[{\"notice\":\"Thrown when registration is active.\"}],\"REGISTRATION_NOT_ACTIVE()\":[{\"notice\":\"Thrown when registration is not active.\"}],\"UNAUTHORIZED()\":[{\"notice\":\"Thrown when user is not authorized\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when address is the zero address\"}]},\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"NATIVE()\":{\"notice\":\"Address of the native token\"},\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Gets the payout summary for recipients.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Withdraw funds stuck on contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/YeeterStrategy.sol\":\"YeeterStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":allo/=lib/allo-v2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/allo-v2/lib/solady/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/allo-v2/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xb4d42b75def46f3fd1e182f5b18bde5df74822d3666580e66d34802f362b517e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a9492cb300be5f7cd8c58f54ff472b66c108827833bf1156028d8513b91e8f29\",\"dweb:/ipfs/QmccCdVZWsPhJEExajS6gANPyg2pEpD6RZwyjFNrdJM4Ek\"]},\"lib/allo-v2/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"lib/allo-v2/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"lib/allo-v2/contracts/core/libraries/Errors.sol\":{\"keccak256\":\"0x67e3c1109948a92cb3a01e8c2325c5f1b748ecbd4c9cd5bee34e81fa737f77ea\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9603d3f1c4bb4b44a55663e71688a9d10786038e5dfa5039aa354572af1a53c3\",\"dweb:/ipfs/QmWNxsPH9YaJJkFiiU6oJ642i5kHxPzpRYfR5H8zSH4KaP\"]},\"lib/allo-v2/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x452a95a8762fafd51d36295138f7e14189cbaaca7274d6fd34a59ad57a442d44\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2cc5507da2550ab9bfa0fbb263e703f9e70b831190bb7b2bcdbb231cab49795c\",\"dweb:/ipfs/QmQXCD8v2HppXAX17aH49JvNyyfDYzGMrg63QNabUEXPpn\"]},\"lib/allo-v2/contracts/core/libraries/Native.sol\":{\"keccak256\":\"0x23dacace24a8c570a659dcc7e52fca2d39cc7577c6cfa674820cafaf194b29d5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0727880a600b1803f02b58ad002938462dc61aacf841f5e1ee38f296fdd67e8a\",\"dweb:/ipfs/QmdrEiJxFFnUfn2QUNxRAUMS1qwCnRtGeWPChaGzhAkRnv\"]},\"lib/allo-v2/contracts/core/libraries/Transfer.sol\":{\"keccak256\":\"0x99f4e3bfd5cea354c2ef9e9774d7bdb2310faec5e7a21a619d87377b40eba135\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f84412d189fa7c6ea3656409af156fad084b1a541850798da3e76549e3124588\",\"dweb:/ipfs/QmT3roFjt41PX7zgjT7KdThFU37Fh7F6vEyKooSzpfTBvq\"]},\"lib/allo-v2/contracts/strategies/BaseStrategy.sol\":{\"keccak256\":\"0x3f1382dc6c35d50545e327e7ed6016f2bd752357d446bd698014073f0b812873\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://99500abcd617fa43f6dde49e2c7802821ceaf54a65a8055cbbf2695ecd107974\",\"dweb:/ipfs/QmUktZkWuu3GCMEijY1fqt7NMy7BzpTvEtcmpB1fuoa7zt\"]},\"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x06d3261d13cf5a08f9bcda05e17be0a6a0380193116298fdf8eabf9bf80d3624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96965a8a2b1bd2d6cff4a8f78bcb33b0de8848834f8e4be28c03609ae08e9298\",\"dweb:/ipfs/QmSoNDxaEozMZgNdVEygfEvnk26Tu4UeFeapvtMsoUFftt\"]},\"src/YeeterStrategy.sol\":{\"keccak256\":\"0x604a0a26d55bfeb2b59b54b54ecb9354b1d400d62601bc15ccd2dbd4c5afcc7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a6feb592b700f639fd717cc8570959b8f27cb864528a068d4cd9896d8d0ccfc\",\"dweb:/ipfs/QmZFUkTDS7B5zucm8gyj56eP8Rc3wxLppb8wqjYQ4RzmVx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1060,
								"contract": "src/YeeterStrategy.sol:YeeterStrategy",
								"label": "poolActive",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1062,
								"contract": "src/YeeterStrategy.sol:YeeterStrategy",
								"label": "poolId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1064,
								"contract": "src/YeeterStrategy.sol:YeeterStrategy",
								"label": "poolAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ALLOCATION_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is active."
								}
							],
							"ALLOCATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when the allocation is not active."
								}
							],
							"ALLOCATION_NOT_ENDED()": [
								{
									"notice": "Thrown when the allocation is not ended."
								}
							],
							"ALREADY_INITIALIZED()": [
								{
									"notice": "Thrown when data is already intialized"
								}
							],
							"AMOUNT_MISMATCH()": [
								{
									"notice": "Thrown when the amount of tokens sent does not match the amount of tokens expected"
								}
							],
							"ARRAY_MISMATCH()": [
								{
									"notice": "Thrown when two arrays length are not equal"
								}
							],
							"INVALID()": [
								{
									"notice": "Thrown as a general error when input / data is invalid"
								}
							],
							"INVALID_ADDRESS()": [
								{
									"notice": "Thrown when an invalid address is used"
								}
							],
							"INVALID_FEE()": [
								{
									"notice": "Thrown when the fee is below 1e18 which is the fee percentage denominator"
								}
							],
							"INVALID_METADATA()": [
								{
									"notice": "Thrown when the metadata is invalid."
								}
							],
							"INVALID_REGISTRATION()": [
								{
									"notice": "Thrown when the registration is invalid."
								}
							],
							"IS_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is approved and should be cloned"
								}
							],
							"MISMATCH()": [
								{
									"notice": "Thrown when mismatch in decoding data"
								}
							],
							"NON_ZERO_VALUE()": [
								{
									"notice": "Thrown when the value is non-zero"
								}
							],
							"NOT_APPROVED_STRATEGY()": [
								{
									"notice": "Thrown when the strategy is not approved"
								}
							],
							"NOT_ENOUGH_FUNDS()": [
								{
									"notice": "Thrown when not enough funds are available"
								}
							],
							"NOT_IMPLEMENTED()": [
								{
									"notice": "Thrown when the function is not implemented"
								}
							],
							"NOT_INITIALIZED()": [
								{
									"notice": "Thrown when data is yet to be initialized"
								}
							],
							"POOL_ACTIVE()": [
								{
									"notice": "Thrown when a pool is already active"
								}
							],
							"POOL_INACTIVE()": [
								{
									"notice": "Thrown when a pool is inactive"
								}
							],
							"RECIPIENT_ALREADY_ACCEPTED()": [
								{
									"notice": "Thrown when recipient is already accepted."
								}
							],
							"RECIPIENT_ERROR(address)": [
								{
									"notice": "Thrown when there is an error in recipient."
								}
							],
							"RECIPIENT_NOT_ACCEPTED()": [
								{
									"notice": "Thrown when the recipient is not accepted."
								}
							],
							"REGISTRATION_ACTIVE()": [
								{
									"notice": "Thrown when registration is active."
								}
							],
							"REGISTRATION_NOT_ACTIVE()": [
								{
									"notice": "Thrown when registration is not active."
								}
							],
							"UNAUTHORIZED()": [
								{
									"notice": "Thrown when user is not authorized"
								}
							],
							"ZERO_ADDRESS()": [
								{
									"notice": "Thrown when address is the zero address"
								}
							]
						},
						"events": {
							"Allocated(address,uint256,address,address)": {
								"notice": "Emitted when a recipient is allocated to."
							},
							"Distributed(address,address,uint256,address)": {
								"notice": "Emitted when tokens are distributed."
							},
							"Initialized(uint256,bytes)": {
								"notice": "Emitted when strategy is initialized."
							},
							"PoolActive(bool)": {
								"notice": "Emitted when pool is set to active status."
							},
							"Registered(address,bytes,address)": {
								"notice": "Emitted when a recipient is registered."
							}
						},
						"kind": "user",
						"methods": {
							"NATIVE()": {
								"notice": "Address of the native token"
							},
							"allocate(bytes,address)": {
								"notice": "Allocates to a recipient."
							},
							"distribute(address[],bytes,address)": {
								"notice": "Distributes funds (tokens) to recipients."
							},
							"getAllo()": {
								"notice": "Getter for the 'Allo' contract."
							},
							"getPayouts(address[],bytes[])": {
								"notice": "Gets the payout summary for recipients."
							},
							"getPoolAmount()": {
								"notice": "Getter for the 'poolAmount'."
							},
							"getPoolId()": {
								"notice": "Getter for the 'poolId'."
							},
							"getRecipientStatus(address)": {
								"notice": "Getter for the status of a recipient."
							},
							"getStrategyId()": {
								"notice": "Getter for the 'strategyId'."
							},
							"increasePoolAmount(uint256)": {
								"notice": "Increases the pool amount."
							},
							"initialize(uint256,bytes)": {
								"notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
							},
							"isPoolActive()": {
								"notice": "Getter for whether or not the pool is active."
							},
							"isValidAllocator(address)": {
								"notice": "Checks if the '_allocator' is a valid allocator."
							},
							"registerRecipient(bytes,address)": {
								"notice": "Registers a recipient."
							},
							"withdraw(address,address,uint256)": {
								"notice": "Withdraw funds stuck on contract"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> lib/allo-v2/contracts/strategies/BaseStrategy.sol:174:9:\n    |\n174 |         _afterRegisterRecipient(_data, _sender);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9766,
					"file": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
					"start": 9727
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> lib/allo-v2/contracts/strategies/BaseStrategy.sol:201:9:\n    |\n201 |         _afterDistribute(_recipientIds, _data, _sender);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11023,
					"file": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
					"start": 10976
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5740",
				"formattedMessage": "Warning: Unreachable code.\n   --> lib/allo-v2/contracts/strategies/BaseStrategy.sol:223:13:\n    |\n223 |             unchecked {\n    |             ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unreachable code.",
				"severity": "warning",
				"sourceLocation": {
					"end": 12031,
					"file": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
					"start": 11985
				},
				"type": "Warning"
			}
		],
		"sources": {
			"lib/allo-v2/contracts/core/interfaces/IAllo.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/interfaces/IAllo.sol",
					"exportedSymbols": {
						"IAllo": [
							358
						],
						"IRegistry": [
							550
						],
						"IStrategy": [
							717
						],
						"Metadata": [
							819
						]
					},
					"id": 359,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
							"file": "./IRegistry.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 359,
							"sourceUnit": 551,
							"src": "82:42:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 550,
										"src": "90:9:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
							"file": "./IStrategy.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 359,
							"sourceUnit": 718,
							"src": "125:42:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 717,
										"src": "133:9:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Metadata.sol",
							"file": "../libraries/Metadata.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 359,
							"sourceUnit": 820,
							"src": "190:51:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "198:8:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAllo",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "4234:297:0",
								"text": "@title Allo Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice Interface for the Allo contract. It exposes all functions needed to use the Allo protocol."
							},
							"fullyImplemented": false,
							"id": 358,
							"linearizedBaseContracts": [
								358
							],
							"name": "IAllo",
							"nameLocation": "4541:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IAllo.Pool",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "profileId",
											"nameLocation": "4748:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "4740:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 9,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "4740:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "strategy",
											"nameLocation": "4777:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "4767:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IStrategy_$717",
												"typeString": "contract IStrategy"
											},
											"typeName": {
												"id": 12,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 11,
													"name": "IStrategy",
													"nameLocations": [
														"4767:9:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 717,
													"src": "4767:9:0"
												},
												"referencedDeclaration": 717,
												"src": "4767:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IStrategy_$717",
													"typeString": "contract IStrategy"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "4803:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "4795:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 14,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4795:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "4827:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "4818:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
												"typeString": "struct Metadata"
											},
											"typeName": {
												"id": 17,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 16,
													"name": "Metadata",
													"nameLocations": [
														"4818:8:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 819,
													"src": "4818:8:0"
												},
												"referencedDeclaration": 819,
												"src": "4818:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
													"typeString": "struct Metadata"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "managerRole",
											"nameLocation": "4853:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "4845:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "4845:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "4882:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "4874:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 21,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "4874:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pool",
									"nameLocation": "4725:4:0",
									"nodeType": "StructDefinition",
									"scope": 358,
									"src": "4718:180:0",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "4998:402:0",
										"text": "@notice Event emitted when a new pool is created\n @param poolId ID of the pool created\n @param profileId ID of the profile the pool is associated with\n @param strategy Address of the strategy contract\n @param token Address of the token pool was funded with when created\n @param amount Amount pool was funded with when created\n @param metadata Pool metadata"
									},
									"eventSelector": "69bcb5a6cf6a3c95185cbb451e77787240c866dd2e8332597e3013ff18a1aba1",
									"id": 40,
									"name": "PoolCreated",
									"nameLocation": "5411:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5448:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "5432:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "5480:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "5464:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 27,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "5509:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "5499:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IStrategy_$717",
													"typeString": "contract IStrategy"
												},
												"typeName": {
													"id": 30,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 29,
														"name": "IStrategy",
														"nameLocations": [
															"5499:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 717,
														"src": "5499:9:0"
													},
													"referencedDeclaration": 717,
													"src": "5499:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStrategy_$717",
														"typeString": "contract IStrategy"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5535:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "5527:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5527:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5558:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "5550:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "5583:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "5574:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 37,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 36,
														"name": "Metadata",
														"nameLocations": [
															"5574:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "5574:8:0"
													},
													"referencedDeclaration": 819,
													"src": "5574:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5422:175:0"
									},
									"src": "5405:193:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "5604:152:0",
										"text": "@notice Emitted when a pools metadata is updated\n @param poolId ID of the pool updated\n @param metadata Pool metadata that was updated"
									},
									"eventSelector": "14f52b76bda9e4c482842cefda2968d332933577988f224e80aae18fba10edf0",
									"id": 48,
									"name": "PoolMetadataUpdated",
									"nameLocation": "5767:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5803:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "5787:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "5820:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "5811:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 45,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 44,
														"name": "Metadata",
														"nameLocations": [
															"5811:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "5811:8:0"
													},
													"referencedDeclaration": 819,
													"src": "5811:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:43:0"
									},
									"src": "5761:69:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "5836:191:0",
										"text": "@notice Emitted when a pool is funded\n @param poolId ID of the pool funded\n @param amount Amount funded to the pool\n @param fee Amount of the fee paid to the treasury"
									},
									"eventSelector": "bf59838198f4ea92f663f5c1fc697f151a1b746b7dff86d564f250a55cbb4851",
									"id": 57,
									"name": "PoolFunded",
									"nameLocation": "6038:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "6049:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6081:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "6073:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "6097:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "6089:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6048:53:0"
									},
									"src": "6032:70:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "6108:158:0",
										"text": "@notice Emitted when the base fee is paid\n @param poolId ID of the pool the base fee was paid for\n @param amount Amount of the base fee paid"
									},
									"eventSelector": "02e340b51c6ae66fd22509c9b016f224c47a54063d4259fe3d860958e9eaac72",
									"id": 64,
									"name": "BaseFeePaid",
									"nameLocation": "6277:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6305:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "6289:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6321:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "6313:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6288:40:0"
									},
									"src": "6271:58:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "6335:108:0",
										"text": "@notice Emitted when the treasury address is updated\n @param treasury Address of the new treasury"
									},
									"eventSelector": "7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1",
									"id": 69,
									"name": "TreasuryUpdated",
									"nameLocation": "6454:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "6478:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "6470:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:18:0"
									},
									"src": "6448:40:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "6494:104:0",
										"text": "@notice Emitted when the percent fee is updated\n @param percentFee New percentage for the fee"
									},
									"eventSelector": "9e826789de2de708fd9f09edea1182545e543893caa8ff71f8eb3aab50a4b065",
									"id": 74,
									"name": "PercentFeeUpdated",
									"nameLocation": "6609:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"indexed": false,
												"mutability": "mutable",
												"name": "percentFee",
												"nameLocation": "6635:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "6627:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6626:20:0"
									},
									"src": "6603:44:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "6653:91:0",
										"text": "@notice Emitted when the base fee is updated\n @param baseFee New base fee amount"
									},
									"eventSelector": "803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c3",
									"id": 79,
									"name": "BaseFeeUpdated",
									"nameLocation": "6755:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseFee",
												"nameLocation": "6778:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "6770:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6769:17:0"
									},
									"src": "6749:38:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "6793:108:0",
										"text": "@notice Emitted when the registry address is updated\n @param registry Address of the new registry"
									},
									"eventSelector": "d6ceddf6d2a22f21c7c81675c518004eff43bc5c8a6fc32a0b748e69d58671cd",
									"id": 84,
									"name": "RegistryUpdated",
									"nameLocation": "6912:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": false,
												"mutability": "mutable",
												"name": "registry",
												"nameLocation": "6936:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "6928:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:18:0"
									},
									"src": "6906:40:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "6952:142:0",
										"text": "@notice Emitted when a strategy is approved and added to the cloneable strategies\n @param strategy Address of the strategy approved"
									},
									"eventSelector": "960dd94cbb79169f09a4e445d58b895df2d9bffa5b31055d0932d801724a20d1",
									"id": 89,
									"name": "StrategyApproved",
									"nameLocation": "7105:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "7130:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "7122:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7121:18:0"
									},
									"src": "7099:41:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "7146:132:0",
										"text": "@notice Emitted when a strategy is removed from the cloneable strategies\n @param strategy Address of the strategy removed"
									},
									"eventSelector": "09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea4",
									"id": 94,
									"name": "StrategyRemoved",
									"nameLocation": "7289:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "7313:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "7305:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7304:18:0"
									},
									"src": "7283:40:0"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "7465:280:0",
										"text": "@notice Initialize the Allo contract\n @param _owner Address of the owner\n @param _registry Address of the registry contract\n @param _treasury Address of the treasury\n @param _percentFee Percentage for the fee\n @param _baseFee Base fee amount"
									},
									"functionSelector": "a6b63eb8",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "7759:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "7787:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "7779:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "7811:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "7803:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "7846:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "7830:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7830:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_percentFee",
												"nameLocation": "7873:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "7865:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_baseFee",
												"nameLocation": "7902:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "7894:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7769:147:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7925:0:0"
									},
									"scope": 358,
									"src": "7750:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "7932:1251:0",
										"text": "@notice Creates a new pool (with a custom strategy)\n @dev 'msg.sender' must be a member or owner of a profile to create a pool with or without a custom strategy, The encoded data\n      will be specific to a given strategy requirements, reference the strategy implementation of 'initialize()'. The strategy\n      address passed must not be a cloneable strategy. The strategy address passed must not be the zero address. 'msg.sender' must\n      be a member or owner of the profile id passed as '_profileId'.\n @param _profileId The 'profileId' of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n @param _strategy The address of the deployed custom strategy\n @param _initStrategyData The data to initialize the strategy\n @param _token The address of the token you want to use in your pool\n @param _amount The amount of the token you want to deposit into the pool on initialization\n @param _metadata The 'Metadata' of the pool, this uses our 'Meatdata.sol' struct (consistent throughout the protocol)\n @param _managers The managers of the pool, and can be added/removed later by the pool admin\n @return poolId The ID of the pool"
									},
									"functionSelector": "e1007d4a",
									"id": 130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPoolWithCustomStrategy",
									"nameLocation": "9197:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "9243:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "9235:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "9271:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "9263:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9263:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "_initStrategyData",
												"nameLocation": "9303:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "9290:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "9338:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "9330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "9354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "9395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "9379:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 121,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 120,
														"name": "Metadata",
														"nameLocations": [
															"9379:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "9379:8:0"
													},
													"referencedDeclaration": 819,
													"src": "9379:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_managers",
												"nameLocation": "9431:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "9414:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 123,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9414:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 124,
													"nodeType": "ArrayTypeName",
													"src": "9414:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9225:221:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "9481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "9473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9472:16:0"
									},
									"scope": 358,
									"src": "9188:301:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "9495:795:0",
										"text": "@notice Creates a new pool (by cloning a cloneable strategies).\n @dev 'msg.sender' must be owner or member of the profile id passed as '_profileId'.\n @param _profileId The ID of the registry profile, used to check if 'msg.sender' is a member or owner of the profile\n @param _strategy The address of the strategy contract the pool will use.\n @param _initStrategyData The data to initialize the strategy\n @param _token The address of the token\n @param _amount The amount of the token\n @param _metadata The metadata of the pool\n @param _managers The managers of the pool\n @custom:initstrategydata The encoded data will be specific to a given strategy requirements,\n    reference the strategy implementation of 'initialize()'"
									},
									"functionSelector": "77da8caf",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "10304:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "10332:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "10324:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 132,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "10360:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "10352:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_initStrategyData",
												"nameLocation": "10392:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "10379:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10379:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "10427:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "10419:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "10443:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "10484:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "10468:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 143,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 142,
														"name": "Metadata",
														"nameLocations": [
															"10468:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "10468:8:0"
													},
													"referencedDeclaration": 819,
													"src": "10468:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_managers",
												"nameLocation": "10520:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "10503:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 145,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10503:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 146,
													"nodeType": "ArrayTypeName",
													"src": "10503:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10314:221:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "10570:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "10562:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10561:16:0"
									},
									"scope": 358,
									"src": "10295:283:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "10584:186:0",
										"text": "@notice Updates a pools metadata.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to update\n @param _metadata The new metadata to set"
									},
									"functionSelector": "5f9ca138",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePoolMetadata",
									"nameLocation": "10784:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "10811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "10803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "10836:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "10820:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 157,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 156,
														"name": "Metadata",
														"nameLocations": [
															"10820:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "10820:8:0"
													},
													"referencedDeclaration": 819,
													"src": "10820:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10802:44:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10855:0:0"
									},
									"scope": 358,
									"src": "10775:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "10862:149:0",
										"text": "@notice Update the registry address.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _registry The new registry address"
									},
									"functionSelector": "1a5da6c8",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRegistry",
									"nameLocation": "11025:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "11048:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "11040:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11039:19:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11067:0:0"
									},
									"scope": 358,
									"src": "11016:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "11074:150:0",
										"text": "@notice Updates the treasury address.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _treasury The new treasury address"
									},
									"functionSelector": "7f51bb1f",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTreasury",
									"nameLocation": "11238:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "11269:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "11253:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11253:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11252:27:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11288:0:0"
									},
									"scope": 358,
									"src": "11229:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "11295:164:0",
										"text": "@notice Updates the percentage for the fee.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _percentFee The new percentage for the fee"
									},
									"functionSelector": "f54fc4a0",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePercentFee",
									"nameLocation": "11473:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "_percentFee",
												"nameLocation": "11498:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "11490:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11489:21:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11519:0:0"
									},
									"scope": 358,
									"src": "11464:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "11526:133:0",
										"text": "@notice Updates the base fee.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _baseFee The new base fee"
									},
									"functionSelector": "8e690186",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateBaseFee",
									"nameLocation": "11673:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "_baseFee",
												"nameLocation": "11695:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "11687:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11686:18:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11713:0:0"
									},
									"scope": 358,
									"src": "11664:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "11720:175:0",
										"text": "@notice Adds a strategy to the cloneable strategies.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _strategy The address of the strategy to add"
									},
									"functionSelector": "41bba0b4",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToCloneableStrategies",
									"nameLocation": "11909:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "11942:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "11934:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11933:19:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11961:0:0"
									},
									"scope": 358,
									"src": "11900:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "11968:183:0",
										"text": "@notice Removes a strategy from the cloneable strategies.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _strategy The address of the strategy to remove"
									},
									"functionSelector": "031e2fa1",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromCloneableStrategies",
									"nameLocation": "12165:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "12203:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "12195:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12194:19:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12222:0:0"
									},
									"scope": 358,
									"src": "12156:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "12229:214:0",
										"text": "@notice Adds a pool manager to the pool.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to add the manager to\n @param _manager The address of the manager to add"
									},
									"functionSelector": "2cf682b0",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addPoolManager",
									"nameLocation": "12457:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "12480:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "12472:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_manager",
												"nameLocation": "12497:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "12489:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12471:35:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12515:0:0"
									},
									"scope": 358,
									"src": "12448:68:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "12522:227:0",
										"text": "@notice Removes a pool manager from the pool.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to remove the manager from\n @param _manager The address of the manager to remove"
									},
									"functionSelector": "7f5a70bd",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removePoolManager",
									"nameLocation": "12763:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "12789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "12781:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "_manager",
												"nameLocation": "12806:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "12798:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:35:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12824:0:0"
									},
									"scope": 358,
									"src": "12754:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "12831:199:0",
										"text": "@notice Recovers funds from a pool.\n @dev 'msg.sender' must be a pool admin.\n @param _token The token to recover\n @param _recipient The address to send the recovered funds to"
									},
									"functionSelector": "24ae6a27",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recoverFunds",
									"nameLocation": "13044:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "13065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "13057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "13081:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "13073:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13056:36:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13101:0:0"
									},
									"scope": 358,
									"src": "13035:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "13108:197:0",
										"text": "@notice Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\n @param _poolId The ID of the pool to register the recipient for"
									},
									"functionSelector": "075c0e9c",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerRecipient",
									"nameLocation": "13319:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "13345:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "13337:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "13367:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "13354:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13336:37:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "13400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13399:9:0"
									},
									"scope": 358,
									"src": "13310:99:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "13415:215:0",
										"text": "@notice Registers a batch of recipients.\n @param _poolIds The pool ID's to register the recipients for\n @param _data The data to pass to the strategy and may be handled differently by each strategy"
									},
									"functionSelector": "1a20bd88",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchRegisterRecipient",
									"nameLocation": "13644:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "_poolIds",
												"nameLocation": "13684:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "13667:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 233,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 234,
													"nodeType": "ArrayTypeName",
													"src": "13667:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "13709:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "13694:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 236,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "13694:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 237,
													"nodeType": "ArrayTypeName",
													"src": "13694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13666:49:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "13750:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 240,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13750:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 241,
													"nodeType": "ArrayTypeName",
													"src": "13750:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13749:18:0"
									},
									"scope": 358,
									"src": "13635:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "13774:300:0",
										"text": "@notice Funds a pool.\n @dev 'msg.value' must be greater than 0 if the token is the native token\n       or '_amount' must be greater than 0 if the token is not the native token.\n @param _poolId The ID of the pool to fund\n @param _amount The amount to fund the pool with"
									},
									"functionSelector": "5acd6fac",
									"id": 252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fundPool",
									"nameLocation": "14088:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "14105:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "14097:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "14122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "14114:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14096:34:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14147:0:0"
									},
									"scope": 358,
									"src": "14079:69:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "14154:287:0",
										"text": "@notice Allocates funds to a recipient.\n @dev Each strategy will handle the allocation of funds differently.\n @param _poolId The ID of the pool to allocate funds from\n @param _data The data to pass to the strategy and may be handled differently by each strategy."
									},
									"functionSelector": "2ec38188",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allocate",
									"nameLocation": "14455:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "14472:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "14464:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "14494:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "14481:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14481:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14463:37:0"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14517:0:0"
									},
									"scope": 358,
									"src": "14446:72:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "14524:126:0",
										"text": "@notice Allocates funds to multiple recipients.\n @dev Each strategy will handle the allocation of funds differently"
									},
									"functionSelector": "c6dff1cf",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchAllocate",
									"nameLocation": "14664:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "_poolIds",
												"nameLocation": "14697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "14678:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 262,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14678:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 263,
													"nodeType": "ArrayTypeName",
													"src": "14678:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "_datas",
												"nameLocation": "14722:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "14707:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "14707:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "14707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14677:52:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14738:0:0"
									},
									"scope": 358,
									"src": "14655:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "14745:391:0",
										"text": "@notice Distributes funds to recipients and emits {Distributed} event if successful\n @dev Each strategy will handle the distribution of funds differently\n @param _poolId The ID of the pool to distribute from\n @param _recipientIds The recipient ids to distribute to\n @param _data The data to pass to the strategy and may be handled differently by each strategy"
									},
									"functionSelector": "3a5fbd92",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nameLocation": "15150:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "15169:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "15161:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "15195:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "15178:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 274,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15178:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 275,
													"nodeType": "ArrayTypeName",
													"src": "15178:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15223:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "15210:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15210:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15160:69:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15238:0:0"
									},
									"scope": 358,
									"src": "15141:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "15348:221:0",
										"text": "@notice Checks if an address is a pool admin.\n @param _poolId The ID of the pool to check\n @param _address The address to check\n @return 'true' if the '_address' is a pool admin, otherwise 'false'"
									},
									"functionSelector": "ab3febc6",
									"id": 291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolAdmin",
									"nameLocation": "15583:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "15603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "15595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "15620:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "15612:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15594:35:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "15653:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15652:6:0"
									},
									"scope": 358,
									"src": "15574:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "15665:225:0",
										"text": "@notice Checks if an address is a pool manager.\n @param _poolId The ID of the pool to check\n @param _address The address to check\n @return 'true' if the '_address' is a pool manager, otherwise 'false'"
									},
									"functionSelector": "29e40d4b",
									"id": 301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolManager",
									"nameLocation": "15904:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "15926:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "15918:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "15943:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "15935:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15917:35:0"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "15976:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15975:6:0"
									},
									"scope": 358,
									"src": "15895:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "15988:222:0",
										"text": "@notice Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\n @param _strategy The address of the strategy to check\n @return 'true' if the '_strategy' is cloneable, otherwise 'false'"
									},
									"functionSelector": "ab2ec589",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCloneableStrategy",
									"nameLocation": "16224:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "16252:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "16244:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16243:19:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "16286:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16286:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16285:6:0"
									},
									"scope": 358,
									"src": "16215:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "16298:205:0",
										"text": "@notice Returns the address of the strategy for a given 'poolId'\n @param _poolId The ID of the pool to check\n @return strategy The address of the strategy for the ID of the pool passed in"
									},
									"functionSelector": "cfc0cc34",
									"id": 317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategy",
									"nameLocation": "16517:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "16537:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16528:17:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "16569:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16568:9:0"
									},
									"scope": 358,
									"src": "16508:70:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "16584:105:0",
										"text": "@notice Returns the current percent fee\n @return percentFee The current percentage for the fee"
									},
									"functionSelector": "4edbaadc",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPercentFee",
									"nameLocation": "16703:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16716:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "16742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16741:9:0"
									},
									"scope": 358,
									"src": "16694:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "16757:85:0",
										"text": "@notice Returns the current base fee\n @return baseFee The current base fee"
									},
									"functionSelector": "15e812ad",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBaseFee",
									"nameLocation": "16856:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16866:2:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "16892:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16891:9:0"
									},
									"scope": 358,
									"src": "16847:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "16907:102:0",
										"text": "@notice Returns the current treasury address\n @return treasury The current treasury address"
									},
									"functionSelector": "3b19e84a",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTreasury",
									"nameLocation": "17023:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17034:2:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "17060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17060:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17059:17:0"
									},
									"scope": 358,
									"src": "17014:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "17083:102:0",
										"text": "@notice Returns the current registry address\n @return registry The current registry address"
									},
									"functionSelector": "5ab1bd53",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRegistry",
									"nameLocation": "17199:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17210:2:0"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "17236:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IRegistry_$550",
													"typeString": "contract IRegistry"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IRegistry",
														"nameLocations": [
															"17236:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 550,
														"src": "17236:9:0"
													},
													"referencedDeclaration": 550,
													"src": "17236:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRegistry_$550",
														"typeString": "contract IRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17235:11:0"
									},
									"scope": 358,
									"src": "17190:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "17253:181:0",
										"text": "@notice Returns the 'Pool' struct for a given 'poolId'\n @param _poolId The ID of the pool to check\n @return pool The 'Pool' struct for the ID of the pool passed in"
									},
									"functionSelector": "068bcd8d",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "17448:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "17464:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "17456:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17455:17:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "17496:11:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Pool_$23_memory_ptr",
													"typeString": "struct IAllo.Pool"
												},
												"typeName": {
													"id": 348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 347,
														"name": "Pool",
														"nameLocations": [
															"17496:4:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "17496:4:0"
													},
													"referencedDeclaration": 23,
													"src": "17496:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$23_storage_ptr",
														"typeString": "struct IAllo.Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17495:13:0"
									},
									"scope": 358,
									"src": "17439:70:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "17515:140:0",
										"text": "@notice Returns the current fee denominator\n @dev 1e18 represents 100%\n @return feeDenominator The current fee denominator"
									},
									"functionSelector": "f4e1fc41",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeDenominator",
									"nameLocation": "17669:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17686:2:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "17712:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17711:9:0"
									},
									"scope": 358,
									"src": "17660:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 359,
							"src": "4531:13192:0",
							"usedErrors": []
						}
					],
					"src": "42:17682:0"
				},
				"id": 0
			},
			"lib/allo-v2/contracts/core/interfaces/IRegistry.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
					"exportedSymbols": {
						"IRegistry": [
							550
						],
						"Metadata": [
							819
						]
					},
					"id": 551,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 360,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Metadata.sol",
							"file": "../libraries/Metadata.sol",
							"id": 362,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 551,
							"sourceUnit": 820,
							"src": "80:51:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 361,
										"name": "Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "88:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 363,
								"nodeType": "StructuredDocumentation",
								"src": "4124:931:1",
								"text": "@title IRegistry Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice Interface for the Registry contract and exposes all functions needed to use the Registry\n         within the Allo protocol.\n @dev The Registry Interface is used to interact with the Allo protocol and create profiles\n      that can be used to interact with the Allo protocol. The Registry is the main contract\n      that all other contracts interact with to get the 'Profile' information needed to\n      interact with the Allo protocol. The Registry is also used to create new profiles\n      and update existing profiles. The Registry is also used to add and remove members\n      from a profile. The Registry will not always be used in a strategy and will depend on\n      the strategy being used."
							},
							"fullyImplemented": false,
							"id": 550,
							"linearizedBaseContracts": [
								550
							],
							"name": "IRegistry",
							"nameLocation": "5065:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IRegistry.Profile",
									"id": 377,
									"members": [
										{
											"constant": false,
											"id": 365,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "5273:2:1",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "5265:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 364,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "5265:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 367,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "5293:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "5285:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 366,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5285:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "5315:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "5308:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 368,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "5308:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "5338:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "5329:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
												"typeString": "struct Metadata"
											},
											"typeName": {
												"id": 371,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 370,
													"name": "Metadata",
													"nameLocations": [
														"5329:8:1"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 819,
													"src": "5329:8:1"
												},
												"referencedDeclaration": 819,
												"src": "5329:8:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
													"typeString": "struct Metadata"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 374,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "5364:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "5356:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 373,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5356:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 376,
											"mutability": "mutable",
											"name": "anchor",
											"nameLocation": "5387:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 377,
											"src": "5379:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 375,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5379:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Profile",
									"nameLocation": "5247:7:1",
									"nodeType": "StructDefinition",
									"scope": 550,
									"src": "5240:160:1",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "5500:81:1",
										"text": "@dev Emitted when a profile is created. This will return your anchor address."
									},
									"eventSelector": "1e28352ff00d67474b59b87e6817d6ba65daa0130446266db8640214d8b80609",
									"id": 393,
									"name": "ProfileCreated",
									"nameLocation": "5592:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "5632:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "5616:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 379,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "5651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "5643:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5665:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "5658:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 383,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "5680:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "5671:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 386,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 385,
														"name": "Metadata",
														"nameLocations": [
															"5671:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "5671:8:1"
													},
													"referencedDeclaration": 819,
													"src": "5671:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5698:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "5690:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"indexed": false,
												"mutability": "mutable",
												"name": "anchor",
												"nameLocation": "5713:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "5705:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5705:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5606:119:1"
									},
									"src": "5586:140:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "5732:116:1",
										"text": "@dev Emitted when a profile name is updated. This will update the anchor when the name is updated and return it."
									},
									"eventSelector": "54cd733148631b9ff1cb945f2d0dcd33c0692e154763bfa2f35e2d10a76c432f",
									"id": 402,
									"name": "ProfileNameUpdated",
									"nameLocation": "5859:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "5894:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5878:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5912:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5905:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5905:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": false,
												"mutability": "mutable",
												"name": "anchor",
												"nameLocation": "5926:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "5918:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5918:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5877:56:1"
									},
									"src": "5853:81:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "5940:54:1",
										"text": "@dev Emitted when a profile's metadata is updated."
									},
									"eventSelector": "a366054a574e4f861cb295fd23b5440c5119c1ba329c36f5dfeb5643537cb0f3",
									"id": 410,
									"name": "ProfileMetadataUpdated",
									"nameLocation": "6005:22:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "6044:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6028:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 404,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "6064:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "6055:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 406,
														"name": "Metadata",
														"nameLocations": [
															"6055:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "6055:8:1"
													},
													"referencedDeclaration": 819,
													"src": "6055:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:46:1"
									},
									"src": "5999:75:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "6080:49:1",
										"text": "@dev Emitted when a profile owner is updated."
									},
									"eventSelector": "fd9ad63830df7bdf1586c8293dc88a30864cb43e9037e7afdb2c7210facf217d",
									"id": 417,
									"name": "ProfileOwnerUpdated",
									"nameLocation": "6140:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "6176:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "6160:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 412,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6195:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "6187:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:42:1"
									},
									"src": "6134:68:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "6208:57:1",
										"text": "@dev Emitted when a profile pending owner is updated."
									},
									"eventSelector": "21fe5cd61055ef88f636a264885b927f3ec2b380b6053a6b4a7495a6336a95c8",
									"id": 424,
									"name": "ProfilePendingOwnerUpdated",
									"nameLocation": "6276:26:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "6319:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "6303:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 419,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"indexed": false,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "6338:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "6330:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6302:49:1"
									},
									"src": "6270:82:1"
								},
								{
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "6461:192:1",
										"text": "@dev Returns the 'Profile' for a '_profileId' passed\n @param _profileId The 'profileId' to return the 'Profile' for\n @return profile The 'Profile' for the '_profileId' passed"
									},
									"functionSelector": "0114cf0a",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfileById",
									"nameLocation": "6667:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "6690:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "6682:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6681:20:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "profile",
												"nameLocation": "6740:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "6725:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Profile_$377_memory_ptr",
													"typeString": "struct IRegistry.Profile"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "Profile",
														"nameLocations": [
															"6725:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 377,
														"src": "6725:7:1"
													},
													"referencedDeclaration": 377,
													"src": "6725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Profile_$377_storage_ptr",
														"typeString": "struct IRegistry.Profile"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6724:24:1"
									},
									"scope": 550,
									"src": "6658:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "6755:181:1",
										"text": "@dev Returns the 'Profile' for an '_anchor' passed\n @param _anchor The 'anchor' to return the 'Profile' for\n @return profile The 'Profile' for the '_anchor' passed"
									},
									"functionSelector": "dd93da43",
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfileByAnchor",
									"nameLocation": "6950:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "_anchor",
												"nameLocation": "6977:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "6969:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:17:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "profile",
												"nameLocation": "7024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "7009:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Profile_$377_memory_ptr",
													"typeString": "struct IRegistry.Profile"
												},
												"typeName": {
													"id": 439,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 438,
														"name": "Profile",
														"nameLocations": [
															"7009:7:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 377,
														"src": "7009:7:1"
													},
													"referencedDeclaration": 377,
													"src": "7009:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Profile_$377_storage_ptr",
														"typeString": "struct IRegistry.Profile"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7008:24:1"
									},
									"scope": 550,
									"src": "6941:92:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "7039:415:1",
										"text": "@dev Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in\n @param _profileId The 'profileId' to check if the '_account' is a member or owner of\n @param _account The 'account' to check if they are a member or owner of the '_profileId' passed in\n @return isOwnerOrMemberOfProfile A boolean if the '_account' is a member or owner of the '_profileId' passed in"
									},
									"functionSelector": "5e8a7915",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOwnerOrMemberOfProfile",
									"nameLocation": "7468:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "7501:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7493:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 444,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "7521:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7513:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7513:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7492:38:1"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "isOwnerOrMemberOfProfile",
												"nameLocation": "7583:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "7578:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7578:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7577:31:1"
									},
									"scope": 550,
									"src": "7459:150:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "7615:367:1",
										"text": "@dev Returns a boolean if the '_account' is an owner of the '_profileId' passed in\n @param _profileId The 'profileId' to check if the '_account' is an owner of\n @param _owner The 'owner' to check if they are an owner of the '_profileId' passed in\n @return isOwnerOfProfile A boolean if the '_account' is an owner of the '_profileId' passed in"
									},
									"functionSelector": "39b86b8c",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOwnerOfProfile",
									"nameLocation": "7996:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "8021:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "8013:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 454,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "8041:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "8033:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8012:36:1"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "isOwnerOfProfile",
												"nameLocation": "8077:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "8072:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8072:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8071:23:1"
									},
									"scope": 550,
									"src": "7987:108:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "8101:370:1",
										"text": "@dev Returns a boolean if the '_account' is a member of the '_profileId' passed in\n @param _profileId The 'profileId' to check if the '_account' is a member of\n @param _member The 'member' to check if they are a member of the '_profileId' passed in\n @return isMemberOfProfile A boolean if the '_account' is a member of the '_profileId' passed in"
									},
									"functionSelector": "0ec1fbac",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isMemberOfProfile",
									"nameLocation": "8485:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "8511:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "8503:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "_member",
												"nameLocation": "8531:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "8523:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8523:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8502:37:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "isMemberOfProfile",
												"nameLocation": "8568:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "8563:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8563:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8562:24:1"
									},
									"scope": 550,
									"src": "8476:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "8729:677:1",
										"text": "@dev Creates a new 'Profile' and returns the 'profileId' of the new profile\n Note: The 'name' and 'nonce' are used to generate the 'anchor' address\n Requirements: None, anyone can create a new profile\n @param _nonce The nonce to use to generate the 'anchor' address\n @param _name The name to use to generate the 'anchor' address\n @param _metadata The 'Metadata' to use to generate the 'anchor' address\n @param _owner The 'owner' to use to generate the 'anchor' address\n @param _members The 'members' to use to generate the 'anchor' address\n @return profileId The 'profileId' of the new profile"
									},
									"functionSelector": "3a92f65f",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createProfile",
									"nameLocation": "9420:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "9451:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "9443:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "9481:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "9467:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "9512:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "9496:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 479,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 478,
														"name": "Metadata",
														"nameLocations": [
															"9496:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "9496:8:1"
													},
													"referencedDeclaration": 819,
													"src": "9496:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "9539:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "9531:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9531:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_members",
												"nameLocation": "9572:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "9555:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 483,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9555:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 484,
													"nodeType": "ArrayTypeName",
													"src": "9555:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9433:153:1"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "9613:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "9605:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9605:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9604:19:1"
									},
									"scope": 550,
									"src": "9411:213:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "9630:625:1",
										"text": "@dev Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address\n Requirements: Only the 'Profile' owner can update the name\n Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'\n       so please use caution. You can always recreate your 'anchor' address by updating the name back\n       to the original name used to create the profile.\n @param _profileId The 'profileId' to update the name for\n @param _name The new 'name' value\n @return anchor The new 'anchor' address"
									},
									"functionSelector": "cf189ff2",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfileName",
									"nameLocation": "10269:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "10295:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "10287:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 492,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "10321:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "10307:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10307:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10286:41:1"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "anchor",
												"nameLocation": "10354:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "10346:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10346:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10345:16:1"
									},
									"scope": 550,
									"src": "10260:102:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "10368:267:1",
										"text": "@dev Updates the 'Metadata' of the '_profileId' passed in\n Requirements: Only the 'Profile' owner can update the metadata\n @param _profileId The 'profileId' to update the metadata for\n @param _metadata The new 'Metadata' value"
									},
									"functionSelector": "ac402839",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfileMetadata",
									"nameLocation": "10649:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "10679:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "10671:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10671:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "10707:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "10691:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$819_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 505,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 504,
														"name": "Metadata",
														"nameLocations": [
															"10691:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "10691:8:1"
													},
													"referencedDeclaration": 819,
													"src": "10691:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$819_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10670:47:1"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10726:0:1"
									},
									"scope": 550,
									"src": "10640:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "10733:291:1",
										"text": "@dev Updates the pending 'owner' of the '_profileId' passed in\n Requirements: Only the 'Profile' owner can update the pending owner\n @param _profileId The 'profileId' to update the pending owner for\n @param _pendingOwner The new pending 'owner' value"
									},
									"functionSelector": "3b66dacd",
									"id": 517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfilePendingOwner",
									"nameLocation": "11038:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "11072:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11064:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 511,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11064:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "_pendingOwner",
												"nameLocation": "11092:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11084:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11084:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11063:43:1"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11115:0:1"
									},
									"scope": 550,
									"src": "11029:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "11122:222:1",
										"text": "@dev Accepts the pending 'owner' of the '_profileId' passed in\n Requirements: Only the pending owner can accept the ownership\n @param _profileId The 'profileId' to accept the ownership for"
									},
									"functionSelector": "2497f3c6",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptProfileOwnership",
									"nameLocation": "11358:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "11389:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "11381:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 519,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11381:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11380:20:1"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11409:0:1"
									},
									"scope": 550,
									"src": "11349:61:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "11416:263:1",
										"text": "@dev Adds members to the '_profileId' passed in\n Requirements: Only the 'Profile' owner can add members\n @param _profileId The 'profileId' to add members to\n @param _members The members to add to the '_profileId' passed in"
									},
									"functionSelector": "5063f361",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addMembers",
									"nameLocation": "11693:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "11712:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "11704:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 525,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "_members",
												"nameLocation": "11741:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "11724:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 527,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11724:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 528,
													"nodeType": "ArrayTypeName",
													"src": "11724:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11703:47:1"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11759:0:1"
									},
									"scope": 550,
									"src": "11684:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "11766:281:1",
										"text": "@dev Removes members from the '_profileId' passed in\n Requirements: Only the 'Profile' owner can remove members\n @param _profileId The 'profileId' to remove members from\n @param _members The members to remove from the '_profileId' passed in"
									},
									"functionSelector": "e0cf1e4c",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeMembers",
									"nameLocation": "12061:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "12083:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "12075:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "_members",
												"nameLocation": "12112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "12095:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 536,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12095:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 537,
													"nodeType": "ArrayTypeName",
													"src": "12095:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12074:47:1"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12130:0:1"
									},
									"scope": 550,
									"src": "12052:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "12137:230:1",
										"text": "@dev Recovers funds from the contract\n Requirements: Must be the Allo owner\n @param _token The token you want to use to recover funds\n @param _recipient The recipient of the recovered funds"
									},
									"functionSelector": "24ae6a27",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recoverFunds",
									"nameLocation": "12381:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "12402:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "12394:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12394:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "12418:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "12410:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12393:36:1"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12438:0:1"
									},
									"scope": 550,
									"src": "12372:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 551,
							"src": "5055:7386:1",
							"usedErrors": []
						}
					],
					"src": "32:12410:1"
				},
				"id": 1
			},
			"lib/allo-v2/contracts/core/interfaces/IStrategy.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
					"exportedSymbols": {
						"IAllo": [
							358
						],
						"IStrategy": [
							717
						]
					},
					"id": 718,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 552,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:2"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IAllo.sol",
							"file": "./IAllo.sol",
							"id": 554,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 718,
							"sourceUnit": 359,
							"src": "82:34:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 553,
										"name": "IAllo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 358,
										"src": "90:5:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 555,
								"nodeType": "StructuredDocumentation",
								"src": "4109:368:2",
								"text": "@title IStrategy Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice BaseStrategy is the base contract that all strategies should inherit from and uses this interface."
							},
							"fullyImplemented": false,
							"id": 717,
							"linearizedBaseContracts": [
								717
							],
							"name": "IStrategy",
							"nameLocation": "4488:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IStrategy.Status",
									"id": 563,
									"members": [
										{
											"id": 556,
											"name": "None",
											"nameLocation": "4687:4:2",
											"nodeType": "EnumValue",
											"src": "4687:4:2"
										},
										{
											"id": 557,
											"name": "Pending",
											"nameLocation": "4701:7:2",
											"nodeType": "EnumValue",
											"src": "4701:7:2"
										},
										{
											"id": 558,
											"name": "Accepted",
											"nameLocation": "4718:8:2",
											"nodeType": "EnumValue",
											"src": "4718:8:2"
										},
										{
											"id": 559,
											"name": "Rejected",
											"nameLocation": "4736:8:2",
											"nodeType": "EnumValue",
											"src": "4736:8:2"
										},
										{
											"id": 560,
											"name": "Appealed",
											"nameLocation": "4754:8:2",
											"nodeType": "EnumValue",
											"src": "4754:8:2"
										},
										{
											"id": 561,
											"name": "InReview",
											"nameLocation": "4772:8:2",
											"nodeType": "EnumValue",
											"src": "4772:8:2"
										},
										{
											"id": 562,
											"name": "Canceled",
											"nameLocation": "4790:8:2",
											"nodeType": "EnumValue",
											"src": "4790:8:2"
										}
									],
									"name": "Status",
									"nameLocation": "4670:6:2",
									"nodeType": "EnumDefinition",
									"src": "4665:139:2"
								},
								{
									"canonicalName": "IStrategy.PayoutSummary",
									"id": 568,
									"members": [
										{
											"constant": false,
											"id": 565,
											"mutability": "mutable",
											"name": "recipientAddress",
											"nameLocation": "4911:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 568,
											"src": "4903:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 564,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4903:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 567,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4945:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 568,
											"src": "4937:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 566,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4937:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PayoutSummary",
									"nameLocation": "4879:13:2",
									"nodeType": "StructDefinition",
									"scope": 717,
									"src": "4872:86:2",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "5058:155:2",
										"text": "@notice Emitted when strategy is initialized.\n @param poolId The ID of the pool\n @param data The data passed to the 'initialize' function"
									},
									"eventSelector": "91efa3d50feccde0d0d202f8ae5c41ca0b2be614cebcb2bd2f4b019396e6568a",
									"id": 575,
									"name": "Initialized",
									"nameLocation": "5224:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5244:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5236:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5258:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5252:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:28:2"
									},
									"src": "5218:46:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "5270:207:2",
										"text": "@notice Emitted when a recipient is registered.\n @param recipientId The ID of the recipient\n @param data The data passed to the 'registerRecipient' function\n @param sender The sender"
									},
									"eventSelector": "a197306e3dd5494a61a695381aa809a53b8e377a685e84e404a85d5a8da6cc62",
									"id": 584,
									"name": "Registered",
									"nameLocation": "5488:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "5515:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5499:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5499:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5534:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5528:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5548:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5540:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5540:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5498:57:2"
									},
									"src": "5482:74:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5562:188:2",
										"text": "@notice Emitted when a recipient is allocated to.\n @param recipientId The ID of the recipient\n @param amount The amount allocated\n @param token The token allocated"
									},
									"eventSelector": "463ffc2cf8b1596445c417388ed30e53eb67cf6668cb2be7f0addf8a78c8441b",
									"id": 595,
									"name": "Allocated",
									"nameLocation": "5761:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "5787:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5771:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5771:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5808:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5800:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5800:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5824:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5816:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5839:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5831:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5770:76:2"
									},
									"src": "5755:92:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "5853:223:2",
										"text": "@notice Emitted when tokens are distributed.\n @param recipientId The ID of the recipient\n @param recipientAddress The recipient\n @param amount The amount distributed\n @param sender The sender"
									},
									"eventSelector": "b5b51454adfa840bd593658325a60a50b0216f12eb5d2937efe6cea935675b7d",
									"id": 606,
									"name": "Distributed",
									"nameLocation": "6087:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "6115:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6099:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6099:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipientAddress",
												"nameLocation": "6136:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6128:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6128:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6162:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6154:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6154:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6178:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6170:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6098:87:2"
									},
									"src": "6081:105:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6192:99:2",
										"text": "@notice Emitted when pool is set to active status.\n @param active The status of the pool"
									},
									"eventSelector": "d94c9bc4d43c51d8dc345a016d8e3d994432fac68e72832e4cf3a616bd8efae0",
									"id": 611,
									"name": "PoolActive",
									"nameLocation": "6302:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"indexed": false,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "6318:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6313:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6313:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:13:2"
									},
									"src": "6296:30:2"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "6426:92:2",
										"text": "@notice Getter for the address of the Allo contract.\n @return The 'Allo' contract"
									},
									"functionSelector": "15cc481e",
									"id": 618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllo",
									"nameLocation": "6532:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6539:2:2"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "6565:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAllo_$358",
													"typeString": "contract IAllo"
												},
												"typeName": {
													"id": 615,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 614,
														"name": "IAllo",
														"nameLocations": [
															"6565:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 358,
														"src": "6565:5:2"
													},
													"referencedDeclaration": 358,
													"src": "6565:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$358",
														"typeString": "contract IAllo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6564:7:2"
									},
									"scope": 717,
									"src": "6523:49:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "6578:89:2",
										"text": "@notice Getter for the 'poolId' for this strategy.\n @return The ID of the pool"
									},
									"functionSelector": "38fff2d0",
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolId",
									"nameLocation": "6681:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6690:2:2"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "6716:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6715:9:2"
									},
									"scope": 717,
									"src": "6672:53:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "6731:87:2",
										"text": "@notice Getter for the 'id' of the strategy.\n @return The ID of the strategy"
									},
									"functionSelector": "42fda9c7",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategyId",
									"nameLocation": "6832:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6845:2:2"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6871:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 627,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6871:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6870:9:2"
									},
									"scope": 717,
									"src": "6823:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "6886:259:2",
										"text": "@notice Checks whether a allocator is valid or not, will usually be true for all strategies\n      and will depend on the strategy implementation.\n @param _allocator The allocator to check\n @return Whether the allocator is valid or not"
									},
									"functionSelector": "4d31d087",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidAllocator",
									"nameLocation": "7159:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "7184:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "7176:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7176:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7175:20:2"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "7219:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7219:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7218:6:2"
									},
									"scope": 717,
									"src": "7150:75:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "7231:85:2",
										"text": "@notice whether pool is active.\n @return Whether the pool is active or not"
									},
									"functionSelector": "df868ed3",
									"id": 644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolActive",
									"nameLocation": "7330:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7342:2:2"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "7363:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7363:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7362:6:2"
									},
									"scope": 717,
									"src": "7321:48:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "7375:92:2",
										"text": "@notice Checks the amount of tokens in the pool.\n @return The balance of the pool"
									},
									"functionSelector": "4ab4ba42",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAmount",
									"nameLocation": "7481:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7494:2:2"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "7520:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7520:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:9:2"
									},
									"scope": 717,
									"src": "7472:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "7535:104:2",
										"text": "@notice Increases the balance of the pool.\n @param _amount The amount to increase the pool by"
									},
									"functionSelector": "f5b0dfb7",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increasePoolAmount",
									"nameLocation": "7653:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7680:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "7672:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7672:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7671:17:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7697:0:2"
									},
									"scope": 717,
									"src": "7644:54:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "7704:382:2",
										"text": "@notice Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation\n      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those\n      since there is no need for Pending or Rejected.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"functionSelector": "eb11af93",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRecipientStatus",
									"nameLocation": "8100:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "8127:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "8119:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8118:22:2"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "8164:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$563",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 662,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 661,
														"name": "Status",
														"nameLocations": [
															"8164:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 563,
														"src": "8164:6:2"
													},
													"referencedDeclaration": 563,
													"src": "8164:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$563",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8163:8:2"
									},
									"scope": 717,
									"src": "8091:81:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "8178:397:2",
										"text": "@notice Checks the amount allocated to a recipient for distribution.\n @dev Input the values you would send to distribute(), get the amounts each recipient in the array would receive.\n      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.\n @param _recipientIds The IDs of the recipients\n @param _data The encoded data"
									},
									"functionSelector": "b2b878d0",
									"id": 679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPayouts",
									"nameLocation": "8589:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "8617:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "8600:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 667,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8600:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 668,
													"nodeType": "ArrayTypeName",
													"src": "8600:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8647:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "8632:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 670,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "8632:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 671,
													"nodeType": "ArrayTypeName",
													"src": "8632:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8599:54:2"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "8701:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary[]"
												},
												"typeName": {
													"baseType": {
														"id": 675,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 674,
															"name": "PayoutSummary",
															"nameLocations": [
																"8701:13:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 568,
															"src": "8701:13:2"
														},
														"referencedDeclaration": 568,
														"src": "8701:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutSummary_$568_storage_ptr",
															"typeString": "struct IStrategy.PayoutSummary"
														}
													},
													"id": 676,
													"nodeType": "ArrayTypeName",
													"src": "8701:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_storage_$dyn_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8700:24:2"
									},
									"scope": 717,
									"src": "8580:145:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "8825:270:2",
										"text": "@notice\n @dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,\n      use it, and then call super.initialize().\n @param _poolId The ID of the pool\n @param _data The encoded data"
									},
									"functionSelector": "edd146cc",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "9109:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "9128:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "9120:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9150:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "9137:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9137:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9119:37:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9165:0:2"
									},
									"scope": 717,
									"src": "9100:66:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "9172:655:2",
										"text": "@notice This will register a recipient, set their status (and any other strategy specific values), and\n         return the ID of the recipient.\n @dev Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional\n      functions should be added to allow the owner to check this. The owner could also check attestations directly\n      and then accept for instance. The '_data' will be determined by the strategy implementation.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return The ID of the recipient"
									},
									"functionSelector": "2bbe0cae",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerRecipient",
									"nameLocation": "9841:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9872:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9859:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9859:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "9887:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9879:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9858:37:2"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "9922:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9922:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9921:9:2"
									},
									"scope": 717,
									"src": "9832:99:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "9937:245:2",
										"text": "@notice This will allocate to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"functionSelector": "ef2920fc",
									"id": 705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allocate",
									"nameLocation": "10196:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10218:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "10205:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 699,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10205:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10233:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "10225:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10204:37:2"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10258:0:2"
									},
									"scope": 717,
									"src": "10187:72:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "10265:271:2",
										"text": "@notice This will distribute funds (tokens) to recipients.\n @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n this contract will need to track the amount paid already, so that it doesn't double pay."
									},
									"functionSelector": "0a6f0ee9",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nameLocation": "10550:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "10578:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "10561:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 707,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10561:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 708,
													"nodeType": "ArrayTypeName",
													"src": "10561:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10606:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "10593:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 710,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10593:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10621:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "10613:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10613:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10560:69:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10638:0:2"
									},
									"scope": 717,
									"src": "10541:98:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 718,
							"src": "4478:6163:2",
							"usedErrors": []
						}
					],
					"src": "42:10600:2"
				},
				"id": 2
			},
			"lib/allo-v2/contracts/core/libraries/Errors.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/libraries/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							810
						]
					},
					"id": 811,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 719,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 720,
								"nodeType": "StructuredDocumentation",
								"src": "4058:211:3",
								"text": "@title Errors\n @author @thelostone-mc <aditya@gitcoin.co>, @KurtMerbeth <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>\n @notice Library containing all custom errors the protocol may revert with."
							},
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810
							],
							"name": "Errors",
							"nameLocation": "4278:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "4385:66:3",
										"text": "@notice Thrown as a general error when input / data is invalid"
									},
									"errorSelector": "7fcce2a9",
									"id": 723,
									"name": "INVALID",
									"nameLocation": "4462:7:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4469:2:3"
									},
									"src": "4456:16:3"
								},
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4478:49:3",
										"text": "@notice Thrown when mismatch in decoding data"
									},
									"errorSelector": "636e39bb",
									"id": 726,
									"name": "MISMATCH",
									"nameLocation": "4538:8:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4546:2:3"
									},
									"src": "4532:17:3"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "4555:54:3",
										"text": "@notice Thrown when not enough funds are available"
									},
									"errorSelector": "1f04ddc8",
									"id": 729,
									"name": "NOT_ENOUGH_FUNDS",
									"nameLocation": "4620:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4636:2:3"
									},
									"src": "4614:25:3"
								},
								{
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "4645:46:3",
										"text": "@notice Thrown when user is not authorized"
									},
									"errorSelector": "075fd2b1",
									"id": 732,
									"name": "UNAUTHORIZED",
									"nameLocation": "4702:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4714:2:3"
									},
									"src": "4696:21:3"
								},
								{
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "4723:51:3",
										"text": "@notice Thrown when address is the zero address"
									},
									"errorSelector": "538ba4f9",
									"id": 735,
									"name": "ZERO_ADDRESS",
									"nameLocation": "4785:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4797:2:3"
									},
									"src": "4779:21:3"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "4806:55:3",
										"text": "@notice Thrown when the function is not implemented"
									},
									"errorSelector": "43f6e4ab",
									"id": 738,
									"name": "NOT_IMPLEMENTED",
									"nameLocation": "4872:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4887:2:3"
									},
									"src": "4866:24:3"
								},
								{
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "4896:45:3",
										"text": "@notice Thrown when the value is non-zero"
									},
									"errorSelector": "22d8ddab",
									"id": 741,
									"name": "NON_ZERO_VALUE",
									"nameLocation": "4952:14:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4966:2:3"
									},
									"src": "4946:23:3"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "5069:68:3",
										"text": "@dev Thrown when the nonce passed has been used or not available"
									},
									"errorSelector": "527e0590",
									"id": 744,
									"name": "NONCE_NOT_AVAILABLE",
									"nameLocation": "5148:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5167:2:3"
									},
									"src": "5142:28:3"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "5176:84:3",
										"text": "@dev Thrown when the 'msg.sender' is not the pending owner on ownership transfer"
									},
									"errorSelector": "b4d48c10",
									"id": 747,
									"name": "NOT_PENDING_OWNER",
									"nameLocation": "5271:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5288:2:3"
									},
									"src": "5265:26:3"
								},
								{
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "5297:44:3",
										"text": "@dev Thrown if the anchor creation fails"
									},
									"errorSelector": "113b81f0",
									"id": 750,
									"name": "ANCHOR_ERROR",
									"nameLocation": "5352:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5364:2:3"
									},
									"src": "5346:21:3"
								},
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "5467:52:3",
										"text": "@notice Thrown when the strategy is not approved"
									},
									"errorSelector": "93699238",
									"id": 753,
									"name": "NOT_APPROVED_STRATEGY",
									"nameLocation": "5530:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5551:2:3"
									},
									"src": "5524:30:3"
								},
								{
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "5560:69:3",
										"text": "@notice Thrown when the strategy is approved and should be cloned"
									},
									"errorSelector": "eeffa721",
									"id": 756,
									"name": "IS_APPROVED_STRATEGY",
									"nameLocation": "5640:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5660:2:3"
									},
									"src": "5634:29:3"
								},
								{
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "5669:85:3",
										"text": "@notice Thrown when the fee is below 1e18 which is the fee percentage denominator"
									},
									"errorSelector": "2fb15b87",
									"id": 759,
									"name": "INVALID_FEE",
									"nameLocation": "5765:11:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5776:2:3"
									},
									"src": "5759:20:3"
								},
								{
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "5879:50:3",
										"text": "@notice Thrown when data is already intialized"
									},
									"errorSelector": "439a74c9",
									"id": 762,
									"name": "ALREADY_INITIALIZED",
									"nameLocation": "5940:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5959:2:3"
									},
									"src": "5934:28:3"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "5968:53:3",
										"text": "@notice Thrown when data is yet to be initialized"
									},
									"errorSelector": "3da3f98c",
									"id": 765,
									"name": "NOT_INITIALIZED",
									"nameLocation": "6032:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6047:2:3"
									},
									"src": "6026:24:3"
								},
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "6056:50:3",
										"text": "@notice Thrown when an invalid address is used"
									},
									"errorSelector": "5963709b",
									"id": 768,
									"name": "INVALID_ADDRESS",
									"nameLocation": "6117:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6132:2:3"
									},
									"src": "6111:24:3"
								},
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "6141:42:3",
										"text": "@notice Thrown when a pool is inactive"
									},
									"errorSelector": "cfe7975b",
									"id": 771,
									"name": "POOL_INACTIVE",
									"nameLocation": "6194:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6207:2:3"
									},
									"src": "6188:22:3"
								},
								{
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "6216:48:3",
										"text": "@notice Thrown when a pool is already active"
									},
									"errorSelector": "b1862670",
									"id": 774,
									"name": "POOL_ACTIVE",
									"nameLocation": "6275:11:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6286:2:3"
									},
									"src": "6269:20:3"
								},
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "6295:55:3",
										"text": "@notice Thrown when two arrays length are not equal"
									},
									"errorSelector": "7b498056",
									"id": 777,
									"name": "ARRAY_MISMATCH",
									"nameLocation": "6361:14:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6375:2:3"
									},
									"src": "6355:23:3"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "6384:52:3",
										"text": "@notice Thrown when the registration is invalid."
									},
									"errorSelector": "03b167dd",
									"id": 780,
									"name": "INVALID_REGISTRATION",
									"nameLocation": "6447:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6467:2:3"
									},
									"src": "6441:29:3"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "6476:48:3",
										"text": "@notice Thrown when the metadata is invalid."
									},
									"errorSelector": "c19e07c5",
									"id": 783,
									"name": "INVALID_METADATA",
									"nameLocation": "6535:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6551:2:3"
									},
									"src": "6529:25:3"
								},
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "6560:54:3",
										"text": "@notice Thrown when the recipient is not accepted."
									},
									"errorSelector": "e4b05bec",
									"id": 786,
									"name": "RECIPIENT_NOT_ACCEPTED",
									"nameLocation": "6625:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6647:2:3"
									},
									"src": "6619:31:3"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "6656:54:3",
										"text": "@notice Thrown when recipient is already accepted."
									},
									"errorSelector": "41d40fb8",
									"id": 789,
									"name": "RECIPIENT_ALREADY_ACCEPTED",
									"nameLocation": "6721:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6747:2:3"
									},
									"src": "6715:35:3"
								},
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "6756:51:3",
										"text": "@notice Thrown when registration is not active."
									},
									"errorSelector": "b609ed5a",
									"id": 792,
									"name": "REGISTRATION_NOT_ACTIVE",
									"nameLocation": "6818:23:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6841:2:3"
									},
									"src": "6812:32:3"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "6850:47:3",
										"text": "@notice Thrown when registration is active."
									},
									"errorSelector": "b99c70a8",
									"id": 795,
									"name": "REGISTRATION_ACTIVE",
									"nameLocation": "6908:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6927:2:3"
									},
									"src": "6902:28:3"
								},
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "6936:55:3",
										"text": "@notice Thrown when there is an error in recipient."
									},
									"errorSelector": "f4a513b9",
									"id": 800,
									"name": "RECIPIENT_ERROR",
									"nameLocation": "7002:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "7026:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "7018:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:21:3"
									},
									"src": "6996:43:3"
								},
								{
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "7045:53:3",
										"text": "@notice Thrown when the allocation is not active."
									},
									"errorSelector": "b828c900",
									"id": 803,
									"name": "ALLOCATION_NOT_ACTIVE",
									"nameLocation": "7109:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7130:2:3"
									},
									"src": "7103:30:3"
								},
								{
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "7139:52:3",
										"text": "@notice Thrown when the allocation is not ended."
									},
									"errorSelector": "8a879da2",
									"id": 806,
									"name": "ALLOCATION_NOT_ENDED",
									"nameLocation": "7202:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7222:2:3"
									},
									"src": "7196:29:3"
								},
								{
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "7231:49:3",
										"text": "@notice Thrown when the allocation is active."
									},
									"errorSelector": "077c7060",
									"id": 809,
									"name": "ALLOCATION_ACTIVE",
									"nameLocation": "7291:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7308:2:3"
									},
									"src": "7285:26:3"
								}
							],
							"scope": 811,
							"src": "4269:3044:3",
							"usedErrors": [
								723,
								726,
								729,
								732,
								735,
								738,
								741,
								744,
								747,
								750,
								753,
								756,
								759,
								762,
								765,
								768,
								771,
								774,
								777,
								780,
								783,
								786,
								789,
								792,
								795,
								800,
								803,
								806,
								809
							]
						}
					],
					"src": "42:7272:3"
				},
				"id": 3
			},
			"lib/allo-v2/contracts/core/libraries/Metadata.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/libraries/Metadata.sol",
					"exportedSymbols": {
						"Metadata": [
							819
						]
					},
					"id": 820,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 812,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:4"
						},
						{
							"canonicalName": "Metadata",
							"id": 819,
							"members": [
								{
									"constant": false,
									"id": 815,
									"mutability": "mutable",
									"name": "protocol",
									"nameLocation": "4473:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 819,
									"src": "4465:16:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 814,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4465:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 818,
									"mutability": "mutable",
									"name": "pointer",
									"nameLocation": "4570:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 819,
									"src": "4563:14:4",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 817,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4563:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Metadata",
							"nameLocation": "4358:8:4",
							"nodeType": "StructDefinition",
							"scope": 820,
							"src": "4351:229:4",
							"visibility": "public"
						}
					],
					"src": "42:4539:4"
				},
				"id": 4
			},
			"lib/allo-v2/contracts/core/libraries/Native.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/libraries/Native.sol",
					"exportedSymbols": {
						"Native": [
							827
						]
					},
					"id": 828,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 821,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Native",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 822,
								"nodeType": "StructuredDocumentation",
								"src": "4058:288:5",
								"text": "@title Native token information\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice This is used to define the address of the native token for the protocol"
							},
							"fullyImplemented": true,
							"id": 827,
							"linearizedBaseContracts": [
								827
							],
							"name": "Native",
							"nameLocation": "4355:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "4368:39:5",
										"text": "@notice Address of the native token"
									},
									"functionSelector": "a0cf0aea",
									"id": 826,
									"mutability": "constant",
									"name": "NATIVE",
									"nameLocation": "4436:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 827,
									"src": "4412:75:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 824,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4412:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
										"id": 825,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4445:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
									},
									"visibility": "public"
								}
							],
							"scope": 828,
							"src": "4346:144:5",
							"usedErrors": []
						}
					],
					"src": "42:4449:5"
				},
				"id": 5
			},
			"lib/allo-v2/contracts/core/libraries/Transfer.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/core/libraries/Transfer.sol",
					"exportedSymbols": {
						"Native": [
							827
						],
						"SafeTransferLib": [
							1802
						],
						"Transfer": [
							1038
						]
					},
					"id": 1039,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 829,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:6"
						},
						{
							"absolutePath": "lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
							"file": "solady/utils/SafeTransferLib.sol",
							"id": 831,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1039,
							"sourceUnit": 1803,
							"src": "89:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 830,
										"name": "SafeTransferLib",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1802,
										"src": "97:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Native.sol",
							"file": "./Native.sol",
							"id": 832,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1039,
							"sourceUnit": 828,
							"src": "177:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 834,
										"name": "Native",
										"nameLocations": [
											"4534:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 827,
										"src": "4534:6:6"
									},
									"id": 835,
									"nodeType": "InheritanceSpecifier",
									"src": "4534:6:6"
								}
							],
							"canonicalName": "Transfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 833,
								"nodeType": "StructuredDocumentation",
								"src": "4192:321:6",
								"text": "@title Transfer contract\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice A helper contract to transfer tokens within Allo protocol\n @dev Handles the transfer of tokens to an address"
							},
							"fullyImplemented": true,
							"id": 1038,
							"linearizedBaseContracts": [
								1038,
								827
							],
							"name": "Transfer",
							"nameLocation": "4522:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "4547:94:6",
										"text": "@notice Thrown when the amount of tokens sent does not match the amount of tokens expected"
									},
									"errorSelector": "74c5672b",
									"id": 838,
									"name": "AMOUNT_MISMATCH",
									"nameLocation": "4652:15:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:2:6"
									},
									"src": "4646:24:6"
								},
								{
									"canonicalName": "Transfer.TransferData",
									"id": 845,
									"members": [
										{
											"constant": false,
											"id": 840,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "4768:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 845,
											"src": "4760:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 839,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4760:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 842,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "4790:2:6",
											"nodeType": "VariableDeclaration",
											"scope": 845,
											"src": "4782:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 841,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4782:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 844,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4810:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 845,
											"src": "4802:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 843,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4802:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferData",
									"nameLocation": "4737:12:6",
									"nodeType": "StructDefinition",
									"scope": 1038,
									"src": "4730:93:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "5193:633:6",
										"statements": [
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "msgValue",
														"nameLocation": "5211:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "5203:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5203:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"expression": {
														"id": 859,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5222:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5226:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "5222:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5203:28:6"
											},
											{
												"body": {
													"id": 912,
													"nodeType": "Block",
													"src": "5285:459:6",
													"statements": [
														{
															"assignments": [
																871
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 871,
																	"mutability": "mutable",
																	"name": "transferData",
																	"nameLocation": "5319:12:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 912,
																	"src": "5299:32:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																		"typeString": "struct Transfer.TransferData"
																	},
																	"typeName": {
																		"id": 870,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 869,
																			"name": "TransferData",
																			"nameLocations": [
																				"5299:12:6"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 845,
																			"src": "5299:12:6"
																		},
																		"referencedDeclaration": 845,
																		"src": "5299:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferData_$845_storage_ptr",
																			"typeString": "struct Transfer.TransferData"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 875,
															"initialValue": {
																"baseExpression": {
																	"id": 872,
																	"name": "_transferData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "5334:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TransferData_$845_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Transfer.TransferData memory[] memory"
																	}
																},
																"id": 874,
																"indexExpression": {
																	"id": 873,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "5348:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5334:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																	"typeString": "struct Transfer.TransferData memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5299:51:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 876,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "5369:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 877,
																	"name": "NATIVE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "5379:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5369:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 906,
																"nodeType": "Block",
																"src": "5544:130:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 897,
																					"name": "_token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 848,
																					"src": "5595:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 898,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 871,
																						"src": "5603:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 899,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5616:4:6",
																					"memberName": "from",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 840,
																					"src": "5603:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 900,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 871,
																						"src": "5622:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 901,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5635:2:6",
																					"memberName": "to",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 842,
																					"src": "5622:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 902,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 871,
																						"src": "5639:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 903,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5652:6:6",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 844,
																					"src": "5639:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 894,
																					"name": "SafeTransferLib",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1802,
																					"src": "5562:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1802_$",
																						"typeString": "type(library SafeTransferLib)"
																					}
																				},
																				"id": 896,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5578:16:6",
																				"memberName": "safeTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1727,
																				"src": "5562:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,address,uint256)"
																				}
																			},
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5562:97:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 905,
																		"nodeType": "ExpressionStatement",
																		"src": "5562:97:6"
																	}
																]
															},
															"id": 907,
															"nodeType": "IfStatement",
															"src": "5365:309:6",
															"trueBody": {
																"id": 893,
																"nodeType": "Block",
																"src": "5387:151:6",
																"statements": [
																	{
																		"expression": {
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 879,
																				"name": "msgValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "5405:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"expression": {
																					"id": 880,
																					"name": "transferData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 871,
																					"src": "5417:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																						"typeString": "struct Transfer.TransferData memory"
																					}
																				},
																				"id": 881,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5430:6:6",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 844,
																				"src": "5417:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5405:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 883,
																		"nodeType": "ExpressionStatement",
																		"src": "5405:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 887,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 871,
																						"src": "5486:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 888,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5499:2:6",
																					"memberName": "to",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 842,
																					"src": "5486:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 889,
																						"name": "transferData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 871,
																						"src": "5503:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																							"typeString": "struct Transfer.TransferData memory"
																						}
																					},
																					"id": 890,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5516:6:6",
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 844,
																					"src": "5503:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 884,
																					"name": "SafeTransferLib",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1802,
																					"src": "5454:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1802_$",
																						"typeString": "type(library SafeTransferLib)"
																					}
																				},
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5470:15:6",
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1677,
																				"src": "5454:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5454:69:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 892,
																		"nodeType": "ExpressionStatement",
																		"src": "5454:69:6"
																	}
																]
															}
														},
														{
															"id": 911,
															"nodeType": "UncheckedBlock",
															"src": "5688:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "5716:3:6",
																		"subExpression": {
																			"id": 908,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 863,
																			"src": "5716:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 910,
																	"nodeType": "ExpressionStatement",
																	"src": "5716:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 865,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "5258:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 866,
															"name": "_transferData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "5262:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TransferData_$845_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Transfer.TransferData memory[] memory"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5276:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5262:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5258:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"initializationExpression": {
													"assignments": [
														863
													],
													"declarations": [
														{
															"constant": false,
															"id": 863,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5255:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 913,
															"src": "5247:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 862,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5247:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 864,
													"nodeType": "VariableDeclarationStatement",
													"src": "5247:9:6"
												},
												"nodeType": "ForStatement",
												"src": "5242:502:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 914,
														"name": "msgValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "5758:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5758:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "5754:43:6",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 917,
															"name": "AMOUNT_MISMATCH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "5780:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5780:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 919,
													"nodeType": "RevertStatement",
													"src": "5773:24:6"
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5815:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 856,
												"id": 922,
												"nodeType": "Return",
												"src": "5808:11:6"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "4829:216:6",
										"text": "@notice Transfer an amount of a token to an array of addresses\n @param _token The address of the token\n @param _transferData TransferData[]\n @return Whether the transfer was successful or not"
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferAmountsFrom",
									"nameLocation": "5059:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "5088:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "5080:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5080:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "_transferData",
												"nameLocation": "5118:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "5096:35:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TransferData_$845_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Transfer.TransferData[]"
												},
												"typeName": {
													"baseType": {
														"id": 850,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 849,
															"name": "TransferData",
															"nameLocations": [
																"5096:12:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 845,
															"src": "5096:12:6"
														},
														"referencedDeclaration": 845,
														"src": "5096:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$845_storage_ptr",
															"typeString": "struct Transfer.TransferData"
														}
													},
													"id": 851,
													"nodeType": "ArrayTypeName",
													"src": "5096:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TransferData_$845_storage_$dyn_storage_ptr",
														"typeString": "struct Transfer.TransferData[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5079:53:6"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "5183:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 854,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5183:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5182:6:6"
									},
									"scope": 1038,
									"src": "5050:776:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "6163:396:6",
										"statements": [
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6181:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 975,
														"src": "6173:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 935,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6173:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"expression": {
														"id": 937,
														"name": "_transferData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "6190:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
															"typeString": "struct Transfer.TransferData memory"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6204:6:6",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 844,
													"src": "6190:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6173:37:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "6224:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 941,
														"name": "NATIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "6234:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6224:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "6421:111:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 963,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "6468:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 964,
																			"name": "_transferData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "6476:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																				"typeString": "struct Transfer.TransferData memory"
																			}
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6490:4:6",
																		"memberName": "from",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 840,
																		"src": "6476:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 966,
																			"name": "_transferData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "6496:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																				"typeString": "struct Transfer.TransferData memory"
																			}
																		},
																		"id": 967,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6510:2:6",
																		"memberName": "to",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 842,
																		"src": "6496:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 968,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "6514:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 960,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "6435:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1802_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6451:16:6",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1727,
																	"src": "6435:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6435:86:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "ExpressionStatement",
															"src": "6435:86:6"
														}
													]
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "6220:312:6",
												"trueBody": {
													"id": 959,
													"nodeType": "Block",
													"src": "6242:173:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 943,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6288:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6292:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "6288:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 945,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "6300:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6288:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 950,
															"nodeType": "IfStatement",
															"src": "6284:48:6",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 947,
																		"name": "AMOUNT_MISMATCH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "6315:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6315:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 949,
																"nodeType": "RevertStatement",
																"src": "6308:24:6"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 954,
																			"name": "_transferData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "6379:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
																				"typeString": "struct Transfer.TransferData memory"
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6393:2:6",
																		"memberName": "to",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 842,
																		"src": "6379:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 956,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 936,
																		"src": "6397:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 951,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "6347:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1802_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6363:15:6",
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1677,
																	"src": "6347:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6347:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 958,
															"nodeType": "ExpressionStatement",
															"src": "6347:57:6"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6548:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 934,
												"id": 974,
												"nodeType": "Return",
												"src": "6541:11:6"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "5832:214:6",
										"text": "@notice Transfer an amount of a token to an address\n @param _token The address of the token\n @param _transferData Individual TransferData\n @return Whether the transfer was successful or not"
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferAmountFrom",
									"nameLocation": "6060:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "6088:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "6080:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6080:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "_transferData",
												"nameLocation": "6116:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "6096:33:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferData_$845_memory_ptr",
													"typeString": "struct Transfer.TransferData"
												},
												"typeName": {
													"id": 929,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 928,
														"name": "TransferData",
														"nameLocations": [
															"6096:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 845,
														"src": "6096:12:6"
													},
													"referencedDeclaration": 845,
													"src": "6096:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferData_$845_storage_ptr",
														"typeString": "struct Transfer.TransferData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6079:51:6"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "6157:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6157:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6156:6:6"
									},
									"scope": 1038,
									"src": "6051:508:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "6849:189:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "6863:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 987,
														"name": "NATIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "6873:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6863:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "6957:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "7000:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1001,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "7008:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1002,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "7013:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 997,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "6971:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1802_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6987:12:6",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1753,
																	"src": "6971:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6971:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1004,
															"nodeType": "ExpressionStatement",
															"src": "6971:50:6"
														}
													]
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "6859:173:6",
												"trueBody": {
													"id": 996,
													"nodeType": "Block",
													"src": "6881:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 992,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "6927:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 993,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "6932:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 989,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "6895:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1802_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6911:15:6",
																	"memberName": "safeTransferETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1677,
																	"src": "6895:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6895:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "6895:45:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "6565:191:6",
										"text": "@notice Transfer an amount of a token to an address\n @param _token The token to transfer\n @param _to The address to transfer to\n @param _amount The amount to transfer"
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferAmount",
									"nameLocation": "6770:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "6794:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "6786:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6786:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6810:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "6802:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6823:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "6815:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6815:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:46:6"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6849:0:6"
									},
									"scope": 1038,
									"src": "6761:277:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "7359:176:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1018,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "7373:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1019,
														"name": "NATIVE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "7383:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7373:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "7454:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1030,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "7501:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1031,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "7509:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1028,
																		"name": "SafeTransferLib",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "7475:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeTransferLib_$1802_$",
																			"typeString": "type(library SafeTransferLib)"
																		}
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7491:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1801,
																	"src": "7475:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7475:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1017,
															"id": 1033,
															"nodeType": "Return",
															"src": "7468:50:6"
														}
													]
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "7369:160:6",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "7391:57:6",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1023,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "7420:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7412:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_payable_$",
																			"typeString": "type(address payable)"
																		},
																		"typeName": {
																			"id": 1021,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7412:8:6",
																			"stateMutability": "payable",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7412:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7430:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7412:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1017,
															"id": 1026,
															"nodeType": "Return",
															"src": "7405:32:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "7044:223:6",
										"text": "@notice Get the balance of a token for an account\n @param _token The token to get the balance of\n @param _account The account to get the balance for\n @return The balance of the token for the account"
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBalance",
									"nameLocation": "7281:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "7301:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "7293:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7293:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "7317:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "7309:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7309:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7292:34:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "7350:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7350:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7349:9:6"
									},
									"scope": 1038,
									"src": "7272:263:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1039,
							"src": "4513:3024:6",
							"usedErrors": [
								838
							]
						}
					],
					"src": "42:7496:6"
				},
				"id": 6
			},
			"lib/allo-v2/contracts/strategies/BaseStrategy.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
					"exportedSymbols": {
						"BaseStrategy": [
							1644
						],
						"Errors": [
							810
						],
						"IAllo": [
							358
						],
						"IStrategy": [
							717
						],
						"Transfer": [
							1038
						]
					},
					"id": 1645,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1040,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:7"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IStrategy.sol",
							"file": "../core/interfaces/IStrategy.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1645,
							"sourceUnit": 718,
							"src": "82:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Transfer.sol",
							"file": "../core/libraries/Transfer.sol",
							"id": 1043,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1645,
							"sourceUnit": 1039,
							"src": "139:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1042,
										"name": "Transfer",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1038,
										"src": "147:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/libraries/Errors.sol",
							"file": "../core/libraries/Errors.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1645,
							"sourceUnit": 811,
							"src": "196:52:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1044,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 810,
										"src": "204:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "IStrategy",
										"nameLocations": [
											"4599:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 717,
										"src": "4599:9:7"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "4599:9:7"
								},
								{
									"baseName": {
										"id": 1049,
										"name": "Transfer",
										"nameLocations": [
											"4610:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1038,
										"src": "4610:8:7"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "4610:8:7"
								},
								{
									"baseName": {
										"id": 1051,
										"name": "Errors",
										"nameLocations": [
											"4620:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 810,
										"src": "4620:6:7"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "4620:6:7"
								}
							],
							"canonicalName": "BaseStrategy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1046,
								"nodeType": "StructuredDocumentation",
								"src": "4241:324:7",
								"text": "@title BaseStrategy Contract\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice This contract is the base contract for all strategies\n @dev This contract is implemented by all strategies."
							},
							"fullyImplemented": false,
							"id": 1644,
							"linearizedBaseContracts": [
								1644,
								810,
								1038,
								827,
								717
							],
							"name": "BaseStrategy",
							"nameLocation": "4583:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "4633:101:7",
										"text": "==========================\n === Storage Variables ====\n =========================="
									},
									"id": 1056,
									"mutability": "immutable",
									"name": "allo",
									"nameLocation": "4764:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1644,
									"src": "4739:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAllo_$358",
										"typeString": "contract IAllo"
									},
									"typeName": {
										"id": 1055,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1054,
											"name": "IAllo",
											"nameLocations": [
												"4739:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 358,
											"src": "4739:5:7"
										},
										"referencedDeclaration": 358,
										"src": "4739:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAllo_$358",
											"typeString": "contract IAllo"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1058,
									"mutability": "immutable",
									"name": "strategyId",
									"nameLocation": "4801:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1644,
									"src": "4774:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1057,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4774:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1060,
									"mutability": "mutable",
									"name": "poolActive",
									"nameLocation": "4831:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1644,
									"src": "4817:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1059,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4817:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1062,
									"mutability": "mutable",
									"name": "poolId",
									"nameLocation": "4864:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1644,
									"src": "4847:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1061,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4847:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1064,
									"mutability": "mutable",
									"name": "poolAmount",
									"nameLocation": "4893:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1644,
									"src": "4876:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1063,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4876:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "5258:87:7",
										"statements": [
											{
												"expression": {
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1072,
														"name": "allo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "5268:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAllo_$358",
															"typeString": "contract IAllo"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1074,
																"name": "_allo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "5281:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1073,
															"name": "IAllo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5275:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAllo_$358_$",
																"typeString": "type(contract IAllo)"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5275:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAllo_$358",
															"typeString": "contract IAllo"
														}
													},
													"src": "5268:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$358",
														"typeString": "contract IAllo"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "5268:19:7"
											},
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1078,
														"name": "strategyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "5297:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1082,
																		"name": "_name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "5331:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1080,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5320:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5324:6:7",
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "5320:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1079,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "5310:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5310:28:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5297:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "5297:41:7"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "5046:159:7",
										"text": "@notice Constructor to set the Allo contract and \"strategyId'.\n @param _allo Address of the Allo contract.\n @param _name Name of the strategy"
									},
									"id": 1088,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_allo",
												"nameLocation": "5230:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "5222:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "5251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "5237:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1068,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5237:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:36:7"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5258:0:7"
									},
									"scope": 1644,
									"src": "5210:135:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "5650:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1091,
														"name": "_checkOnlyAllo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "5660:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5660:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "5660:16:7"
											},
											{
												"id": 1094,
												"nodeType": "PlaceholderStatement",
												"src": "5686:1:7"
											}
										]
									},
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "5487:138:7",
										"text": "@notice Modifier to check if the 'msg.sender' is the Allo contract.\n @dev Reverts if the 'msg.sender' is not the Allo contract."
									},
									"id": 1096,
									"name": "onlyAllo",
									"nameLocation": "5639:8:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5647:2:7"
									},
									"src": "5630:64:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "5944:58:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1102,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "5976:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1101,
														"name": "_checkOnlyPoolManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "5954:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5954:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "5954:30:7"
											},
											{
												"id": 1105,
												"nodeType": "PlaceholderStatement",
												"src": "5994:1:7"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "5700:197:7",
										"text": "@notice Modifier to check if the '_sender' is a pool manager.\n @dev Reverts if the '_sender' is not a pool manager.\n @param _sender The address to check if they are a pool manager"
									},
									"id": 1107,
									"name": "onlyPoolManager",
									"nameLocation": "5911:15:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "5935:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "5927:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5926:17:7"
									},
									"src": "5902:100:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "6139:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1110,
														"name": "_checkOnlyActivePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "6149:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "6149:22:7"
											},
											{
												"id": 1113,
												"nodeType": "PlaceholderStatement",
												"src": "6181:1:7"
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "6008:100:7",
										"text": "@notice Modifier to check if the pool is active.\n @dev Reverts if the pool is not active."
									},
									"id": 1115,
									"name": "onlyActivePool",
									"nameLocation": "6122:14:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6136:2:7"
									},
									"src": "6113:76:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "6326:48:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1118,
														"name": "_checkInactivePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "6336:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6336:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "6336:20:7"
											},
											{
												"id": 1121,
												"nodeType": "PlaceholderStatement",
												"src": "6366:1:7"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "6195:98:7",
										"text": "@notice Modifier to check if the pool is inactive.\n @dev Reverts if the pool is active."
									},
									"id": 1123,
									"name": "onlyInactivePool",
									"nameLocation": "6307:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6323:2:7"
									},
									"src": "6298:76:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "6522:51:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1126,
														"name": "_checkOnlyInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "6532:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6532:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "6532:23:7"
											},
											{
												"id": 1129,
												"nodeType": "PlaceholderStatement",
												"src": "6565:1:7"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "6380:110:7",
										"text": "@notice Modifier to check if the pool is initialized.\n @dev Reverts if the pool is not initialized."
									},
									"id": 1131,
									"name": "onlyInitialized",
									"nameLocation": "6504:15:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6519:2:7"
									},
									"src": "6495:78:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										618
									],
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "6843:28:7",
										"statements": [
											{
												"expression": {
													"id": 1139,
													"name": "allo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1056,
													"src": "6860:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$358",
														"typeString": "contract IAllo"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1140,
												"nodeType": "Return",
												"src": "6853:11:7"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "6703:77:7",
										"text": "@notice Getter for the 'Allo' contract.\n @return The Allo contract"
									},
									"functionSelector": "15cc481e",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllo",
									"nameLocation": "6794:7:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1134,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6818:8:7"
									},
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6801:2:7"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "6836:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAllo_$358",
													"typeString": "contract IAllo"
												},
												"typeName": {
													"id": 1136,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1135,
														"name": "IAllo",
														"nameLocations": [
															"6836:5:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 358,
														"src": "6836:5:7"
													},
													"referencedDeclaration": 358,
													"src": "6836:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$358",
														"typeString": "contract IAllo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6835:7:7"
									},
									"scope": 1644,
									"src": "6785:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										624
									],
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "7015:30:7",
										"statements": [
											{
												"expression": {
													"id": 1149,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1062,
													"src": "7032:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1150,
												"nodeType": "Return",
												"src": "7025:13:7"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "6877:71:7",
										"text": "@notice Getter for the 'poolId'.\n @return The ID of the pool"
									},
									"functionSelector": "38fff2d0",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolId",
									"nameLocation": "6962:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6988:8:7"
									},
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:2:7"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "7006:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7006:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7005:9:7"
									},
									"scope": 1644,
									"src": "6953:92:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "7201:34:7",
										"statements": [
											{
												"expression": {
													"id": 1159,
													"name": "strategyId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1058,
													"src": "7218:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1160,
												"nodeType": "Return",
												"src": "7211:17:7"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "7051:79:7",
										"text": "@notice Getter for the 'strategyId'.\n @return The ID of the strategy"
									},
									"functionSelector": "42fda9c7",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategyId",
									"nameLocation": "7144:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1155,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7174:8:7"
									},
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7157:2:7"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "7192:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7191:9:7"
									},
									"scope": 1644,
									"src": "7135:100:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "7400:34:7",
										"statements": [
											{
												"expression": {
													"id": 1169,
													"name": "poolAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1064,
													"src": "7417:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1170,
												"nodeType": "Return",
												"src": "7410:17:7"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "7241:80:7",
										"text": "@notice Getter for the 'poolAmount'.\n @return The balance of the pool"
									},
									"functionSelector": "4ab4ba42",
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAmount",
									"nameLocation": "7335:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7373:8:7"
									},
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7348:2:7"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "7391:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7391:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7390:9:7"
									},
									"scope": 1644,
									"src": "7326:108:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										644
									],
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "7628:39:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1179,
														"name": "_isPoolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "7645:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7645:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1181,
												"nodeType": "Return",
												"src": "7638:22:7"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "7440:121:7",
										"text": "@notice Getter for whether or not the pool is active.\n @return 'true' if the pool is active, otherwise 'false'"
									},
									"functionSelector": "df868ed3",
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolActive",
									"nameLocation": "7575:12:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7604:8:7"
									},
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7587:2:7"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "7622:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7622:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7621:6:7"
									},
									"scope": 1644,
									"src": "7566:101:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										665
									],
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "7912:57:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1193,
															"name": "_recipientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "7949:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1192,
														"name": "_getRecipientStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "7929:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Status_$563_$",
															"typeString": "function (address) view returns (enum IStrategy.Status)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7929:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$563",
														"typeString": "enum IStrategy.Status"
													}
												},
												"functionReturnParameters": 1191,
												"id": 1195,
												"nodeType": "Return",
												"src": "7922:40:7"
											}
										]
									},
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "7673:145:7",
										"text": "@notice Getter for the status of a recipient.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"functionSelector": "eb11af93",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecipientStatus",
									"nameLocation": "7832:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "7859:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "7851:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7851:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:22:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "7904:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$563",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 1189,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1188,
														"name": "Status",
														"nameLocations": [
															"7904:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 563,
														"src": "7904:6:7"
													},
													"referencedDeclaration": 563,
													"src": "7904:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$563",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7903:8:7"
									},
									"scope": 1644,
									"src": "7823:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "8341:278:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1205,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "8428:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8438:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8428:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "IfStatement",
												"src": "8424:45:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1208,
															"name": "ALREADY_INITIALIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "8448:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8448:21:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1210,
													"nodeType": "RevertStatement",
													"src": "8441:28:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1212,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "8556:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8567:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8556:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1218,
												"nodeType": "IfStatement",
												"src": "8552:34:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1215,
															"name": "INVALID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "8577:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8577:9:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1217,
													"nodeType": "RevertStatement",
													"src": "8570:16:7"
												}
											},
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "8596:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1220,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "8605:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8596:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "8596:16:7"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "8111:153:7",
										"text": "@notice Initializes the 'Basetrategy'.\n @dev Will revert if the poolId is invalid or already initialized\n @param _poolId ID of the pool"
									},
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1202,
												"name": "onlyAllo",
												"nameLocations": [
													"8332:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1096,
												"src": "8332:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8332:8:7"
										}
									],
									"name": "__BaseStrategy_init",
									"nameLocation": "8278:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "8306:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "8298:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8298:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:17:7"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8341:0:7"
									},
									"scope": 1644,
									"src": "8269:350:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										656
									],
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "8888:125:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1234,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "8924:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1233,
														"name": "_beforeIncreasePoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "8898:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8898:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "8898:34:7"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "poolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "8942:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1238,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "8956:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8942:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "8942:21:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1242,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "8998:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_afterIncreasePoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "8973:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8973:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "8973:33:7"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "8625:186:7",
										"text": "@notice Increases the pool amount.\n @dev Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\n @param _amount The amount to increase the pool by"
									},
									"functionSelector": "f5b0dfb7",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1231,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1230,
												"name": "onlyAllo",
												"nameLocations": [
													"8879:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1096,
												"src": "8879:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8879:8:7"
										}
									],
									"name": "increasePoolAmount",
									"nameLocation": "8825:18:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1229,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8870:8:7"
									},
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8852:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "8844:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8844:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8843:17:7"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8888:0:7"
									},
									"scope": 1644,
									"src": "8816:197:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										697
									],
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "9609:164:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "9644:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1262,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "9651:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1260,
														"name": "_beforeRegisterRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "9619:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9619:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "9619:40:7"
											},
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1265,
														"name": "recipientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "9669:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1267,
																"name": "_data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "9702:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1268,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "9709:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1266,
															"name": "_registerRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "9683:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
																"typeString": "function (bytes memory,address) returns (address)"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9683:34:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9669:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "9669:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1273,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "9751:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1274,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "9758:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1272,
														"name": "_afterRegisterRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "9727:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9727:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "9727:39:7"
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "9019:405:7",
										"text": "@notice Registers a recipient.\n @dev Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the\n      strategy implementation. Only 'Allo' contract can call this when it is initialized.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return recipientId The recipientId"
									},
									"functionSelector": "2bbe0cae",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1253,
												"name": "onlyAllo",
												"nameLocations": [
													"9534:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1096,
												"src": "9534:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9534:8:7"
										},
										{
											"id": 1256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1255,
												"name": "onlyInitialized",
												"nameLocations": [
													"9551:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1131,
												"src": "9551:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9551:15:7"
										}
									],
									"name": "registerRecipient",
									"nameLocation": "9438:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9469:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "9456:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9456:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "9484:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "9476:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9476:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9455:37:7"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "9592:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "9584:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9584:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9583:21:7"
									},
									"scope": 1644,
									"src": "9429:344:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										705
									],
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "10189:123:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1291,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "10215:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1292,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "10222:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1290,
														"name": "_beforeAllocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "10199:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10199:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "10199:31:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1296,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "10250:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1297,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "10257:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1295,
														"name": "_allocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "10240:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10240:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "10240:25:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "10290:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1302,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "10297:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1300,
														"name": "_afterAllocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "10275:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10275:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "10275:30:7"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "9779:308:7",
										"text": "@notice Allocates to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n      call this when it is initialized.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"functionSelector": "ef2920fc",
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1285,
												"name": "onlyAllo",
												"nameLocations": [
													"10164:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1096,
												"src": "10164:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10164:8:7"
										},
										{
											"id": 1288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1287,
												"name": "onlyInitialized",
												"nameLocations": [
													"10173:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1131,
												"src": "10173:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10173:15:7"
										}
									],
									"name": "allocate",
									"nameLocation": "10101:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10123:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "10110:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10110:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10138:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "10130:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10130:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10109:37:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10189:0:7"
									},
									"scope": 1644,
									"src": "10092:220:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "10856:174:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "10884:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1323,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "10899:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1324,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "10906:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1321,
														"name": "_beforeDistribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "10866:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (address[] memory,bytes memory,address)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10866:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "10866:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "10936:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1329,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "10951:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1330,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "10958:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1327,
														"name": "_distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "10924:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (address[] memory,bytes memory,address)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10924:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "10924:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1334,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "10993:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1335,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "11008:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1336,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "11015:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1333,
														"name": "_afterDistribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "10976:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (address[] memory,bytes memory,address)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10976:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "10976:47:7"
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "10318:382:7",
										"text": "@notice Distributes funds (tokens) to recipients.\n @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n      call this when it is initialized.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"
									},
									"functionSelector": "0a6f0ee9",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1316,
												"name": "onlyAllo",
												"nameLocations": [
													"10819:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1096,
												"src": "10819:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10819:8:7"
										},
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "onlyInitialized",
												"nameLocations": [
													"10836:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1131,
												"src": "10836:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10836:15:7"
										}
									],
									"name": "distribute",
									"nameLocation": "10714:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "10742:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "10725:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1308,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10725:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1309,
													"nodeType": "ArrayTypeName",
													"src": "10725:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10770:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "10757:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10757:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10785:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "10777:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10724:69:7"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10856:0:7"
									},
									"scope": 1644,
									"src": "10705:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										679
									],
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "11549:522:7",
										"statements": [
											{
												"assignments": [
													1356
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "recipientLength",
														"nameLocation": "11567:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "11559:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11559:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1359,
												"initialValue": {
													"expression": {
														"id": 1357,
														"name": "_recipientIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "11585:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11599:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "11585:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11559:46:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1360,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "11722:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1361,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "11741:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11747:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11741:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11722:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1367,
												"nodeType": "IfStatement",
												"src": "11718:60:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1364,
															"name": "ARRAY_MISMATCH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "11762:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11762:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1366,
													"nodeType": "RevertStatement",
													"src": "11755:23:7"
												}
											},
											{
												"assignments": [
													1372
												],
												"declarations": [
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "payouts",
														"nameLocation": "11812:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "11789:30:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IStrategy.PayoutSummary[]"
														},
														"typeName": {
															"baseType": {
																"id": 1370,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1369,
																	"name": "PayoutSummary",
																	"nameLocations": [
																		"11789:13:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 568,
																	"src": "11789:13:7"
																},
																"referencedDeclaration": 568,
																"src": "11789:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutSummary_$568_storage_ptr",
																	"typeString": "struct IStrategy.PayoutSummary"
																}
															},
															"id": 1371,
															"nodeType": "ArrayTypeName",
															"src": "11789:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_storage_$dyn_storage_ptr",
																"typeString": "struct IStrategy.PayoutSummary[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"arguments": [
														{
															"id": 1377,
															"name": "recipientLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "11842:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "11822:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IStrategy.PayoutSummary memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1374,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1373,
																	"name": "PayoutSummary",
																	"nameLocations": [
																		"11826:13:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 568,
																	"src": "11826:13:7"
																},
																"referencedDeclaration": 568,
																"src": "11826:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutSummary_$568_storage_ptr",
																	"typeString": "struct IStrategy.PayoutSummary"
																}
															},
															"id": 1375,
															"nodeType": "ArrayTypeName",
															"src": "11826:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_storage_$dyn_storage_ptr",
																"typeString": "struct IStrategy.PayoutSummary[]"
															}
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11822:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IStrategy.PayoutSummary memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11789:69:7"
											},
											{
												"body": {
													"id": 1403,
													"nodeType": "Block",
													"src": "11906:135:7",
													"statements": [
														{
															"expression": {
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1386,
																		"name": "payouts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1372,
																		"src": "11920:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IStrategy.PayoutSummary memory[] memory"
																		}
																	},
																	"id": 1388,
																	"indexExpression": {
																		"id": 1387,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "11928:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11920:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutSummary_$568_memory_ptr",
																		"typeString": "struct IStrategy.PayoutSummary memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1390,
																				"name": "_recipientIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1344,
																				"src": "11944:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 1392,
																			"indexExpression": {
																				"id": 1391,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1381,
																				"src": "11958:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11944:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1393,
																				"name": "_data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1347,
																				"src": "11962:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																					"typeString": "bytes memory[] memory"
																				}
																			},
																			"id": 1395,
																			"indexExpression": {
																				"id": 1394,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1381,
																				"src": "11968:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11962:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1389,
																		"name": "_getPayout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "11933:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_PayoutSummary_$568_memory_ptr_$",
																			"typeString": "function (address,bytes memory) view returns (struct IStrategy.PayoutSummary memory)"
																		}
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11933:38:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutSummary_$568_memory_ptr",
																		"typeString": "struct IStrategy.PayoutSummary memory"
																	}
																},
																"src": "11920:51:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutSummary_$568_memory_ptr",
																	"typeString": "struct IStrategy.PayoutSummary memory"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "11920:51:7"
														},
														{
															"id": 1402,
															"nodeType": "UncheckedBlock",
															"src": "11985:46:7",
															"statements": [
																{
																	"expression": {
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "12013:3:7",
																		"subExpression": {
																			"id": 1399,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1381,
																			"src": "12013:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1401,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:3:7"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1383,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "11884:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1384,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "11888:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11884:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"initializationExpression": {
													"assignments": [
														1381
													],
													"declarations": [
														{
															"constant": false,
															"id": 1381,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11881:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1404,
															"src": "11873:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1380,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11873:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1382,
													"nodeType": "VariableDeclarationStatement",
													"src": "11873:9:7"
												},
												"nodeType": "ForStatement",
												"src": "11868:173:7"
											},
											{
												"expression": {
													"id": 1405,
													"name": "payouts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1372,
													"src": "12057:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IStrategy.PayoutSummary memory[] memory"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1406,
												"nodeType": "Return",
												"src": "12050:14:7"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "11036:326:7",
										"text": "@notice Gets the payout summary for recipients.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to get the payout summary for the recipients\n @return The payout summary for the recipients"
									},
									"functionSelector": "b2b878d0",
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPayouts",
									"nameLocation": "11376:10:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1349,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11495:8:7"
									},
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "11404:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "11387:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1342,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11387:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1343,
													"nodeType": "ArrayTypeName",
													"src": "11387:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11434:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "11419:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1345,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "11419:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1346,
													"nodeType": "ArrayTypeName",
													"src": "11419:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11386:54:7"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "11521:22:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary[]"
												},
												"typeName": {
													"baseType": {
														"id": 1351,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1350,
															"name": "PayoutSummary",
															"nameLocations": [
																"11521:13:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 568,
															"src": "11521:13:7"
														},
														"referencedDeclaration": 568,
														"src": "11521:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutSummary_$568_storage_ptr",
															"typeString": "struct IStrategy.PayoutSummary"
														}
													},
													"id": 1352,
													"nodeType": "ArrayTypeName",
													"src": "11521:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$568_storage_$dyn_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11520:24:7"
									},
									"scope": 1644,
									"src": "11367:704:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										638
									],
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "12487:53:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1418,
															"name": "_allocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "12522:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1417,
														"name": "_isValidAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1520,
														"src": "12504:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12504:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1416,
												"id": 1420,
												"nodeType": "Return",
												"src": "12497:36:7"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "12077:313:7",
										"text": "@notice Checks if the '_allocator' is a valid allocator.\n @dev How the allocator is determined is up to the strategy implementation.\n @param _allocator The address to check if it is a valid allocator for the strategy.\n @return 'true' if the address is a valid allocator, 'false' otherwise"
									},
									"functionSelector": "4d31d087",
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidAllocator",
									"nameLocation": "12404:16:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1413,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12463:8:7"
									},
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "12429:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12421:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12421:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12420:20:7"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "12481:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12481:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12480:6:7"
									},
									"scope": 1644,
									"src": "12395:145:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "12854:71:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1426,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12868:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12872:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12868:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1430,
																"name": "allo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "12890:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAllo_$358",
																	"typeString": "contract IAllo"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IAllo_$358",
																	"typeString": "contract IAllo"
																}
															],
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1428,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12882:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12882:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12868:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"nodeType": "IfStatement",
												"src": "12864:54:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1433,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "12904:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12904:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1435,
													"nodeType": "RevertStatement",
													"src": "12897:21:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "12682:127:7",
										"text": "@notice Checks if the 'msg.sender' is the Allo contract.\n @dev Reverts if the 'msg.sender' is not the Allo contract."
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyAllo",
									"nameLocation": "12823:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12837:2:7"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12854:0:7"
									},
									"scope": 1644,
									"src": "12814:111:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "13184:80:7",
										"statements": [
											{
												"condition": {
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13198:36:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1446,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "13218:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1447,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "13226:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1444,
																"name": "allo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "13199:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAllo_$358",
																	"typeString": "contract IAllo"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13204:13:7",
															"memberName": "isPoolManager",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 301,
															"src": "13199:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
																"typeString": "function (uint256,address) view external returns (bool)"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13199:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1453,
												"nodeType": "IfStatement",
												"src": "13194:63:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1450,
															"name": "UNAUTHORIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "13243:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13243:14:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1452,
													"nodeType": "RevertStatement",
													"src": "13236:21:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "12931:186:7",
										"text": "@notice Checks if the '_sender' is a pool manager.\n @dev Reverts if the '_sender' is not a pool manager.\n @param _sender The address to check if they are a pool manager"
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyPoolManager",
									"nameLocation": "13131:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "13161:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "13153:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13153:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13152:17:7"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13184:0:7"
									},
									"scope": 1644,
									"src": "13122:142:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "13410:56:7",
										"statements": [
											{
												"condition": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13424:11:7",
													"subExpression": {
														"id": 1459,
														"name": "poolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "13425:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1464,
												"nodeType": "IfStatement",
												"src": "13420:39:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1461,
															"name": "POOL_INACTIVE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "13444:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13444:15:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1463,
													"nodeType": "RevertStatement",
													"src": "13437:22:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "13270:89:7",
										"text": "@notice Checks if the pool is active.\n @dev Reverts if the pool is not active."
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyActivePool",
									"nameLocation": "13373:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13393:2:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13410:0:7"
									},
									"scope": 1644,
									"src": "13364:102:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1475,
										"nodeType": "Block",
										"src": "13608:53:7",
										"statements": [
											{
												"condition": {
													"id": 1470,
													"name": "poolActive",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "13622:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1474,
												"nodeType": "IfStatement",
												"src": "13618:36:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1471,
															"name": "POOL_ACTIVE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "13641:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13641:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1473,
													"nodeType": "RevertStatement",
													"src": "13634:20:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1467,
										"nodeType": "StructuredDocumentation",
										"src": "13472:87:7",
										"text": "@notice Checks if the pool is inactive.\n @dev Reverts if the pool is active."
									},
									"id": 1476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInactivePool",
									"nameLocation": "13573:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13591:2:7"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13608:0:7"
									},
									"scope": 1644,
									"src": "13564:97:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "13818:58:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1480,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "13832:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13842:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13832:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1486,
												"nodeType": "IfStatement",
												"src": "13828:41:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1483,
															"name": "NOT_INITIALIZED",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "13852:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13852:17:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1485,
													"nodeType": "RevertStatement",
													"src": "13845:24:7"
												}
											}
										]
									},
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "13667:99:7",
										"text": "@notice Checks if the pool is initialized.\n @dev Reverts if the pool is not initialized."
									},
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyInitialized",
									"nameLocation": "13780:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13801:2:7"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13818:0:7"
									},
									"scope": 1644,
									"src": "13771:105:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "14163:71:7",
										"statements": [
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1494,
														"name": "poolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "14173:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1495,
														"name": "_active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "14186:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14173:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "14173:20:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1499,
															"name": "_active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "14219:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1498,
														"name": "PoolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "14208:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14208:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "EmitStatement",
												"src": "14203:24:7"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "13882:229:7",
										"text": "@notice Set the pool to active or inactive status.\n @dev This will emit a 'PoolActive()' event. Used by the strategy implementation.\n @param _active The status to set, 'true' means active, 'false' means inactive"
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setPoolActive",
									"nameLocation": "14125:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "_active",
												"nameLocation": "14145:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "14140:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14140:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14139:14:7"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14163:0:7"
									},
									"scope": 1644,
									"src": "14116:118:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "14462:34:7",
										"statements": [
											{
												"expression": {
													"id": 1509,
													"name": "poolActive",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "14479:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1508,
												"id": 1510,
												"nodeType": "Return",
												"src": "14472:17:7"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "14240:155:7",
										"text": "@notice Checks if the pool is active.\n @dev Used by the strategy implementation.\n @return 'true' if the pool is active, otherwise 'false'"
									},
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isPoolActive",
									"nameLocation": "14409:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14422:2:7"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "14456:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14456:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14455:6:7"
									},
									"scope": 1644,
									"src": "14400:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "14502:160:7",
										"text": "@notice Checks if the allocator is valid\n @param _allocator The allocator address\n @return 'true' if the allocator is valid, otherwise 'false'"
									},
									"id": 1520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidAllocator",
									"nameLocation": "14676:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "14702:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "14694:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14694:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14693:20:7"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "14745:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14745:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14744:6:7"
									},
									"scope": 1644,
									"src": "14667:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "14757:588:7",
										"text": "@notice This will register a recipient, set their status (and any other strategy specific values), and\n         return the ID of the recipient.\n @dev Able to change status all the way up to Accepted, or to Pending and if there are more steps, additional\n      functions should be added to allow the owner to check this. The owner could also check attestations directly\n      and then Accept for instance.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return The ID of the recipient"
									},
									"id": 1530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_registerRecipient",
									"nameLocation": "15359:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15391:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "15378:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15378:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "15406:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "15398:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15398:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15377:37:7"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "15441:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15441:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15440:9:7"
									},
									"scope": 1644,
									"src": "15350:100:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "15456:245:7",
										"text": "@notice This will allocate to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_allocate",
									"nameLocation": "15715:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15738:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "15725:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15725:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "15753:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "15745:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15745:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15724:37:7"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15778:0:7"
									},
									"scope": 1644,
									"src": "15706:73:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "15785:470:7",
										"text": "@notice This will distribute funds (tokens) to recipients.\n @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n this contract will need to track the amount paid already, so that it doesn't double pay.\n @param _recipientIds The ids of the recipients to distribute to\n @param _data Data required will depend on the strategy implementation\n @param _sender The address of the sender"
									},
									"id": 1549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_distribute",
									"nameLocation": "16269:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "16298:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "16281:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1540,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16281:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1541,
													"nodeType": "ArrayTypeName",
													"src": "16281:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "16326:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "16313:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16313:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "16341:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "16333:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16333:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16280:69:7"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16366:0:7"
									},
									"scope": 1644,
									"src": "16260:107:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "16373:331:7",
										"text": "@notice This will get the payout summary for a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _recipientId The ID of the recipient\n @param _data The data to use to get the payout summary for the recipient\n @return The payout summary for the recipient"
									},
									"id": 1560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getPayout",
									"nameLocation": "16718:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "16737:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "16729:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16729:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "16764:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "16751:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16728:42:7"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "16834:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PayoutSummary_$568_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary"
												},
												"typeName": {
													"id": 1557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1556,
														"name": "PayoutSummary",
														"nameLocations": [
															"16834:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 568,
														"src": "16834:13:7"
													},
													"referencedDeclaration": 568,
													"src": "16834:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PayoutSummary_$568_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16833:22:7"
									},
									"scope": 1644,
									"src": "16709:147:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "16862:148:7",
										"text": "@notice This will get the status of a recipient.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getRecipientStatus",
									"nameLocation": "17024:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "17052:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "17044:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17044:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17043:22:7"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "17097:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$563",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 1566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1565,
														"name": "Status",
														"nameLocations": [
															"17097:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 563,
														"src": "17097:6:7"
													},
													"referencedDeclaration": 563,
													"src": "17097:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$563",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17096:8:7"
									},
									"scope": 1644,
									"src": "17015:90:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1575,
										"nodeType": "Block",
										"src": "17434:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "17244:116:7",
										"text": "@notice Hook called before increasing the pool amount.\n @param _amount The amount to increase the pool by"
									},
									"id": 1576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeIncreasePoolAmount",
									"nameLocation": "17374:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "17408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "17400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17399:17:7"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17434:0:7"
									},
									"scope": 1644,
									"src": "17365:71:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "17630:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "17442:115:7",
										"text": "@notice Hook called after increasing the pool amount.\n @param _amount The amount to increase the pool by"
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterIncreasePoolAmount",
									"nameLocation": "17571:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "17604:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "17596:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17596:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17595:17:7"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17630:0:7"
									},
									"scope": 1644,
									"src": "17562:70:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "17898:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "17638:167:7",
										"text": "@notice Hook called before registering a recipient.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender"
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeRegisterRecipient",
									"nameLocation": "17819:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "17857:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "17844:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17844:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "17872:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "17864:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17864:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17843:37:7"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17898:0:7"
									},
									"scope": 1644,
									"src": "17810:90:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "18164:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "17906:166:7",
										"text": "@notice Hook called after registering a recipient.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender"
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterRegisterRecipient",
									"nameLocation": "18086:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "18123:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "18110:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18110:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "18138:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "18130:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18130:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18109:37:7"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18164:0:7"
									},
									"scope": 1644,
									"src": "18077:89:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "18428:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "18172:172:7",
										"text": "@notice Hook called before allocating to a recipient.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeAllocate",
									"nameLocation": "18358:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "18387:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "18374:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18374:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "18402:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "18394:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18394:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18373:37:7"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18428:0:7"
									},
									"scope": 1644,
									"src": "18349:81:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "18690:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "18436:171:7",
										"text": "@notice Hook called after allocating to a recipient.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterAllocate",
									"nameLocation": "18621:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "18649:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "18636:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18636:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "18664:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "18656:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18656:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18635:37:7"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18690:0:7"
									},
									"scope": 1644,
									"src": "18612:80:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "19062:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "18698:246:7",
										"text": "@notice Hook called before distributing funds (tokens) to recipients.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeDistribute",
									"nameLocation": "18958:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "18993:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "18976:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1621,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "18976:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1622,
													"nodeType": "ArrayTypeName",
													"src": "18976:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "19021:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "19008:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19008:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "19036:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "19028:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19028:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18975:69:7"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19062:0:7"
									},
									"scope": 1644,
									"src": "18949:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "19432:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "19070:245:7",
										"text": "@notice Hook called after distributing funds (tokens) to recipients.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterDistribute",
									"nameLocation": "19329:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "19363:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "19346:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1633,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19346:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1634,
													"nodeType": "ArrayTypeName",
													"src": "19346:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "19391:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "19378:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19378:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "19406:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "19398:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19398:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:69:7"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19432:0:7"
									},
									"scope": 1644,
									"src": "19320:114:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1645,
							"src": "4565:14871:7",
							"usedErrors": [
								723,
								726,
								729,
								732,
								735,
								738,
								741,
								744,
								747,
								750,
								753,
								756,
								759,
								762,
								765,
								768,
								771,
								774,
								777,
								780,
								783,
								786,
								789,
								792,
								795,
								800,
								803,
								806,
								809,
								838
							]
						}
					],
					"src": "42:19395:7"
				},
				"id": 7
			},
			"lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol": {
				"ast": {
					"absolutePath": "lib/allo-v2/lib/solady/src/utils/SafeTransferLib.sol",
					"exportedSymbols": {
						"SafeTransferLib": [
							1802
						]
					},
					"id": 1803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeTransferLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1647,
								"nodeType": "StructuredDocumentation",
								"src": "57:539:8",
								"text": "@notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)\n @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n @dev Note:\n - For ETH transfers, please use `forceSafeTransferETH` for gas griefing protection.\n - For ERC20s, this implementation won't check that a token has code,\n responsibility is delegated to the caller."
							},
							"fullyImplemented": true,
							"id": 1802,
							"linearizedBaseContracts": [
								1802
							],
							"name": "SafeTransferLib",
							"nameLocation": "604:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "909:37:8",
										"text": "@dev The ETH transfer has failed."
									},
									"errorSelector": "b12d13eb",
									"id": 1650,
									"name": "ETHTransferFailed",
									"nameLocation": "957:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:2:8"
									},
									"src": "951:26:8"
								},
								{
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "983:45:8",
										"text": "@dev The ERC20 `transferFrom` has failed."
									},
									"errorSelector": "7939f424",
									"id": 1653,
									"name": "TransferFromFailed",
									"nameLocation": "1039:18:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1057:2:8"
									},
									"src": "1033:27:8"
								},
								{
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "1066:41:8",
										"text": "@dev The ERC20 `transfer` has failed."
									},
									"errorSelector": "90b8ec18",
									"id": 1656,
									"name": "TransferFailed",
									"nameLocation": "1118:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1132:2:8"
									},
									"src": "1112:23:8"
								},
								{
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "1141:40:8",
										"text": "@dev The ERC20 `approve` has failed."
									},
									"errorSelector": "3e3f8f73",
									"id": 1659,
									"name": "ApproveFailed",
									"nameLocation": "1192:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1205:2:8"
									},
									"src": "1186:22:8"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "1497:100:8",
										"text": "@dev Suggested gas stipend for contract receiving ETH\n that disallows any storage writes."
									},
									"id": 1663,
									"mutability": "constant",
									"name": "GAS_STIPEND_NO_STORAGE_WRITES",
									"nameLocation": "1628:29:8",
									"nodeType": "VariableDeclaration",
									"scope": 1802,
									"src": "1602:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1661,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1602:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32333030",
										"id": 1662,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1660:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2300_by_1",
											"typeString": "int_const 2300"
										},
										"value": "2300"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "1671:202:8",
										"text": "@dev Suggested gas stipend for contract receiving ETH to perform a few\n storage reads and writes, but low enough to prevent griefing.\n Multiply by a small constant (e.g. 2), if needed."
									},
									"id": 1667,
									"mutability": "constant",
									"name": "GAS_STIPEND_NO_GRIEF",
									"nameLocation": "1904:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1802,
									"src": "1878:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1878:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 1666,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1927:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "2517:428:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2579:360:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2718:211:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2816:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2822:10:8",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2809:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2809:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2809:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2910:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "gas",
																					"nodeType": "YulIdentifier",
																					"src": "2674:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2674:5:8"
																			},
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "2681:2:8"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "2685:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2693:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2699:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2705:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2711:4:8",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "2669:4:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2669:47:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2662:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:55:8"
															},
															"nodeType": "YulIf",
															"src": "2659:270:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1672,
														"isOffset": false,
														"isSlot": false,
														"src": "2685:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "2681:2:8",
														"valueSize": 1
													}
												],
												"id": 1675,
												"nodeType": "InlineAssembly",
												"src": "2570:369:8"
											}
										]
									},
									"documentation": {
										"id": 1668,
										"nodeType": "StructuredDocumentation",
										"src": "2223:227:8",
										"text": "@dev Sends `amount` (in wei) ETH to `to`.\n Reverts upon failure.\n Note: This implementation does NOT protect against gas griefing.\n Please use `forceSafeTransferETH` for gas griefing protection."
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2464:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2488:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "2480:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2500:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "2492:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:28:8"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2517:0:8"
									},
									"scope": 1802,
									"src": "2455:490:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "3467:1135:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3529:1067:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3620:211:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3718:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3724:10:8",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3711:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3711:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3711:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3806:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3812:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3799:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3799:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3799:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "selfbalance",
																			"nodeType": "YulIdentifier",
																			"src": "3597:11:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3597:13:8"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "3612:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3594:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:25:8"
															},
															"nodeType": "YulIf",
															"src": "3591:240:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3974:612:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3999:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nodeType": "YulIdentifier",
																					"src": "4005:2:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3992:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3992:16:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3992:16:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4072:4:8",
																					"type": "",
																					"value": "0x0b"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4078:4:8",
																					"type": "",
																					"value": "0x73"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "4064:7:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4064:19:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4064:19:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4128:4:8",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4134:4:8",
																					"type": "",
																					"value": "0xff"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "4120:7:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4120:19:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4120:19:8"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4386:186:8",
																			"statements": [
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "4532:22:8",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4541:4:8",
																											"type": "",
																											"value": "0x00"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4547:4:8",
																											"type": "",
																											"value": "0x00"
																										}
																									],
																									"functionName": {
																										"name": "revert",
																										"nodeType": "YulIdentifier",
																										"src": "4534:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4534:18:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "4534:18:8"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [],
																										"functionName": {
																											"name": "gas",
																											"nodeType": "YulIdentifier",
																											"src": "4515:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4515:5:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4522:7:8",
																										"type": "",
																										"value": "1000000"
																									}
																								],
																								"functionName": {
																									"name": "gt",
																									"nodeType": "YulIdentifier",
																									"src": "4512:2:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4512:18:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4505:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4505:26:8"
																					},
																					"nodeType": "YulIf",
																					"src": "4502:52:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "amount",
																							"nodeType": "YulIdentifier",
																							"src": "4365:6:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4373:4:8",
																							"type": "",
																							"value": "0x0b"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4379:4:8",
																							"type": "",
																							"value": "0x16"
																						}
																					],
																					"functionName": {
																						"name": "create",
																						"nodeType": "YulIdentifier",
																						"src": "4358:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4358:26:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "4351:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4351:34:8"
																		},
																		"nodeType": "YulIf",
																		"src": "4348:224:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "gasStipend",
																				"nodeType": "YulIdentifier",
																				"src": "3925:10:8"
																			},
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "3937:2:8"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "3941:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3949:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3955:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3961:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3967:4:8",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "3920:4:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:52:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3913:60:8"
															},
															"nodeType": "YulIf",
															"src": "3910:676:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1682,
														"isOffset": false,
														"isSlot": false,
														"src": "3612:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1682,
														"isOffset": false,
														"isSlot": false,
														"src": "3941:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1682,
														"isOffset": false,
														"isSlot": false,
														"src": "4365:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1684,
														"isOffset": false,
														"isSlot": false,
														"src": "3925:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "3937:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1680,
														"isOffset": false,
														"isSlot": false,
														"src": "4005:2:8",
														"valueSize": 1
													}
												],
												"id": 1687,
												"nodeType": "InlineAssembly",
												"src": "3520:1076:8"
											}
										]
									},
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "2951:424:8",
										"text": "@dev Force sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n The `gasStipend` can be set to a low enough value to prevent\n storage writes or gas griefing.\n If sending via the normal procedure fails, force sends the ETH by\n creating a temporary contract which uses `SELFDESTRUCT` to force send the ETH.\n Reverts if the current contract has insufficient balance."
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceSafeTransferETH",
									"nameLocation": "3389:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3418:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "3410:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3430:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "3422:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "gasStipend",
												"nameLocation": "3446:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "3438:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3409:48:8"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3467:0:8"
									},
									"scope": 1802,
									"src": "3380:1222:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "5193:1234:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5344:1077:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5435:211:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5533:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5539:10:8",
																					"type": "",
																					"value": "0xb12d13eb"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5526:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5526:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5526:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5621:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5627:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5614:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5614:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5614:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "selfbalance",
																			"nodeType": "YulIdentifier",
																			"src": "5412:11:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5412:13:8"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "5427:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5409:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:25:8"
															},
															"nodeType": "YulIf",
															"src": "5406:240:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5799:612:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5824:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"name": "to",
																					"nodeType": "YulIdentifier",
																					"src": "5830:2:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5817:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5817:16:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5817:16:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5897:4:8",
																					"type": "",
																					"value": "0x0b"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5903:4:8",
																					"type": "",
																					"value": "0x73"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "5889:7:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5889:19:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5889:19:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5953:4:8",
																					"type": "",
																					"value": "0x20"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5959:4:8",
																					"type": "",
																					"value": "0xff"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "5945:7:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5945:19:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5945:19:8"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6211:186:8",
																			"statements": [
																				{
																					"body": {
																						"nodeType": "YulBlock",
																						"src": "6357:22:8",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6366:4:8",
																											"type": "",
																											"value": "0x00"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6372:4:8",
																											"type": "",
																											"value": "0x00"
																										}
																									],
																									"functionName": {
																										"name": "revert",
																										"nodeType": "YulIdentifier",
																										"src": "6359:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6359:18:8"
																								},
																								"nodeType": "YulExpressionStatement",
																								"src": "6359:18:8"
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [],
																										"functionName": {
																											"name": "gas",
																											"nodeType": "YulIdentifier",
																											"src": "6340:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6340:5:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6347:7:8",
																										"type": "",
																										"value": "1000000"
																									}
																								],
																								"functionName": {
																									"name": "gt",
																									"nodeType": "YulIdentifier",
																									"src": "6337:2:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6337:18:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "6330:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6330:26:8"
																					},
																					"nodeType": "YulIf",
																					"src": "6327:52:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "amount",
																							"nodeType": "YulIdentifier",
																							"src": "6190:6:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6198:4:8",
																							"type": "",
																							"value": "0x0b"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6204:4:8",
																							"type": "",
																							"value": "0x16"
																						}
																					],
																					"functionName": {
																						"name": "create",
																						"nodeType": "YulIdentifier",
																						"src": "6183:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6183:26:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "6176:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6176:34:8"
																		},
																		"nodeType": "YulIf",
																		"src": "6173:224:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "GAS_STIPEND_NO_GRIEF",
																				"nodeType": "YulIdentifier",
																				"src": "5740:20:8"
																			},
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "5762:2:8"
																			},
																			{
																				"name": "amount",
																				"nodeType": "YulIdentifier",
																				"src": "5766:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5774:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5780:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5786:4:8",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5792:4:8",
																				"type": "",
																				"value": "0x00"
																			}
																		],
																		"functionName": {
																			"name": "call",
																			"nodeType": "YulIdentifier",
																			"src": "5735:4:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5735:62:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5728:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5728:70:8"
															},
															"nodeType": "YulIf",
															"src": "5725:686:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1667,
														"isOffset": false,
														"isSlot": false,
														"src": "5740:20:8",
														"valueSize": 1
													},
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": false,
														"src": "5427:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": false,
														"src": "5766:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1694,
														"isOffset": false,
														"isSlot": false,
														"src": "6190:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1692,
														"isOffset": false,
														"isSlot": false,
														"src": "5762:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1692,
														"isOffset": false,
														"isSlot": false,
														"src": "5830:2:8",
														"valueSize": 1
													}
												],
												"id": 1697,
												"nodeType": "InlineAssembly",
												"src": "5335:1086:8"
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "4608:513:8",
										"text": "@dev Force sends `amount` (in wei) ETH to `to`, with a gas stipend\n equal to `GAS_STIPEND_NO_GRIEF`. This gas stipend is a reasonable default\n for 99% of cases and can be overridden with the three-argument version of this\n function if necessary.\n If sending via the normal procedure fails, force sends the ETH by\n creating a temporary contract which uses `SELFDESTRUCT` to force send the ETH.\n Reverts if the current contract has insufficient balance."
									},
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceSafeTransferETH",
									"nameLocation": "5135:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5164:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "5156:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5176:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "5168:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5168:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:28:8"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5193:0:8"
									},
									"scope": 1802,
									"src": "5126:1301:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "6949:221:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7011:153:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7091:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "gasStipend",
																		"nodeType": "YulIdentifier",
																		"src": "7107:10:8"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "7119:2:8"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "7123:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7131:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7143:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7149:4:8",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nodeType": "YulIdentifier",
																	"src": "7102:4:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:52:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "7091:7:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1704,
														"isOffset": false,
														"isSlot": false,
														"src": "7123:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1706,
														"isOffset": false,
														"isSlot": false,
														"src": "7107:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1709,
														"isOffset": false,
														"isSlot": false,
														"src": "7091:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1702,
														"isOffset": false,
														"isSlot": false,
														"src": "7119:2:8",
														"valueSize": 1
													}
												],
												"id": 1711,
												"nodeType": "InlineAssembly",
												"src": "7002:162:8"
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "6433:383:8",
										"text": "@dev Sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n The `gasStipend` can be set to a low enough value to prevent\n storage writes or gas griefing.\n Simply use `gasleft()` for `gasStipend` if you don't need a gas stipend.\n Note: Does NOT revert upon failure.\n Returns whether the transfer of ETH is successful instead."
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferETH",
									"nameLocation": "6830:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6857:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "6849:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6849:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6869:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "6861:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6861:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "gasStipend",
												"nameLocation": "6885:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "6877:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6877:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6848:48:8"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6936:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "6931:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6931:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6930:14:8"
									},
									"scope": 1802,
									"src": "6821:349:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "7763:1287:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7825:1219:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7839:20:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7854:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7848:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7848:11:8"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "7843:1:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7914:4:8",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "7920:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7907:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7907:20:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7907:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "7985:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7972:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7972:16:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7972:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8036:4:8",
																		"type": "",
																		"value": "0x2c"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8046:2:8",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "8050:4:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8042:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8042:13:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8029:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8029:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8029:27:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8193:4:8",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8199:34:8",
																		"type": "",
																		"value": "0x23b872dd000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8186:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8186:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8186:48:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8695:212:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8794:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8800:10:8",
																					"type": "",
																					"value": "0x7939f424"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8787:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8787:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8787:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8882:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8888:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8875:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8875:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8875:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8559:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8553:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8553:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8566:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "8550:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8550:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "8577:14:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8577:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "8570:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8570:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "8547:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8547:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "8622:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8622:5:8"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "8629:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8636:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8639:4:8",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8645:4:8",
																						"type": "",
																						"value": "0x64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8651:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8657:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nodeType": "YulIdentifier",
																					"src": "8617:4:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8617:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8275:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8275:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8251:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8251:443:8"
															},
															"nodeType": "YulIf",
															"src": "8248:659:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8928:4:8",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8934:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8921:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8921:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8921:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8990:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8983:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8983:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8983:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1722,
														"isOffset": false,
														"isSlot": false,
														"src": "7920:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1718,
														"isOffset": false,
														"isSlot": false,
														"src": "8050:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1720,
														"isOffset": false,
														"isSlot": false,
														"src": "7985:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1716,
														"isOffset": false,
														"isSlot": false,
														"src": "8629:5:8",
														"valueSize": 1
													}
												],
												"id": 1725,
												"nodeType": "InlineAssembly",
												"src": "7816:1228:8"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "7459:207:8",
										"text": "@dev Sends `amount` of ERC20 `token` from `from` to `to`.\n Reverts upon failure.\n The `from` account must have at least `amount` approved for\n the current contract to manage."
									},
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "7680:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7705:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "7697:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7697:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7720:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "7712:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7734:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "7726:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7726:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7746:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "7738:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7696:57:8"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7763:0:8"
									},
									"scope": 1802,
									"src": "7671:1379:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "9390:1948:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9452:1880:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9466:20:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9481:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9475:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9475:11:8"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "9470:1:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9541:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "9547:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9534:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9534:16:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9534:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9598:4:8",
																		"type": "",
																		"value": "0x2c"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9608:2:8",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "from",
																				"nodeType": "YulIdentifier",
																				"src": "9612:4:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9604:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9604:13:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9591:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9591:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9591:27:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9736:4:8",
																		"type": "",
																		"value": "0x0c"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9742:34:8",
																		"type": "",
																		"value": "0x70a08231000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9729:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9729:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9729:48:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10062:212:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10161:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10167:10:8",
																					"type": "",
																					"value": "0x7939f424"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10154:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10154:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10154:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10249:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10255:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10242:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10242:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10242:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "9905:14:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9905:16:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9923:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "9902:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9902:26:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "9992:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9992:5:8"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "9999:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10006:4:8",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10012:4:8",
																						"type": "",
																						"value": "0x24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10018:4:8",
																						"type": "",
																						"value": "0x60"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10024:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nodeType": "YulIdentifier",
																					"src": "9981:10:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9981:48:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9817:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9817:230:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9793:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9793:268:8"
															},
															"nodeType": "YulIf",
															"src": "9790:484:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10382:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10388:10:8",
																		"type": "",
																		"value": "0x23b872dd"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10375:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10375:24:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10375:24:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10501:21:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10517:4:8",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10511:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10511:11:8"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10983:212:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11082:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11088:10:8",
																					"type": "",
																					"value": "0x7939f424"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11075:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11075:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11075:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11170:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11176:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11163:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11163:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11163:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10847:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "10841:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10841:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10854:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "10838:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10838:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "10865:14:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10865:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "10858:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10858:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "10835:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10835:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "10910:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10910:5:8"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "10917:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10924:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10927:4:8",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10933:4:8",
																						"type": "",
																						"value": "0x64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10939:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10945:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nodeType": "YulIdentifier",
																					"src": "10905:4:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10905:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10563:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10539:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10539:443:8"
															},
															"nodeType": "YulIf",
															"src": "10536:659:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11216:4:8",
																		"type": "",
																		"value": "0x60"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11222:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11209:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11209:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11209:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11278:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "11284:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11271:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11271:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1737,
														"isOffset": false,
														"isSlot": false,
														"src": "10501:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1732,
														"isOffset": false,
														"isSlot": false,
														"src": "9612:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "9547:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1730,
														"isOffset": false,
														"isSlot": false,
														"src": "10917:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1730,
														"isOffset": false,
														"isSlot": false,
														"src": "9999:5:8",
														"valueSize": 1
													}
												],
												"id": 1739,
												"nodeType": "InlineAssembly",
												"src": "9443:1889:8"
											}
										]
									},
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "9056:205:8",
										"text": "@dev Sends all of ERC20 `token` from `from` to `to`.\n Reverts upon failure.\n The `from` account must have their entire balance approved for\n the current contract to manage."
									},
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferAllFrom",
									"nameLocation": "9275:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9303:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "9295:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9295:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9318:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "9310:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9310:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9332:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "9324:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9324:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9294:41:8"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9378:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "9370:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9369:16:8"
									},
									"scope": 1802,
									"src": "9266:2072:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1752,
										"nodeType": "Block",
										"src": "11528:1115:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "11590:1047:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11611:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "11617:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11604:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11604:16:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11604:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11668:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "11674:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11661:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11661:20:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11661:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11808:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11814:34:8",
																		"type": "",
																		"value": "0xa9059cbb000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11801:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11801:48:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12310:208:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12405:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12411:10:8",
																					"type": "",
																					"value": "0x90b8ec18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12398:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12398:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12398:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12493:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12499:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12486:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12486:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12486:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12174:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "12168:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12168:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12181:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "12165:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12165:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "12192:14:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12192:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "12185:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12185:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "12162:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12162:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "12237:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12237:5:8"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "12244:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12251:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12254:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12260:4:8",
																						"type": "",
																						"value": "0x44"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12266:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12272:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nodeType": "YulIdentifier",
																					"src": "12232:4:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12232:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11890:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11890:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11866:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11866:443:8"
															},
															"nodeType": "YulIf",
															"src": "11863:655:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12619:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12625:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12612:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12612:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12612:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1748,
														"isOffset": false,
														"isSlot": false,
														"src": "11674:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1746,
														"isOffset": false,
														"isSlot": false,
														"src": "11617:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1744,
														"isOffset": false,
														"isSlot": false,
														"src": "12244:5:8",
														"valueSize": 1
													}
												],
												"id": 1751,
												"nodeType": "InlineAssembly",
												"src": "11581:1056:8"
											}
										]
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "11344:105:8",
										"text": "@dev Sends `amount` of ERC20 `token` from the current contract to `to`.\n Reverts upon failure."
									},
									"id": 1753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "11463:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "11484:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "11476:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11476:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11499:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "11491:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11491:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11511:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "11503:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11503:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11475:43:8"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11528:0:8"
									},
									"scope": 1802,
									"src": "11454:1189:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "12840:1842:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12902:1774:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12923:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12929:10:8",
																		"type": "",
																		"value": "0x70a08231"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12916:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12916:24:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12916:24:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13016:4:8",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nodeType": "YulIdentifier",
																			"src": "13022:7:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13022:9:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13009:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13009:23:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13009:23:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13363:208:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13458:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13464:10:8",
																					"type": "",
																					"value": "0x90b8ec18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13451:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13451:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13451:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13546:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13552:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13539:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13539:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13539:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "13206:14:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13206:16:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13224:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "13203:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13203:26:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "13293:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13293:5:8"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "13300:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13307:4:8",
																						"type": "",
																						"value": "0x1c"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13313:4:8",
																						"type": "",
																						"value": "0x24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13319:4:8",
																						"type": "",
																						"value": "0x34"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13325:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nodeType": "YulIdentifier",
																					"src": "13282:10:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13282:48:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13118:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13118:230:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13094:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13094:268:8"
															},
															"nodeType": "YulIf",
															"src": "13091:480:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13592:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "13598:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13585:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13585:16:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13585:16:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13731:21:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13747:4:8",
																		"type": "",
																		"value": "0x34"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13741:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13741:11:8"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nodeType": "YulIdentifier",
																	"src": "13731:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13847:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13853:34:8",
																		"type": "",
																		"value": "0xa9059cbb000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13840:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13840:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13840:48:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14349:208:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14444:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14450:10:8",
																					"type": "",
																					"value": "0x90b8ec18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14437:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14437:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14437:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14532:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14538:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14525:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14525:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14525:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14213:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "14207:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14207:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14220:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "14204:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14204:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "14231:14:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14231:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "14224:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14224:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "14201:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14201:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "14276:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14276:5:8"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "14283:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14290:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14293:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14299:4:8",
																						"type": "",
																						"value": "0x44"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14305:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14311:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nodeType": "YulIdentifier",
																					"src": "14271:4:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14271:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13929:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13929:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13905:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13905:443:8"
															},
															"nodeType": "YulIf",
															"src": "13902:655:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14658:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14664:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14651:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14651:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14651:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1761,
														"isOffset": false,
														"isSlot": false,
														"src": "13731:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1758,
														"isOffset": false,
														"isSlot": false,
														"src": "13598:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1756,
														"isOffset": false,
														"isSlot": false,
														"src": "13300:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1756,
														"isOffset": false,
														"isSlot": false,
														"src": "14283:5:8",
														"valueSize": 1
													}
												],
												"id": 1763,
												"nodeType": "InlineAssembly",
												"src": "12893:1783:8"
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "12649:100:8",
										"text": "@dev Sends all of ERC20 `token` from the current contract to `to`.\n Reverts upon failure."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferAll",
									"nameLocation": "12763:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "12787:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "12779:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12779:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12802:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "12794:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12794:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12778:27:8"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12832:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "12824:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12824:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12823:16:8"
									},
									"scope": 1802,
									"src": "12754:1928:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "14889:1113:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14951:1045:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14972:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "14978:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14965:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14965:16:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14965:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15029:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "15035:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15022:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15022:20:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15022:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15168:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15174:34:8",
																		"type": "",
																		"value": "0x095ea7b3000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15161:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15161:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15161:48:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15670:207:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15764:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15770:10:8",
																					"type": "",
																					"value": "0x3e3f8f73"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15757:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15757:24:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15757:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15852:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15858:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15845:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15845:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15845:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15534:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "15528:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15528:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15541:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "15525:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15525:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "15552:14:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15552:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "15545:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15545:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "15522:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15522:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "15597:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15597:5:8"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "15604:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15611:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15614:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15620:4:8",
																						"type": "",
																						"value": "0x44"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15626:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15632:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nodeType": "YulIdentifier",
																					"src": "15592:4:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15592:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15250:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15250:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15226:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15226:443:8"
															},
															"nodeType": "YulIf",
															"src": "15223:654:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15984:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15971:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15971:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15971:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "15035:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1770,
														"isOffset": false,
														"isSlot": false,
														"src": "14978:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1768,
														"isOffset": false,
														"isSlot": false,
														"src": "15604:5:8",
														"valueSize": 1
													}
												],
												"id": 1775,
												"nodeType": "InlineAssembly",
												"src": "14942:1054:8"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "14688:123:8",
										"text": "@dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n Reverts upon failure."
									},
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "14825:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14845:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "14837:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14837:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14860:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "14852:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14852:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14872:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "14864:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14864:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14836:43:8"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14889:0:8"
									},
									"scope": 1802,
									"src": "14816:1186:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "16395:1777:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16457:1709:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16478:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "to",
																		"nodeType": "YulIdentifier",
																		"src": "16484:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16471:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16471:16:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16471:16:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16535:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"name": "amount",
																		"nodeType": "YulIdentifier",
																		"src": "16541:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16528:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16528:20:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16528:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16674:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16680:34:8",
																		"type": "",
																		"value": "0x095ea7b3000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16667:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16667:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16667:48:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17176:871:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17201:4:8",
																					"type": "",
																					"value": "0x34"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17207:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17194:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17194:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17194:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17262:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17268:34:8",
																					"type": "",
																					"value": "0x095ea7b3000000000000000000000000"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17255:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17255:48:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17255:48:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "gas",
																								"nodeType": "YulIdentifier",
																								"src": "17453:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17453:5:8"
																						},
																						{
																							"name": "token",
																							"nodeType": "YulIdentifier",
																							"src": "17460:5:8"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17467:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17470:4:8",
																							"type": "",
																							"value": "0x10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17476:4:8",
																							"type": "",
																							"value": "0x44"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17482:4:8",
																							"type": "",
																							"value": "0x00"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17488:4:8",
																							"type": "",
																							"value": "0x00"
																						}
																					],
																					"functionName": {
																						"name": "call",
																						"nodeType": "YulIdentifier",
																						"src": "17448:4:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17448:45:8"
																				}
																			],
																			"functionName": {
																				"name": "pop",
																				"nodeType": "YulIdentifier",
																				"src": "17444:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17444:50:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17444:50:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17518:4:8",
																					"type": "",
																					"value": "0x34"
																				},
																				{
																					"name": "amount",
																					"nodeType": "YulIdentifier",
																					"src": "17524:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17511:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17511:20:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17511:20:8"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "17806:227:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17908:4:8",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17914:10:8",
																								"type": "",
																								"value": "0x3e3f8f73"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nodeType": "YulIdentifier",
																							"src": "17901:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17901:24:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17901:24:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18004:4:8",
																								"type": "",
																								"value": "0x1c"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "18010:4:8",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "17997:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17997:18:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "17997:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nodeType": "YulLiteral",
																													"src": "17658:4:8",
																													"type": "",
																													"value": "0x00"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nodeType": "YulIdentifier",
																												"src": "17652:5:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "17652:11:8"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "17665:1:8",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "eq",
																										"nodeType": "YulIdentifier",
																										"src": "17649:2:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "17649:18:8"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "returndatasize",
																												"nodeType": "YulIdentifier",
																												"src": "17676:14:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "17676:16:8"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "17669:6:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "17669:24:8"
																								}
																							],
																							"functionName": {
																								"name": "or",
																								"nodeType": "YulIdentifier",
																								"src": "17646:2:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17646:48:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "gas",
																										"nodeType": "YulIdentifier",
																										"src": "17725:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "17725:5:8"
																								},
																								{
																									"name": "token",
																									"nodeType": "YulIdentifier",
																									"src": "17732:5:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "17739:1:8",
																									"type": "",
																									"value": "0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "17742:4:8",
																									"type": "",
																									"value": "0x10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "17748:4:8",
																									"type": "",
																									"value": "0x44"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "17754:4:8",
																									"type": "",
																									"value": "0x00"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "17760:4:8",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "call",
																								"nodeType": "YulIdentifier",
																								"src": "17720:4:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17720:45:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "17617:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17617:170:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "17589:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17589:216:8"
																		},
																		"nodeType": "YulIf",
																		"src": "17586:447:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "17040:4:8",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "17034:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17034:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17047:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "eq",
																							"nodeType": "YulIdentifier",
																							"src": "17031:2:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17031:18:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nodeType": "YulIdentifier",
																									"src": "17058:14:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17058:16:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "17051:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17051:24:8"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "17028:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17028:48:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "17103:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17103:5:8"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "17110:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17117:1:8",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17120:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17126:4:8",
																						"type": "",
																						"value": "0x44"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17132:4:8",
																						"type": "",
																						"value": "0x00"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17138:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "call",
																					"nodeType": "YulIdentifier",
																					"src": "17098:4:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17098:45:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16756:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16756:405:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16732:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16732:443:8"
															},
															"nodeType": "YulIf",
															"src": "16729:1318:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18148:4:8",
																		"type": "",
																		"value": "0x34"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18154:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18141:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18141:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18141:15:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1784,
														"isOffset": false,
														"isSlot": false,
														"src": "16541:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1784,
														"isOffset": false,
														"isSlot": false,
														"src": "17524:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1782,
														"isOffset": false,
														"isSlot": false,
														"src": "16484:2:8",
														"valueSize": 1
													},
													{
														"declaration": 1780,
														"isOffset": false,
														"isSlot": false,
														"src": "17110:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1780,
														"isOffset": false,
														"isSlot": false,
														"src": "17460:5:8",
														"valueSize": 1
													},
													{
														"declaration": 1780,
														"isOffset": false,
														"isSlot": false,
														"src": "17732:5:8",
														"valueSize": 1
													}
												],
												"id": 1787,
												"nodeType": "InlineAssembly",
												"src": "16448:1718:8"
											}
										]
									},
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "16008:300:8",
										"text": "@dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n If the initial attempt to approve fails, attempts to reset the approved amount to zero,\n then retries the approval again (some tokens, e.g. USDT, requires this).\n Reverts upon failure."
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApproveWithRetry",
									"nameLocation": "16322:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16351:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "16343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16343:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16366:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "16358:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16378:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "16370:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16370:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16342:43:8"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16395:0:8"
									},
									"scope": 1802,
									"src": "16313:1859:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "18389:632:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18451:564:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18472:4:8",
																		"type": "",
																		"value": "0x14"
																	},
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "18478:7:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18465:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18465:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18465:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18607:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18613:34:8",
																		"type": "",
																		"value": "0x70a08231000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18600:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18600:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18600:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18661:344:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18718:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "18712:5:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18712:11:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "18837:14:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18837:16:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18855:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "18834:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18834:26:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "gas",
																							"nodeType": "YulIdentifier",
																							"src": "18928:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18928:5:8"
																					},
																					{
																						"name": "token",
																						"nodeType": "YulIdentifier",
																						"src": "18935:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18942:4:8",
																						"type": "",
																						"value": "0x10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18948:4:8",
																						"type": "",
																						"value": "0x24"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18954:4:8",
																						"type": "",
																						"value": "0x20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18960:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "staticcall",
																					"nodeType": "YulIdentifier",
																					"src": "18917:10:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18917:48:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18745:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18745:242:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18687:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18687:318:8"
															},
															"variableNames": [
																{
																	"name": "amount",
																	"nodeType": "YulIdentifier",
																	"src": "18661:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1794,
														"isOffset": false,
														"isSlot": false,
														"src": "18478:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1797,
														"isOffset": false,
														"isSlot": false,
														"src": "18661:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1792,
														"isOffset": false,
														"isSlot": false,
														"src": "18935:5:8",
														"valueSize": 1
													}
												],
												"id": 1799,
												"nodeType": "InlineAssembly",
												"src": "18442:573:8"
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "18178:116:8",
										"text": "@dev Returns the amount of ERC20 `token` owned by `account`.\n Returns zero if the `token` does not exist."
									},
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "18308:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18326:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "18318:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18318:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18341:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "18333:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18333:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18317:32:8"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18381:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "18373:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18373:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18372:16:8"
									},
									"scope": 1802,
									"src": "18299:722:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1803,
							"src": "596:18427:8",
							"usedErrors": [
								1650,
								1653,
								1656,
								1659
							]
						}
					],
					"src": "32:18992:8"
				},
				"id": 8
			},
			"src/YeeterStrategy.sol": {
				"ast": {
					"absolutePath": "src/YeeterStrategy.sol",
					"exportedSymbols": {
						"BaseStrategy": [
							1644
						],
						"IAllo": [
							358
						],
						"IRegistry": [
							550
						],
						"YeeterStrategy": [
							2066
						]
					},
					"id": 2067,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IAllo.sol",
							"file": "allo/contracts/core/interfaces/IAllo.sol",
							"id": 1806,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2067,
							"sourceUnit": 359,
							"src": "192:63:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1805,
										"name": "IAllo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 358,
										"src": "200:5:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/core/interfaces/IRegistry.sol",
							"file": "allo/contracts/core/interfaces/IRegistry.sol",
							"id": 1808,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2067,
							"sourceUnit": 551,
							"src": "256:71:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1807,
										"name": "IRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 550,
										"src": "264:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/allo-v2/contracts/strategies/BaseStrategy.sol",
							"file": "allo/contracts/strategies/BaseStrategy.sol",
							"id": 1810,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2067,
							"sourceUnit": 1645,
							"src": "347:72:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1809,
										"name": "BaseStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1644,
										"src": "355:12:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1811,
										"name": "BaseStrategy",
										"nameLocations": [
											"449:12:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "449:12:9"
									},
									"id": 1812,
									"nodeType": "InheritanceSpecifier",
									"src": "449:12:9"
								}
							],
							"canonicalName": "YeeterStrategy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2066,
							"linearizedBaseContracts": [
								2066,
								1644,
								810,
								1038,
								827,
								717
							],
							"name": "YeeterStrategy",
							"nameLocation": "431:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "fb765715",
									"id": 1814,
									"name": "INPUT_LENGTH_MISMATCH",
									"nameLocation": "474:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:2:9"
									},
									"src": "468:30:9"
								},
								{
									"errorSelector": "15694268",
									"id": 1816,
									"name": "NOOP",
									"nameLocation": "509:4:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:9"
									},
									"src": "503:13:9"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "588:2:9",
										"statements": []
									},
									"id": 1826,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1821,
													"name": "_allo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1818,
													"src": "562:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"hexValue": "596565746572205374726174656779",
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "569:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_89171d18e67cbe4481cfd22b9a645597587ab381008f2328a3dd393ac37b329d",
														"typeString": "literal_string \"Yeeter Strategy\""
													},
													"value": "Yeeter Strategy"
												}
											],
											"id": 1823,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1820,
												"name": "BaseStrategy",
												"nameLocations": [
													"549:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1644,
												"src": "549:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "549:38:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "_allo",
												"nameLocation": "542:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "534:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:15:9"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:0:9"
									},
									"scope": 2066,
									"src": "522:68:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "679:87:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1835,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "709:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1834,
														"name": "__BaseStrategy_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "689:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "689:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "689:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1839,
															"name": "_poolId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "744:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1840,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "753:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1838,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "732:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,bytes memory)"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "732:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1842,
												"nodeType": "EmitStatement",
												"src": "727:32:9"
											}
										]
									},
									"functionSelector": "edd146cc",
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "605:10:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1832,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "670:8:9"
									},
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "624:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "616:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "646:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "633:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "633:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:37:9"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:0:9"
									},
									"scope": 2066,
									"src": "596:170:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "1062:61:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1859,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "1088:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1860,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "1096:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1861,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "1108:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1858,
														"name": "_transferAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "1072:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1072:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1863,
												"nodeType": "ExpressionStatement",
												"src": "1072:44:9"
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "772:177:9",
										"text": "@notice Withdraw funds stuck on contract\n @param _token Token address\n @param _recipient Address to send the funds to\n @param _amount Amount to withdraw"
									},
									"functionSelector": "d9caed12",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1854,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1050:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1054:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1050:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1856,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1853,
												"name": "onlyPoolManager",
												"nameLocations": [
													"1034:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1107,
												"src": "1034:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1034:27:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "963:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "980:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "972:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "996:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "988:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1016:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "1008:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:53:9"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1062:0:9"
									},
									"scope": 2066,
									"src": "954:169:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1868,
										"nodeType": "Block",
										"src": "1156:2:9",
										"statements": []
									},
									"id": 1869,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1136:2:9"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:0:9"
									},
									"scope": 2066,
									"src": "1129:29:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1538
									],
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "1436:913:9",
										"statements": [
											{
												"assignments": [
													1885,
													1888,
													1890
												],
												"declarations": [
													{
														"constant": false,
														"id": 1885,
														"mutability": "mutable",
														"name": "_recipientIds",
														"nameLocation": "1491:13:9",
														"nodeType": "VariableDeclaration",
														"scope": 1964,
														"src": "1474:30:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1883,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1474:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1884,
															"nodeType": "ArrayTypeName",
															"src": "1474:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1888,
														"mutability": "mutable",
														"name": "_amounts",
														"nameLocation": "1523:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1964,
														"src": "1506:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1886,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1506:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1887,
															"nodeType": "ArrayTypeName",
															"src": "1506:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1890,
														"mutability": "mutable",
														"name": "_token",
														"nameLocation": "1541:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1964,
														"src": "1533:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1889,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1533:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1904,
												"initialValue": {
													"arguments": [
														{
															"id": 1893,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "1574:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"baseExpression": {
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1582:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1894,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1582:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1582:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "type(address[] memory)"
																	}
																},
																{
																	"baseExpression": {
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1593:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1897,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1593:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1593:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "type(uint256[] memory)"
																	}
																},
																{
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1604:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1900,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1604:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1902,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1581:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_address_$_$",
																"typeString": "tuple(type(address[] memory),type(uint256[] memory),type(address))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$_t_type$_t_array$_t_uint256_$dyn_memory_ptr_$_$_t_type$_t_address_$_$",
																"typeString": "tuple(type(address[] memory),type(uint256[] memory),type(address))"
															}
														],
														"expression": {
															"id": 1891,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "1563:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1567:6:9",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "1563:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1563:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_payable_$",
														"typeString": "tuple(address[] memory,uint256[] memory,address payable)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1473:140:9"
											},
											{
												"assignments": [
													1906
												],
												"declarations": [
													{
														"constant": false,
														"id": 1906,
														"mutability": "mutable",
														"name": "payoutLength",
														"nameLocation": "1632:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1964,
														"src": "1624:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1624:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1909,
												"initialValue": {
													"expression": {
														"id": 1907,
														"name": "_recipientIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "1647:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1661:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1647:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1624:43:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1910,
														"name": "payoutLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "1723:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1739:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1723:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1917,
												"nodeType": "IfStatement",
												"src": "1719:78:9",
												"trueBody": {
													"id": 1916,
													"nodeType": "Block",
													"src": "1742:55:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1913,
																	"name": "INPUT_LENGTH_MISMATCH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "1763:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1763:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1915,
															"nodeType": "RevertStatement",
															"src": "1756:30:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1918,
														"name": "payoutLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "1868:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1919,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "1884:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1893:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1884:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1868:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1926,
												"nodeType": "IfStatement",
												"src": "1864:92:9",
												"trueBody": {
													"id": 1925,
													"nodeType": "Block",
													"src": "1901:55:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1922,
																	"name": "INPUT_LENGTH_MISMATCH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1814,
																	"src": "1922:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1922:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1924,
															"nodeType": "RevertStatement",
															"src": "1915:30:9"
														}
													]
												}
											},
											{
												"body": {
													"id": 1962,
													"nodeType": "Block",
													"src": "2048:295:9",
													"statements": [
														{
															"assignments": [
																1934
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1934,
																	"mutability": "mutable",
																	"name": "_amount",
																	"nameLocation": "2070:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1962,
																	"src": "2062:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1933,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2062:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1938,
															"initialValue": {
																"baseExpression": {
																	"id": 1935,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1888,
																	"src": "2080:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1937,
																"indexExpression": {
																	"id": 1936,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "2089:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2080:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2062:29:9"
														},
														{
															"assignments": [
																1940
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1940,
																	"mutability": "mutable",
																	"name": "_recipientId",
																	"nameLocation": "2113:12:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1962,
																	"src": "2105:20:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1939,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2105:7:9",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1944,
															"initialValue": {
																"baseExpression": {
																	"id": 1941,
																	"name": "_recipientIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1885,
																	"src": "2128:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1943,
																"indexExpression": {
																	"id": 1942,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "2142:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2128:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2105:39:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1946,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "2175:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1947,
																		"name": "_recipientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "2183:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1948,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1934,
																		"src": "2197:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1945,
																	"name": "_transferAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "2159:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2159:46:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1950,
															"nodeType": "ExpressionStatement",
															"src": "2159:46:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1952,
																		"name": "_recipientId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "2234:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1953,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1934,
																		"src": "2248:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1954,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "2257:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1955,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1874,
																		"src": "2265:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1951,
																	"name": "Allocated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "2224:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address,address)"
																	}
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2224:49:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1957,
															"nodeType": "EmitStatement",
															"src": "2219:54:9"
														},
														{
															"id": 1961,
															"nodeType": "UncheckedBlock",
															"src": "2287:46:9",
															"statements": [
																{
																	"expression": {
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "2315:3:9",
																		"subExpression": {
																			"id": 1958,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1928,
																			"src": "2317:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1960,
																	"nodeType": "ExpressionStatement",
																	"src": "2315:3:9"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1930,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "2029:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1931,
														"name": "payoutLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "2033:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2029:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1963,
												"initializationExpression": {
													"assignments": [
														1928
													],
													"declarations": [
														{
															"constant": false,
															"id": 1928,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2026:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1963,
															"src": "2018:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1927,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2018:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1929,
													"nodeType": "VariableDeclarationStatement",
													"src": "2018:9:9"
												},
												"nodeType": "ForStatement",
												"src": "2013:330:9"
											}
										]
									},
									"documentation": {
										"id": 1870,
										"nodeType": "StructuredDocumentation",
										"src": "1164:160:9",
										"text": "@notice Allocate Yeeter funds to recipients\n @param _data Array of recipientAddress , Array of amounts and the token address to allocate the funds to"
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1878,
													"name": "_sender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1874,
													"src": "1427:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1877,
												"name": "onlyPoolManager",
												"nameLocations": [
													"1411:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1107,
												"src": "1411:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1411:24:9"
										}
									],
									"name": "_allocate",
									"nameLocation": "1338:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1876,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1402:8:9"
									},
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1361:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "1348:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1871,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1348:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "1376:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "1368:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:37:9"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:0:9"
									},
									"scope": 2066,
									"src": "1329:1020:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "2518:113:9",
										"statements": [
											{
												"assignments": [
													1981
												],
												"declarations": [
													{
														"constant": false,
														"id": 1981,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2539:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1995,
														"src": "2526:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1980,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2526:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1988,
												"initialValue": {
													"arguments": [
														{
															"id": 1984,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "2557:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1985,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "2572:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1986,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "2582:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1982,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2546:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2550:6:9",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "2546:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2546:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2526:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1990,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1981,
															"src": "2607:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 1991,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2613:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2617:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2613:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1989,
														"name": "_allocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1965
														],
														"referencedDeclaration": 1965,
														"src": "2597:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2597:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "2597:27:9"
											}
										]
									},
									"functionSelector": "44469f98",
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2506:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2510:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2506:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1978,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1975,
												"name": "onlyPoolManager",
												"nameLocations": [
													"2490:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1107,
												"src": "2490:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2490:27:9"
										}
									],
									"name": "allocate",
									"nameLocation": "2397:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "2423:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "2406:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1966,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2406:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1967,
													"nodeType": "ArrayTypeName",
													"src": "2406:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "2455:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "2438:25:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1969,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2438:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1970,
													"nodeType": "ArrayTypeName",
													"src": "2438:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2473:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "2465:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2405:75:9"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:9"
									},
									"scope": 2066,
									"src": "2388:243:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1549
									],
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "2725:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2007,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "2742:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2742:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2009,
												"nodeType": "RevertStatement",
												"src": "2735:13:9"
											}
										]
									},
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distribute",
									"nameLocation": "2646:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2005,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2716:8:9"
									},
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "2658:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1997,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2658:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1998,
													"nodeType": "ArrayTypeName",
													"src": "2658:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "2676:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2000,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2676:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "2690:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2657:41:9"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2725:0:9"
									},
									"scope": 2066,
									"src": "2637:118:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1569
									],
									"body": {
										"id": 2023,
										"nodeType": "Block",
										"src": "2847:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2020,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "2864:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2864:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2022,
												"nodeType": "RevertStatement",
												"src": "2857:13:9"
											}
										]
									},
									"id": 2024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRecipientStatus",
									"nameLocation": "2770:19:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2015,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2821:8:9"
									},
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "2790:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:9:9"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "2839:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$563",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 2017,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2016,
														"name": "Status",
														"nameLocations": [
															"2839:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 563,
														"src": "2839:6:9"
													},
													"referencedDeclaration": 563,
													"src": "2839:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$563",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2838:8:9"
									},
									"scope": 2066,
									"src": "2761:116:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1520
									],
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "2965:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2032,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "2982:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2982:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2034,
												"nodeType": "RevertStatement",
												"src": "2975:13:9"
											}
										]
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidAllocator",
									"nameLocation": "2892:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2028,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2941:8:9"
									},
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2910:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2910:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2909:9:9"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2959:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2959:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2958:6:9"
									},
									"scope": 2066,
									"src": "2883:112:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1530
									],
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "3096:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2046,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "3113:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3113:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2048,
												"nodeType": "RevertStatement",
												"src": "3106:13:9"
											}
										]
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerRecipient",
									"nameLocation": "3010:18:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2042,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3069:8:9"
									},
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "3029:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2037,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3029:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "3043:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3043:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3028:23:9"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "3087:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3087:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3086:9:9"
									},
									"scope": 2066,
									"src": "3001:125:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1560
									],
									"body": {
										"id": 2064,
										"nodeType": "Block",
										"src": "3237:30:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2061,
														"name": "NOOP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "3254:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3254:6:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2063,
												"nodeType": "RevertStatement",
												"src": "3247:13:9"
											}
										]
									},
									"id": 2065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPayout",
									"nameLocation": "3141:10:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2056,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3197:8:9"
									},
									"parameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "3152:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "3161:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2053,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3161:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:23:9"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "3215:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PayoutSummary_$568_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary"
												},
												"typeName": {
													"id": 2058,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2057,
														"name": "PayoutSummary",
														"nameLocations": [
															"3215:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 568,
														"src": "3215:13:9"
													},
													"referencedDeclaration": 568,
													"src": "3215:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PayoutSummary_$568_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3214:22:9"
									},
									"scope": 2066,
									"src": "3132:135:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2067,
							"src": "422:2847:9",
							"usedErrors": [
								723,
								726,
								729,
								732,
								735,
								738,
								741,
								744,
								747,
								750,
								753,
								756,
								759,
								762,
								765,
								768,
								771,
								774,
								777,
								780,
								783,
								786,
								789,
								792,
								795,
								800,
								803,
								806,
								809,
								838,
								1814,
								1816
							]
						}
					],
					"src": "32:3237:9"
				},
				"id": 9
			}
		}
	}
}